<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="InfoTimeBarContent">
		<param name="top">0</param>
		<param name="width">740</param>
		<definition>
			<control type="group">
				<top>$PARAM[top]</top>
				<control type="label">
					<visible>![Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)] + !String.IsEmpty(Container(9000).ListItem.Property(InfoLine))</visible>
					<left>5</left>
					<width>$PARAM[width]</width>
					<height>38</height>
					<font>Font30_Reg</font>
					<label>$VAR[InfoLineVar]</label>
					<include>AnimationVisibleFade</include>
					<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				</control>
				<control type="grouplist">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</visible>
					<include>AnimationVisibleFade</include>
					<left>5</left>
					<width>$PARAM[width]</width>
					<height>40</height>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<itemgap>10</itemgap>
					<control type="image">
						<top>2</top>
						<width>36</width>
						<height>36</height>
						<texture colordiffuse="$VAR[TopbarIconColorVar]">$VAR[TopbarIconPathVar]$VAR[NowPlayingInfoBarStatusVar]</texture>
					</control>
					<control type="label">
						<label>$INFO[Player.Time]</label>
						<textcolor>$VAR[TopbarSubTextColorVar]</textcolor>
						<include>BreadcrumbsLabel</include>
					</control>
					<control type="fadelabel">
						<label>$INFO[Player.Title]</label>
						<label>$INFO[MusicPlayer.Artist]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasAudio + !String.IsEmpty(Musicplayer.Artist)</visible>
					</control>
					<control type="label">
						<label>$INFO[Player.Title]</label>
						<scroll>true</scroll>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasAudio + String.IsEmpty(Musicplayer.Artist)</visible>
					</control>
					<control type="fadelabel">
						<label>$INFO[Videoplayer.Season,S]$INFO[Videoplayer.Episode,E, ]$INFO[Videoplayer.Title]</label>
						<label>$INFO[Videoplayer.TVShowTitle]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + !String.IsEmpty(Videoplayer.TVShowTitle)</visible>
					</control>
					<control type="fadelabel">
						<label>$INFO[Videoplayer.ChannelName]</label>
						<label>$INFO[Videoplayer.Title]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + !String.IsEmpty(VideoPlayer.ChannelName)</visible>
					</control>
					<control type="fadelabel">
						<label>$INFO[Videoplayer.Title]</label>
						<label>$INFO[VideoPlayer.Artist]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + !String.IsEmpty(Videoplayer.Artist)</visible>
					</control>
					<control type="label">
						<label>$INFO[Videoplayer.Title]</label>
						<include>BreadcrumbsLabel</include>
						<visible>Player.HasVideo + String.IsEmpty(Videoplayer.TVShowTitle) + String.IsEmpty(VideoPlayer.ChannelName) + String.IsEmpty(Videoplayer.Artist)</visible>
					</control>
				</control>
				<control type="grouplist">
					<include>AnimationVisibleFade</include>
					<right>5</right>
					<width>$PARAM[width]</width>
					<orientation>horizontal</orientation>
					<align>right</align>
					<usecontrolcoords>true</usecontrolcoords>
					<itemgap>0</itemgap>
					<control type="multiimage">
						<left>20</left>
						<width>40</width>
						<height>40</height>
						<imagepath colordiffuse="$VAR[MainMenuWeatherIconColorVar]">$INFO[Skin.String(WeatherIcons.path)]$INFO[Weather.FanartCode]$INFO[Skin.String(WeatherIcons.ext)]</imagepath>
						<timeperimage>70</timeperimage>
						<fadetime>1</fadetime>
						<randomize>false</randomize>
						<include>AnimationVisibleFade</include>
						<visible>!String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<label>$INFO[Window(weather).Property(Current.Temperature), ]$INFO[System.TemperatureUnits]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
						<visible>!String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
						<label>$INFO[System.Date,  ]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
					</control>
					<control type="label">
						<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
						<label>$INFO[System.Time,  ]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="InfoTimeBar">
		<control type="group">
			<top>760</top>
			<visible>!Skin.HasSetting(InfoBarTop) | Skin.String(MainMenuPosition,top)</visible>
			<include>AnimationVisibleFade</include>
			<include content="AnimationSlideTopWindow">
				<param name="opencondition">Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)</param>
				<param name="closecondition">Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)</param>
			</include>
			<include content="AnimationSlideBottomWindow">
				<param name="opencondition">String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)</param>
				<param name="closecondition">String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)</param>
			</include>
			<animation effect="slide" end="0,-716" time="200" condition="Skin.String(MainMenuPosition,high)">Conditional</animation>
			<animation effect="slide" end="0,-807" time="200" condition="Skin.String(MainMenuPosition,top)">Conditional</animation>
			<animation effect="slide" end="0,91" time="200" condition="Skin.String(MainMenuPosition,bottom)">Conditional</animation>
			<animation effect="slide" end="0,-42" time="200" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
			<control type="group">
				<visible>String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipx="true" border="1,1,70,1" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<control type="image">
					<right>0</right>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture border="70,1,1,1" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</visible>
					<include>AnimationVisibleFade</include>
					<top>47</top>
					<width>740</width>
					<height>41</height>
					<info>Player.ProgressCache</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</visible>
					<include>AnimationVisibleFade</include>
					<top>47</top>
					<width>740</width>
					<height>41</height>
					<info>Player.Progress</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
				</include>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipy="true" colordiffuse="$VAR[MainMenuSystemBarColorVar]" border="1">$VAR[MainMenuSystemBarVar]</texture>
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,wide)</visible>
					<include>AnimationVisibleFade</include>
					<top>47</top>
					<width>1920</width>
					<height>41</height>
					<info>Player.ProgressCache</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,wide)</visible>
					<include>AnimationVisibleFade</include>
					<top>47</top>
					<width>1920</width>
					<height>41</height>
					<info>Player.Progress</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,shadow)</visible>
					<include>AnimationVisibleFade</include>
					<width>1920</width>
					<height>87</height>
					<info>Player.ProgressCache</info>
					<texturebg>panels/mainmenu/shadow-bar-empty.png</texturebg>
					<lefttexture />
					<midtexture flipy="true" colordiffuse="$VAR[TopbarNowPlayingColorVar]">panels/mainmenu/shadow-bar20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,shadow)</visible>
					<include>AnimationVisibleFade</include>
					<width>1920</width>
					<height>87</height>
					<info>Player.Progress</info>
					<texturebg>panels/mainmenu/shadow-bar-empty.png</texturebg>
					<lefttexture />
					<midtexture flipy="true" colordiffuse="$VAR[TopbarNowPlayingColorVar]">panels/mainmenu/shadow-bar20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
					<param name="width">900</param>
				</include>
			</control>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(InfoBarTop) + !Skin.String(MainMenuPosition,top)</visible>
			<include content="AnimationSlideTopWindow">
				<param name="slide">88</param>
			</include>
			<include>AnimationVisibleFade</include>
			<control type="group">
				<visible>String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>810</width>
					<height>88</height>
					<texture flipx="true" flipy="true" border="1,1,70,1" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<control type="image">
					<right>0</right>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture border="70,1,1,1" flipy="true" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</visible>
					<include>AnimationVisibleFade</include>
					<width>740</width>
					<height>41</height>
					<info>Player.ProgressCache</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar)</visible>
					<include>AnimationVisibleFade</include>
					<width>740</width>
					<height>41</height>
					<info>Player.Progress</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<include>InfoTimeBarContent</include>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture colordiffuse="$VAR[MainMenuSystemBarColorVar]" border="1">$VAR[MainMenuSystemBarVar]</texture>
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,wide)</visible>
					<include>AnimationVisibleFade</include>
					<width>1920</width>
					<height>41</height>
					<info>Player.ProgressCache</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,wide)</visible>
					<include>AnimationVisibleFade</include>
					<width>1920</width>
					<height>41</height>
					<info>Player.Progress</info>
					<texturebg>colors/none.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">colors/white20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,shadow)</visible>
					<include>AnimationVisibleFade</include>
					<width>1920</width>
					<height>87</height>
					<info>Player.ProgressCache</info>
					<texturebg>panels/mainmenu/shadow-bar-empty.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">panels/mainmenu/shadow-bar20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<control type="progress">
					<visible>Player.HasMedia + Skin.HasSetting(NowplayingSystemBar) + Skin.String(MainMenuSystemBar.texture,shadow)</visible>
					<include>AnimationVisibleFade</include>
					<width>1920</width>
					<height>87</height>
					<info>Player.Progress</info>
					<texturebg>panels/mainmenu/shadow-bar-empty.png</texturebg>
					<lefttexture />
					<midtexture colordiffuse="$VAR[TopbarNowPlayingColorVar]">panels/mainmenu/shadow-bar20.png</midtexture>
					<righttexture></righttexture>
					<overlaytexture />
				</control>
				<include content="InfoTimeBarContent">
					<param name="width">900</param>
				</include>
			</control>
		</control>
	</include>
	<include name="RSSShortcuts">
		<control type="group">
			<top>1040</top>
			<include content="AnimationSlideBottomWindow">
				<param name="slide">88</param>
			</include>
			<control type="group">
				<visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
				<control type="image">
					<top>-48</top>
					<width>1920</width>
					<height>88</height>
					<texture flipy="true" border="1" colordiffuse="$VAR[MainMenuRSSBarColorVar]">$VAR[MainMenuRSSBarVar]</texture>
				</control>
				<control type="rss">
					<top>0</top>
					<width>1920</width>
					<height>38</height>
					<font>Font28_Reg</font>
					<urlset>1</urlset>
					<scrollspeed>10</scrollspeed>
					<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
					<headlinecolor>$VAR[MainMenuSubTextColorVar]</headlinecolor>
					<titlecolor>$VAR[MainMenuTextColorVar]</titlecolor>
				</control>
			</control>
			<control type="image">
				<animation effect="slide" start="0" end="0,140" time="200" condition="!ControlGroup(9003).HasFocus">Conditional</animation>
				<visible>!Skin.HasSetting(ShortCutDisablePower) | !Skin.HasSetting(ShortCutDisableSearch) | !Skin.HasSetting(ShortCutDisableFav) | !Skin.HasSetting(ShortCutDisableUpdate) | !Skin.HasSetting(ShortCutDisableDisc) | !Skin.HasSetting(ShortCutDisableEject)</visible>
				<bottom>0</bottom>
				<width>1920</width>
				<height>140</height>
				<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
			</control>
			<control type="grouplist" id="9003">
				<animation effect="slide" start="0" end="0,79" time="200" condition="!ControlGroup(9003).HasFocus">Conditional</animation>
				<visible>!Skin.HasSetting(ShortCutDisablePower) | !Skin.HasSetting(ShortCutDisableSearch) | !Skin.HasSetting(ShortCutDisableFav) | !Skin.HasSetting(ShortCutDisableUpdate) | !Skin.HasSetting(ShortCutDisableDisc) | !Skin.HasSetting(ShortCutDisableEject)</visible>
				<left>5</left>
				<bottom>9</bottom>
				<width>1920</width>
				<height>71</height>
				<onup condition="[Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)] + Control.IsVisible(90010)">90010</onup>
				<onup condition="[Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)] + !Control.IsVisible(90010)">9001</onup>
				<onup condition="String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)">9001</onup>
				<align>center</align>
				<orientation>horizontal</orientation>
				<control type="button" id="20">
					<visible>!Skin.HasSetting(ShortCutDisablePower)</visible>
					<label></label>
					<onclick>ActivateWindow(ShutdownMenu)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="21">
					<visible>Skin.HasSetting(ShortCutEnableVideos)</visible>
					<label></label>
					<onclick>ActivateWindow(videos,root)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="23">
					<visible>!Skin.HasSetting(ShortCutDisableSearch)</visible>
					<label></label>
					<onclick>ActivateWindow(1112)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="24">
					<visible>!Skin.HasSetting(ShortCutDisableFav)</visible>
					<label></label>
					<onclick>ActivateWindow(favourites)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="25">
					<visible>!Skin.HasSetting(ShortCutDisableUpdate)</visible>
					<label></label>
					<onclick>UpdateLibrary(video)</onclick>
					<onclick>UpdateLibrary(music)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="26">
					<visible>Skin.HasSetting(ShortCutEnableDisc) + System.HasMediadvd</visible>
					<label></label>
					<onclick>PlayDVD</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="27">
					<visible>Skin.HasSetting(ShortCutEnableDisc) + !System.HasMediadvd</visible>
					<label></label>
					<onclick />
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="28">
					<visible>Skin.HasSetting(ShortCutEnableEject)</visible>
					<description>Search</description>
					<label></label>
					<onclick>EjectTray()</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="22">
					<visible>Skin.HasSetting(ShortCutEnableSystem)</visible>
					<label></label>
					<onclick>ActivateWindow(settings)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
			</control>
		</control>
	</include>
	<include name="RSSShortcutsIcon">
		<width>70</width>
		<height>70</height>
		<align>center</align>
		<font>Font40_Icon</font>
		<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
		<focusedcolor>$VAR[MainMenuTextColorVar]</focusedcolor>
		<texturefocus border="20" colordiffuse="$VAR[MainMenuHighlightColorVar]">buttons/button.png</texturefocus>
		<texturenofocus border="20" colordiffuse="$VAR[MainMenuButtonColorVar]">buttons/button.png</texturenofocus>
	</include>
	<include name="MainMenu">
		<param name="listtype">wraplist</param>
		<definition>
			<control type="group">
				<width>1920</width>
				<top>848</top>
				<include content="AnimationSlideTopWindow">
					<param name="opencondition">Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)</param>
					<param name="closecondition">Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)</param>
				</include>
				<include content="AnimationSlideBottomWindow">
					<param name="opencondition">String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)</param>
					<param name="closecondition">String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)</param>
				</include>
				<animation effect="slide" end="0,-716" time="200" condition="Skin.String(MainMenuPosition,high)">Conditional</animation>
				<animation effect="slide" end="0,-807" time="200" condition="Skin.String(MainMenuPosition,top)">Conditional</animation>
				<animation effect="slide" end="0,91" time="200" condition="Skin.String(MainMenuPosition,bottom)">Conditional</animation>
				<animation effect="slide" end="0,-42" time="200" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
				<!-- Sub menu -->
				<control type="group">
					<top>100</top>
					<control type="image">
						<centerleft>50%</centerleft>
						<width>1808</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture border="70,0,70,0" colordiffuse="$VAR[MainMenuSubmenuBarColorVar]">panels/mainmenu/default-submenubar.png</texture>
						<visible>String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
					</control>
					<control type="image">
						<width>1920</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture colordiffuse="$VAR[MainMenuSubmenuBarColorVar]" border="1,0,1,0">$VAR[MainMenuSubmenuBarVar]</texture>
						<visible>!String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
					</control>
					<control type="fixedlist" id="9001">
						<centerleft>50%</centerleft>
						<width>1670</width>
						<height>80</height>
						<onleft>9010</onleft>
						<onright>9010</onright>
						<onup>9000</onup>
						<ondown condition="[Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)] + Control.IsVisible(90010)">90010</ondown>
						<ondown condition="[Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)] + !Control.IsVisible(90010)">9003</ondown>
						<ondown condition="String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)">9003</ondown>
						<orientation>horizontal</orientation>
						<focusposition>2</focusposition>
						<movement>2</movement>
						<scrolltime tween="cubic" easing="inout">200</scrolltime>
						<itemlayout width="334" height="41">
							<control type="label">
								<align>center</align>
								<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
								<font>Font30_Caps</font>
								<textoffsetx>20</textoffsetx>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</itemlayout>
						<focusedlayout width="334" height="41">
							<control type="group">
								<visible>Control.HasFocus(9001)</visible>
								<control type="image">
									<texture border="1" colordiffuse="$VAR[MainMenuHighlightColorVar]">buttons/list-select-focus.png</texture>
									<visible>!String.IsEqual(Skin.String(MainMenuSubmenuBar.texture),shadow)</visible>
								</control>
								<control type="image">
									<height>70</height>
									<texture border="1" colordiffuse="$VAR[MainMenuHighlightColorVar]">panels/mainmenu/shadow-bar-focus.png</texture>
									<visible>String.IsEqual(Skin.String(MainMenuSubmenuBar.texture),shadow)</visible>
								</control>
								<control type="label">
									<align>center</align>
									<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
									<font>Font30_Caps</font>
									<textoffsetx>20</textoffsetx>
									<label>$INFO[ListItem.Label]</label>
								</control>
							</control>
							<control type="label">
								<align>center</align>
								<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
								<font>Font30_Caps</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!Control.HasFocus(9001)</visible>
							</control>
						</focusedlayout>
						<content>
							<include>skinshortcuts-submenu</include>
						</content>
					</control>
				</control>
				<!-- Main menu -->
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuShadowColorVar]">panels/mainmenu/shadow.png</texture>
				</control>
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuStyleColorVar]" fallback="panels/mainmenu/default.png">$INFO[Skin.String(MainMenuStyle.texture)]</texture>
				</control>
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuTextureColorVar]">$VAR[MainMenuTextureVar]</texture>
				</control>
				<control type="$PARAM[listtype]" id="9000">
					<height>100</height>
					<width>3200</width>
					<onleft>9000</onleft>
					<onright>9000</onright>
					<onup condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Control.IsVisible(90010)">90010</onup>
					<onup condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + !Control.IsVisible(90010)">9050</onup>
					<onup condition="Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)">9050</onup>
					<ondown>SetFocus(9001,2)</ondown>
					<orientation>horizontal</orientation>
					<focusposition>3</focusposition>
					<scrolltime tween="quadratic">300</scrolltime>
					<animation effect="slide" end="-720,0" condition="!Skin.String(MainMenuStyle)">Conditional</animation>
					<animation effect="slide" end="-1280,0" condition="Skin.String(MainMenuStyle,wide)">Conditional</animation>
					<animation effect="slide" end="-384,0" condition="Skin.String(MainMenuStyle,iconswide) | Skin.String(MainMenuStyle,bigiconswide)">Conditional</animation>
					<itemlayout width="480" height="95" condition="!Skin.String(MainMenuStyle)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="480" height="95" condition="String.IsEmpty(Skin.String(MainMenuStyle))">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="640" height="95" condition="Skin.String(MainMenuStyle,wide)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="640" height="95" condition="Skin.String(MainMenuStyle,wide)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="274" height="100" condition="Skin.String(MainMenuStyle,icons)">
						<control type="image">
							<top>5</top>
							<height>60</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
						<control type="label">
							<top>67</top>
							<height>30</height>
							<align>center</align>
							<font>Font_MainMenu_Icons</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="274" height="100" condition="Skin.String(MainMenuStyle,icons)">
						<control type="group">
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
							<control type="image">
								<top>5</top>
								<height>60</height>
								<aspectratio align="center" aligny="center">keep</aspectratio>
								<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							</control>
							<control type="label">
								<top>67</top>
								<height>30</height>
								<align>center</align>
								<font>Font_MainMenu_Icons</font>
								<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
					</focusedlayout>
					<itemlayout width="384" height="100" condition="Skin.String(MainMenuStyle,iconswide)">
						<control type="image">
							<top>5</top>
							<height>60</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
						<control type="label">
							<top>67</top>
							<height>30</height>
							<align>center</align>
							<font>Font_MainMenu_Icons</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="384" height="100" condition="Skin.String(MainMenuStyle,iconswide)">
						<control type="group">
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
							<control type="image">
								<top>5</top>
								<height>60</height>
								<aspectratio align="center" aligny="center">keep</aspectratio>
								<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							</control>
							<control type="label">
								<top>67</top>
								<height>30</height>
								<align>center</align>
								<font>Font_MainMenu_Icons</font>
								<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
					</focusedlayout>
					<itemlayout width="274" height="100" condition="Skin.String(MainMenuStyle,bigicons)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
					</itemlayout>
					<focusedlayout width="274" height="100" condition="Skin.String(MainMenuStyle,bigicons)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="384" height="100" condition="Skin.String(MainMenuStyle,bigiconswide)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
					</itemlayout>
					<focusedlayout width="384" height="100" condition="Skin.String(MainMenuStyle,bigiconswide)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<content>
						<include>skinshortcuts-mainmenu</include>
					</content>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>1920</width>
					<height>100</height>
					<texture colordiffuse="$VAR[MainMenuGradientColorVar]">panels/mainmenu/gradient.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<!-- Widgets -->
	<include name="WidgetPosition">
		<animation effect="slide" end="0,274" time="200" condition="!Skin.HasSetting(WidgetHigh) + [Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)]">Conditional</animation>
		<animation effect="slide" end="0,91" time="200" condition="!Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,bottom)">Conditional</animation>
		<animation effect="slide" end="0,-42" time="200" condition="!Skin.HasSetting(WidgetHigh) + system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
		<animation effect="slide" end="0,42" time="200" condition="Skin.HasSetting(InfoBarTop) + [String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)]">Conditional</animation>
		<animation effect="slide" end="0,-358" time="200" condition="Skin.HasSetting(WidgetHigh) + [String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)]">Conditional</animation>
		<animation effect="slide" end="0,-84" time="200" condition="Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,high)">Conditional</animation>
		<animation effect="slide" end="0,-168" time="200" condition="Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,top)">Conditional</animation>
	</include>
	<include name="WidgetContainer">
		<include>WidgetPosition</include>
		<onfocus>SetProperty(SkinHelper.WidgetContainer,$PARAM[id],home)</onfocus>
		<itemlayout width="$PARAM[containerwidth]">
			<control type="image">
				<bordersize>10</bordersize>
				<texture colordiffuse="aa000000" border="10">buttons/widget-select-focus.png</texture>
			</control>
			<control type="image">
				<bordersize>$PARAM[border]</bordersize>
				<aspectratio align="center" aligny="center" scalediffuse="false">$PARAM[artworkaspect]</aspectratio>
				<texture diffuse="$PARAM[diffuse]" fallback="DefaultFile.png" colordiffuse="$VAR[MainMenuWidgetColorVar]">$PARAM[artwork]</texture>
			</control>
			<control type="image">
				<left>0</left>
				<right>0</right>
				<bottom>0</bottom>
				<height>100</height>
				<bordersize>10</bordersize>
				<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
				<visible>$PARAM[labelvisible]</visible>
			</control>
			<control type="label">
				<left>10</left>
				<right>10</right>
				<bottom>10</bottom>
				<height>50</height>
				<align>center</align>
				<font>Font29_Cond</font>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				<textoffsetx>5</textoffsetx>
				<label>$INFO[ListItem.Label]</label>
				<visible>$PARAM[labelvisible]</visible>
			</control>
			<control type="image">
				<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerwidth]">
			<control type="image">
				<texture colordiffuse="$VAR[MainMenuHighlightColorVar]" border="10">buttons/widget-select-focus.png</texture>
			</control>
			<control type="group">
				<animation  type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" center="auto" />
				</animation>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="aa000000" border="10">buttons/widget-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>$PARAM[border]</bordersize>
					<aspectratio align="center" aligny="center" scalediffuse="false">$PARAM[artworkaspect]</aspectratio>
					<texture diffuse="$PARAM[diffuse]" fallback="DefaultFile.png">$PARAM[artwork]</texture>
				</control>
				<control type="image">
					<left>0</left>
					<right>0</right>
					<bottom>0</bottom>
					<height>100</height>
					<bordersize>10</bordersize>
					<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
					<visible>$PARAM[labelvisible]</visible>
				</control>
				<control type="label">
					<left>10</left>
					<right>10</right>
					<bottom>10</bottom>
					<height>50</height>
					<align>center</align>
					<font>Font29_Cond</font>
					<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
					<textoffsetx>5</textoffsetx>
					<label>$INFO[ListItem.Label]</label>
					<visible>$PARAM[labelvisible]</visible>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetPosterInfoContainer">
		<include>WidgetPosition</include>
		<itemlayout width="$PARAM[containerwidth]">
			<control type="image">
				<bordersize>10</bordersize>
				<texture colordiffuse="ff000000" border="10">buttons/widget-select-focus.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font1]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="multiimage">
				<top>$PARAM[icontop]</top>
				<bottom>$PARAM[iconbottom]</bottom>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<imagepath>$INFO[ListItem.Icon]</imagepath>
				<timeperimage>70</timeperimage>
				<fadetime>1</fadetime>
				<randomize>false</randomize>
				<aspectratio aligny="top">keep</aspectratio>
			</control>
			<control type="label">
				<bottom>$PARAM[label2position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font2]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<bottom>$PARAM[label3position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font3]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(label3)]</label>
			</control>
			<control type="image">
				<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerwidth]">
			<control type="image">
				<texture colordiffuse="$VAR[MainMenuHighlightColorVar]" border="10">buttons/widget-select-focus.png</texture>
			</control>
			<control type="group">
				<animation  type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" center="auto" />
				</animation>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/widget-select-focus.png</texture>
				</control>
				<control type="label">
					<top>10</top>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font1]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="multiimage">
					<top>$PARAM[icontop]</top>
					<bottom>$PARAM[iconbottom]</bottom>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<imagepath>$INFO[ListItem.Icon]</imagepath>
					<timeperimage>70</timeperimage>
					<fadetime>1</fadetime>
					<randomize>false</randomize>
					<aspectratio aligny="top">keep</aspectratio>
				</control>
				<control type="label">
					<bottom>$PARAM[label2position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font2]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
				<control type="label">
					<bottom>$PARAM[label3position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font3]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Property(label3)]</label>
				</control>
				<control type="image">
					<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetFanartInfoContainer">
		<include>WidgetPosition</include>
		<itemlayout width="$PARAM[containerwidth]">
			<control type="multiimage">
				<top>10</top>
				<bottom>10</bottom>
				<left>10</left>
				<right>10</right>
				<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
				<imagepath diffuse="$PARAM[diffuse]" colordiffuse="$VAR[MainMenuWidgetColorVar]">$INFO[ListItem.Property(fanart)]</imagepath>
				<timeperimage>20000</timeperimage>
				<fadetime>1</fadetime>
				<randomize>false</randomize>
			</control>
			<control type="image">
				<bordersize>10</bordersize>
				<texture colordiffuse="ff000000" border="10">buttons/widget-select-focus.png</texture>
			</control>
			<control type="label">
				<bottom>$PARAM[label1position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font1]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<bottom>$PARAM[label2position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font2]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label2]</label>
			</control>
			<control type="label">
				<bottom>$PARAM[label3position]</bottom>
				<height>50</height>
				<align>center</align>
				<font>$PARAM[font3]</font>
				<textoffsetx>15</textoffsetx>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(label3)]</label>
			</control>
			<control type="image">
				<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerwidth]">
			<control type="image">
				<texture colordiffuse="$VAR[MainMenuHighlightColorVar]" border="10">buttons/widget-select-focus.png</texture>
			</control>
			<control type="group">
				<animation  type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" center="auto" />
				</animation>
				<control type="multiimage">
					<top>10</top>
					<bottom>10</bottom>
					<left>10</left>
					<right>10</right>
					<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
					<imagepath diffuse="$PARAM[diffuse]" colordiffuse="$VAR[MainMenuWidgetColorVar]">$INFO[ListItem.Property(fanart)]</imagepath>
					<timeperimage>20000</timeperimage>
					<fadetime>1</fadetime>
					<randomize>false</randomize>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/widget-select-focus.png</texture>
				</control>
				<control type="label">
					<bottom>$PARAM[label1position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font1]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="label">
					<bottom>$PARAM[label2position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font2]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label2]</label>
				</control>
				<control type="label">
					<bottom>$PARAM[label3position]</bottom>
					<height>50</height>
					<align>center</align>
					<font>$PARAM[font3]</font>
					<textoffsetx>15</textoffsetx>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Property(label3)]</label>
				</control>
				<control type="image">
					<texture border="20" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/overlay.png</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetInfo">
		<control type="group">
			<animation effect="fade" end="100" time="200">Visible</animation>
			<control type="image">
				<visible>!Skin.HasSetting(WidgetHigh) + ControlGroup(90010).HasFocus + $PARAM[infovisible]</visible>
				<animation effect="slide" end="0,$PARAM[infotopposition]" condition="true">Conditional</animation>
				<animation effect="slide" end="0,91" condition="Skin.String(MainMenuPosition,bottom)">Conditional</animation>
				<animation effect="slide" end="0,274" condition="Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)">Conditional</animation>
				<animation effect="slide" end="0,-42" condition="system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
				<animation effect="slide" end="0,42" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Skin.HasSetting(InfoBarTop)">Conditional</animation>
				<include>AnimationVisibleFade</include>
				<bottom>0</bottom>
				<width>1920</width>
				<height>1122</height>
				<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/widget-gradient.png</texture>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(WidgetHigh) + ControlGroup(90010).HasFocus + $PARAM[infovisible]</visible>
				<animation effect="slide" end="0,-$PARAM[infotopposition]" condition="true">Conditional</animation>
				<animation effect="slide" end="0,-91" condition="Skin.String(MainMenuPosition,top)">Conditional</animation>
				<animation effect="slide" end="0,-274" condition="String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)">Conditional</animation>
				<animation effect="slide" end="0,42" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Skin.HasSetting(InfoBarTop)">Conditional</animation>
				<include>AnimationVisibleFade</include>
				<bottom>-49</bottom>
				<width>1920</width>
				<height>1122</height>
				<texture flipy="true" colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/widget-gradient.png</texture>
			</control>
			<control type="group">
				<top>40</top>
				<left>40</left>
				<right>40</right>
				<animation effect="slide" end="0,$PARAM[infotopposition]" condition="!Skin.HasSetting(WidgetHigh)">Conditional</animation>
				<animation effect="slide" end="0,$PARAM[infobottomposition]" condition="Skin.HasSetting(WidgetHigh)">Conditional</animation>
				<animation effect="slide" end="0,207" condition="!Skin.HasSetting(WidgetHigh)">Conditional</animation>
				<animation effect="slide" end="0,91" condition="!Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,bottom)">Conditional</animation>
				<animation effect="slide" end="0,274" condition="Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)">Conditional</animation>
				<animation effect="slide" end="0,-84" condition="Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,top)">Conditional</animation>
				<animation effect="slide" end="0,-42" time="200" condition="!Skin.HasSetting(WidgetHigh) + system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
				<animation effect="slide" end="0,42" time="200" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Skin.HasSetting(InfoBarTop)">Conditional</animation>
				<control type="label">
					<animation effect="slide" end="0,103" condition="!Skin.HasSetting(WidgetHigh)">Conditional</animation>
					<height>30</height>
					<align>right</align>
					<font>Font32_Reg</font>
					<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
					<shadowcolor>black</shadowcolor>
					<label>$PARAM[label]</label>
				</control>
				<control type="grouplist">
					<visible>ControlGroup(90010).HasFocus + $PARAM[infovisible]</visible>
					<itemgap>10</itemgap>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<height>32</height>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<shadowcolor>black</shadowcolor>
						<font>Font36_Reg</font>
						<fadetime>TextureFadeTime</fadetime>
						<label>$VAR[WidgetTitleVar]</label>
					</control>
					<control type="image">
						<width>388</width>
						<height>4</height>
						<aspectratio>scale</aspectratio>
						<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
					</control>
					<control type="label">
						<height>20</height>
						<font>Font32_Reg</font>
						<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
						<shadowcolor>black</shadowcolor>
						<label>$VAR[WidgetSubTitleVar]</label>
					</control>
					<control type="grouplist">
						<top>9</top>
						<height>38</height>
						<usecontrolcoords>true</usecontrolcoords>
						<orientation>horizontal</orientation>
						<control type="image">
							<visible>!String.IsEmpty(Container.ListItem.Date) | !String.IsEmpty(ListItem.Year) | !String.IsEmpty(ListItem.Property(Artist_YearsActive)) | !String.IsEmpty(ListItem.Property(calender))</visible>
							<width>30</width>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[IconPathVar]calendar.png</texture>
						</control>
						<control type="image">
							<visible>!String.IsEmpty(Container.ListItem.AddonCreator)</visible>
							<width>30</width>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[IconPathVar]person.png</texture>
						</control>
						<control type="label">
							<top>-2</top>
							<width>auto</width>
							<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
							<label>$VAR[WidgetInfo1Var]</label>
						</control>
						<control type="image">
							<visible>!String.IsEmpty(Container.ListItem.Duration) | !String.IsEmpty(ListItem.Property(duration))</visible>
							<width>30</width>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[IconPathVar]timer.png</texture>
						</control>
						<control type="image">
							<visible>!String.IsEmpty(Container.ListItem.AddonVersion)</visible>
							<width>30</width>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[IconPathVar]addons.png</texture>
						</control>
						<control type="label">
							<top>-2</top>
							<width>auto</width>
							<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
							<label>$VAR[WidgetInfo2Var]</label>
						</control>
						<control type="image">
							<visible>!String.IsEmpty(Container.ListItem.Rating) | !String.IsEmpty(Container.ListItem.UserRating)</visible>
							<width>30</width>
							<aspectratio>keep</aspectratio>
							<texture>$VAR[IconPathVar]star.png</texture>
						</control>
						<control type="label">
							<visible>!String.IsEmpty(Container.ListItem.Rating) | !String.IsEmpty(Container.ListItem.UserRating)</visible>
							<top>-2</top>
							<width>auto</width>
							<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
							<label>$VAR[WidgetInfo3Var]</label>
						</control>
					</control>
				</control>
			</control>
		</control>
	</include>
	<!-- Now playing -->
	<include name="HomeNowPlaying">
		<control type="image">
			<visible>!Skin.HasSetting(WidgetHigh) + !ControlGroup(90010).HasFocus</visible>
			<animation effect="slide" end="0,91" condition="Skin.String(MainMenuPosition,bottom)">Conditional</animation>
			<animation effect="slide" end="0,274" condition="Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)">Conditional</animation>
			<animation effect="slide" end="0,-42" condition="system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
			<animation effect="slide" end="0,42" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<include>AnimationVisibleFade</include>
			<bottom>-42</bottom>
			<width>1920</width>
			<height>926</height>
			<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/widget-gradient.png</texture>
		</control>
		<control type="image">
			<visible>Skin.HasSetting(WidgetHigh)</visible>
			<animation effect="slide" end="0,-91" condition="Skin.String(MainMenuPosition,top)">Conditional</animation>
			<animation effect="slide" end="0,-274" condition="String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)">Conditional</animation>
			<animation effect="slide" end="0,42" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<include>AnimationVisibleFade</include>
			<top>0</top>
			<width>1920</width>
			<height>870</height>
			<texture flipy="true" colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/widget-gradient.png</texture>
		</control>
		<control type="group">
			<top>429</top>
			<left>30</left>
			<right>30</right>
			<animation effect="slide" end="0,91" time="200" condition="!Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,bottom)">Conditional</animation>
			<animation effect="slide" end="0,274" time="200" condition="!Skin.HasSetting(WidgetHigh) + [Skin.String(MainMenuPosition,high) | Skin.String(MainMenuPosition,top)]">Conditional</animation>
			<animation effect="slide" end="0,-399" time="200" condition="Skin.HasSetting(WidgetHigh) + [String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)]">Conditional</animation>
			<animation effect="slide" end="0,-125" time="200" condition="Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,high)">Conditional</animation>
			<animation effect="slide" end="0,-216" time="200" condition="Skin.HasSetting(WidgetHigh) + Skin.String(MainMenuPosition,top)">Conditional</animation>
			<animation effect="slide" end="0,-42" time="200" condition="!Skin.HasSetting(WidgetHigh) + system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
			<animation effect="slide" end="0,42" time="200" condition="[String.IsEmpty(Skin.String(MainMenuPosition)) | Skin.String(MainMenuPosition,bottom)] + Skin.HasSetting(InfoBarTop)">Conditional</animation>
			<visible>!ControlGroup(90010).HasFocus</visible>
			<include>AnimationVisibleFade</include>
			<!-- Video -->
			<control type="group">
				<visible>Player.HasVideo</visible>
				<control type="group">
					<visible>[VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)] + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible>
						<control type="group">
							<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingVideoCase))</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">10</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[NowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeVideoDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeVideoDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingVideoCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[NowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingVideoCase),case) + !String.Contains(Skin.String(MainMenuNowPlayingVideoCase),caseclear) + !String.Contains(Skin.String(MainMenuNowPlayingVideoCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">218</param>
								<param name="height">347</param>
								<param name="leftinfo">208</param>
								<param name="casewidth">218</param>
								<param name="border">10,40,20,20</param>
								<param name="discborder">0</param>
								<param name="slide">70</param>
								<param name="slidedisc">90</param>
								<param name="case">$VAR[NowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingVideoCase),caseclear)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[NowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
					</control>
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(musicvideos) + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible>
						<control type="group">
							<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingMusicCase))</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingHomeSquareContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">347</param>
								<param name="height">347</param>
								<param name="leftinfo">337</param>
								<param name="casewidth">347</param>
								<param name="border">10</param>
								<param name="discborder">20</param>
								<param name="slide">114</param>
								<param name="slidedisc">144</param>
								<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.IsEqual(Skin.String(MainMenuNowPlayingMusicCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingHomeSquareContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">347</param>
								<param name="height">347</param>
								<param name="leftinfo">337</param>
								<param name="casewidth">347</param>
								<param name="border">15</param>
								<param name="discborder">20</param>
								<param name="slide">114</param>
								<param name="slidedisc">144</param>
								<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingMusicCase),cd)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingHomeSquareContent">
								<param name="left">25</param>
								<param name="right">-45</param>
								<param name="width">347</param>
								<param name="height">347</param>
								<param name="leftinfo">360</param>
								<param name="casewidth">370</param>
								<param name="border">15</param>
								<param name="discborder">25</param>
								<param name="slide">109</param>
								<param name="slidedisc">134</param>
								<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
					</control>
					<control type="group">
						<visible>!String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible>
						<control type="group">
							<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingMusicCase))</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingHomeSquareContent">
								<param name="left">0</param>
								<param name="right">680</param>
								<param name="width">347</param>
								<param name="height">347</param>
								<param name="leftinfo">337</param>
								<param name="casewidth">347</param>
								<param name="border">10</param>
								<param name="discborder">20</param>
								<param name="slide">114</param>
								<param name="slidedisc">144</param>
								<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.IsEqual(Skin.String(MainMenuNowPlayingMusicCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingHomeSquareContent">
								<param name="left">0</param>
								<param name="right">680</param>
								<param name="width">347</param>
								<param name="height">347</param>
								<param name="leftinfo">337</param>
								<param name="casewidth">347</param>
								<param name="border">15</param>
								<param name="discborder">20</param>
								<param name="slide">114</param>
								<param name="slidedisc">144</param>
								<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingMusicCase),cd)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingHomeSquareContent">
								<param name="left">25</param>
								<param name="right">680</param>
								<param name="width">347</param>
								<param name="height">347</param>
								<param name="leftinfo">360</param>
								<param name="casewidth">370</param>
								<param name="border">15</param>
								<param name="discborder">25</param>
								<param name="slide">109</param>
								<param name="slidedisc">134</param>
								<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
					</control>
				</control>
			</control>
			<!-- Audio -->
			<control type="group">
				<visible>Player.HasAudio</visible>
				<control type="group">
					<visible>[String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),none) + !Player.IsInternetStream + !Pvr.IsPlayingRadio] | [String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),none) + [Player.IsInternetStream | Pvr.IsPlayingRadio]]</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeAudioCase))</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="left">0</param>
							<param name="right">52</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioCase),glass)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="left">0</param>
							<param name="right">52</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">20</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.Contains(Skin.String(NowPlayingHomeAudioCase),cd)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="left">25</param>
							<param name="right">52</param>
							<param name="leftinfo">360</param>
							<param name="casewidth">370</param>
							<param name="border">15</param>
							<param name="discborder">25</param>
							<param name="slide">109</param>
							<param name="slidedisc">134</param>
							<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>[!String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),none) + !Player.IsInternetStream + !Pvr.IsPlayingRadio] | [!String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),none) + [Player.IsInternetStream | Pvr.IsPlayingRadio]]</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeAudioCase))</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="left">0</param>
							<param name="right">660</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioCase),glass)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="left">0</param>
							<param name="right">660</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">20</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.Contains(Skin.String(NowPlayingHomeAudioCase),cd)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingHomeSquareContent">
							<param name="left">25</param>
							<param name="right">660</param>
							<param name="leftinfo">360</param>
							<param name="casewidth">370</param>
							<param name="border">15</param>
							<param name="discborder">25</param>
							<param name="slide">109</param>
							<param name="slidedisc">134</param>
							<param name="case">$VAR[NowPlayingHomeAudioCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>!Pvr.IsPlayingRadio + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeMusicInfo)) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioNext</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),tracks) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioTrackList</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),info) + Skin.HasSetting(WidgetHigh)</visible>
						<include>HomeNowPlayingAudioInfo</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),info) + !Skin.HasSetting(WidgetHigh)</visible>
						<include>HomeNowPlayingAudioInfo2</include>
					</control>
				</control>
				<control type="group">
					<visible>Pvr.IsPlayingRadio | Player.IsInternetStream</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeAudioInfo)) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioNext</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),tracks) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioTrackList</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),info) + Skin.HasSetting(WidgetHigh)</visible>
						<include>HomeNowPlayingAudioInfo</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),info) + !Skin.HasSetting(WidgetHigh)</visible>
						<include>HomeNowPlayingAudioInfo2</include>
					</control>
				</control>
			</control>
		</control>
	</include>
</includes>