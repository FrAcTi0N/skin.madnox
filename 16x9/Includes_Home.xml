<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="InfoTimeBarContent">
		<param name="top">0</param>
		<param name="width">700</param>
		<definition>
			<control type="group">
				<top>$PARAM[top]</top>
				<control type="label">
					<left>5</left>
					<width>$PARAM[width]</width>
					<font>Font30_Reg</font>
					<height>38</height>
					<label>$VAR[InfoLineVar]</label>
					<include>AnimationVisibleFade</include>
					<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
					<visible>!Skin.HasSetting(InfoBarLeftDisable) + !String.IsEmpty(Container(9000).ListItem.Property(InfoLine))</visible>
				</control>
				<control type="grouplist">
					<include>AnimationVisibleFade</include>
					<right>5</right>
					<width>$PARAM[width]</width>
					<orientation>horizontal</orientation>
					<align>right</align>
					<usecontrolcoords>true</usecontrolcoords>
					<itemgap>0</itemgap>
					<control type="multiimage">
						<left>20</left>
						<width>40</width>
						<height>40</height>
						<imagepath colordiffuse="$VAR[MainMenuWeatherIconColorVar]">$INFO[Skin.String(WeatherIcons.path)]$INFO[Weather.FanartCode]$INFO[Skin.String(WeatherIcons.ext)]</imagepath>
						<timeperimage>050</timeperimage>
						<fadetime>TextureFadeTime</fadetime>
						<randomize>false</randomize>
						<loop>true</loop>
						<include>AnimationVisibleFade</include>
						<visible>!Skin.HasSetting(InfoBarDisableWeather) + !String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<label>$INFO[Window(weather).Property(Current.Temperature), ]$INFO[System.TemperatureUnits]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
						<visible>!Skin.HasSetting(InfoBarDisableWeather) + !String.IsEmpty(Window(Weather).Property(Current.Temperature))</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
						<label>$INFO[System.Date,  ]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
						<visible>!Skin.HasSetting(InfoBarDisableDate)</visible>
					</control>
					<control type="label">
						<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
						<label>$INFO[System.Time,  ]</label>
						<font>Font30_Reg</font>
						<height>38</height>
						<width>auto</width>
						<include>AnimationVisibleFade</include>
						<visible>!Skin.HasSetting(InfoBarDisableTime)</visible>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="InfoTimeBar">
		<control type="group">
			<top>769</top>
			<visible>!Skin.HasSetting(InfoBarTop)</visible>
			<include>AnimationSlideBottomWindow</include>
			<include>AnimationVisibleFade</include>
			<animation effect="slide" end="0,-362" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),abovemenu)">Conditional</animation>
			<animation effect="slide" end="0,-393" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),belowmenu)">Conditional</animation>
			<animation effect="slide" end="0,41" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),belowmenu) + !system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
			<control type="group">
				<visible>String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipx="true" border="1,1,70,1" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
					<visible>!Skin.HasSetting(InfoBarLeftDisable) + !String.IsEmpty(Container(9000).ListItem.Property(InfoLine))</visible>
				</control>
				<control type="image">
					<right>0</right>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture border="70,1,1,1" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
					<visible>!Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)</visible>
				</control>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
					<param name="width">750</param>
				</include>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture flipy="true" colordiffuse="$VAR[MainMenuSystemBarColorVar]" border="1">$VAR[MainMenuSystemBarVar]</texture>
					<visible>!Skin.HasSetting(InfoBarLeftDisable) | !Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)</visible>
				</control>
				<include content="InfoTimeBarContent">
					<param name="top">47</param>
					<param name="width">900</param>
				</include>
			</control>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(InfoBarTop)</visible>
			<include content="AnimationSlideTopWindow">
				<param name="slide">88</param>
			</include>
			<include>AnimationVisibleFade</include>
			<control type="group">
				<visible>String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>810</width>
					<height>88</height>
					<texture flipx="true" flipy="true" border="1,1,70,1" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
					<visible>!Skin.HasSetting(InfoBarLeftDisable) + !String.IsEmpty(Container(9000).ListItem.Property(InfoLine))</visible>
				</control>
				<control type="image">
					<right>0</right>
					<width>810</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture border="70,1,1,1" flipy="true" colordiffuse="$VAR[MainMenuSystemBarColorVar]">panels/mainmenu/default-systembar.png</texture>
					<visible>!Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)</visible>
				</control>
				<include content="InfoTimeBarContent">
					<param name="width">750</param>
				</include>
			</control>
			<control type="group">
				<visible>!String.IsEmpty(Skin.String(MainMenuSystemBar.texture))</visible>
				<include>AnimationVisibleFade</include>
				<control type="image">
					<width>1920</width>
					<height>88</height>
					<include>AnimationVisibleFade</include>
					<texture colordiffuse="$VAR[MainMenuSystemBarColorVar]" border="1">$VAR[MainMenuSystemBarVar]</texture>
					<visible>!Skin.HasSetting(InfoBarLeftDisable) | !Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)</visible>
				</control>
				<include content="InfoTimeBarContent">
					<param name="width">900</param>
				</include>
			</control>
		</control>
	</include>
	<include name="RSSShortcuts">
		<control type="group">
			<top>1040</top>
			<include content="AnimationSlideBottomWindow">
				<param name="slide">316</param>
			</include>
			<control type="group">
				<visible>system.getbool(lookandfeel.enablerssfeeds)</visible>
				<animation effect="slide" start="0" end="0,70" time="200" tween="quadratic" easing="out" condition="ControlGroup(9003).HasFocus">Conditional</animation>
				<control type="image">
					<top>-48</top>
					<width>1920</width>
					<height>88</height>
					<texture flipy="true" border="1" colordiffuse="$VAR[MainMenuRSSBarColorVar]">$VAR[MainMenuRSSBarVar]</texture>
				</control>
				<control type="rss">
					<top>3</top>
					<width>1920</width>
					<height>38</height>
					<font>Font28_Reg</font>
					<urlset>1</urlset>
					<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
					<headlinecolor>$VAR[MainMenuSubTextColorVar]</headlinecolor>
					<titlecolor>$VAR[MainMenuTextColorVar]</titlecolor>
					<scrollspeed>10</scrollspeed>
				</control>
			</control>
			<control type="grouplist" id="9003">
				<animation effect="slide" start="0" end="0,70" time="200" tween="quadratic" easing="out" condition="!ControlGroup(9003).HasFocus">Conditional</animation>
				<visible>!Skin.HasSetting(ShortCutDisablePower) | !Skin.HasSetting(ShortCutDisableSearch) | !Skin.HasSetting(ShortCutDisableFav) | !Skin.HasSetting(ShortCutDisableUpdate) | !Skin.HasSetting(ShortCutDisableDisc) | !Skin.HasSetting(ShortCutDisableEject)</visible>
				<left>5</left>
				<bottom>0</bottom>
				<width>1920</width>
				<height>71</height>
				<onup>9001</onup>
				<align>center</align>
				<orientation>horizontal</orientation>
				<control type="button" id="20">
					<visible>!Skin.HasSetting(ShortCutDisablePower)</visible>
					<label></label>
					<onclick>ActivateWindow(ShutdownMenu)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="21">
					<visible>!Skin.HasSetting(ShortCutDisableSearch)</visible>
					<label></label>
					<onclick>ActivateWindow(1112)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="22">
					<visible>!Skin.HasSetting(ShortCutDisableFav)</visible>
					<label></label>
					<onclick>ActivateWindow(favourites)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="23">
					<visible>!Skin.HasSetting(ShortCutDisableUpdate)</visible>
					<label></label>
					<onclick>UpdateLibrary(video)</onclick>
					<onclick>UpdateLibrary(music)</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="24">
					<visible>!Skin.HasSetting(ShortCutDisableDisc) + System.HasMediadvd</visible>
					<label></label>
					<onclick>PlayDVD</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="25">
					<visible>!Skin.HasSetting(ShortCutDisableDisc) + !System.HasMediadvd</visible>
					<label></label>
					<onclick />
					<include>RSSShortcutsIcon</include>
				</control>
				<control type="button" id="26">
					<visible>!Skin.HasSetting(ShortCutDisableEject)</visible>
					<description>Search</description>
					<label></label>
					<onclick>EjectTray()</onclick>
					<include>RSSShortcutsIcon</include>
				</control>
			</control>
		</control>
	</include>
	<include name="RSSShortcutsIcon">
		<width>70</width>
		<height>70</height>
		<align>center</align>
		<font>Font40_Icon</font>
		<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
		<focusedcolor>$VAR[MainMenuTextColorVar]</focusedcolor>
		<texturefocus border="20" colordiffuse="$VAR[MainMenuHighlightColorVar]">buttons/button-focus.png</texturefocus>
		<texturenofocus border="20" colordiffuse="$VAR[MainMenuStyleColorVar]">buttons/button-focus.png</texturenofocus>
	</include>
	<include name="MainMenu">
		<param name="listtype">wraplist</param>
		<definition>
			<!-- Sub menu -->
			<control type="group">
				<width>1920</width>
				<top>857</top>
				<include>AnimationSlideBottomWindow</include>
				<control type="group">
					<top>100</top>
					<visible>Skin.HasSetting(SubmenuHide)</visible>
					<control type="image">
						<centerleft>50%</centerleft>
						<width>1830</width>
						<height>1</height>
						<texture border="70,0,70,0" colordiffuse="$VAR[MainMenuSubmenuBarColorVar]">panels/mainmenu/default-submenubar.png</texture>
						<animation effect="zoom" start="0,0,1830,0" end="0,0,1830,88" time="200" tween="quadratic" easing="out" condition="ControlGroup(9002).HasFocus">Conditional</animation>
						<visible>String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
					</control>
					<control type="image">
						<width>1920</width>
						<height>1</height>
						<texture colordiffuse="$VAR[MainMenuSubmenuBarColorVar]" border="1,0,1,0">$VAR[MainMenuSubmenuBarVar]</texture>
						<animation effect="zoom" start="0,0,1920,0" end="0,0,1920,88" time="200" tween="quadratic" easing="out" condition="ControlGroup(9002).HasFocus">Conditional</animation>
						<visible>!String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
					</control>
				</control>
				<control type="group">
					<top>100</top>
					<visible>!Skin.HasSetting(SubmenuHide)</visible>
					<control type="image">
						<centerleft>50%</centerleft>
						<width>1808</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture border="70,0,70,0" colordiffuse="$VAR[MainMenuSubmenuBarColorVar]">panels/mainmenu/default-submenubar.png</texture>
						<visible>String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
					</control>
					<control type="image">
						<width>1920</width>
						<height>88</height>
						<include>AnimationVisibleFade</include>
						<texture colordiffuse="$VAR[MainMenuSubmenuBarColorVar]" border="1,0,1,0">$VAR[MainMenuSubmenuBarVar]</texture>
						<visible>!String.IsEmpty(Skin.String(MainMenuSubmenuBar.texture))</visible>
					</control>
				</control>
				<control type="group" id="9002">
					<animation type="Conditional" condition="Skin.HasSetting(SubmenuHide) + ControlGroup(9002).HasFocus" reversible="false">
						<effect type="fade" start="0" end="100" time="200" tween="quadratic" easing="out" />
						<effect type="slide" start="0,-40" end="0" time="200" tween="quadratic" easing="out" />
					</animation>
					<animation type="Conditional" condition="Skin.HasSetting(SubmenuHide) + !ControlGroup(9002).HasFocus" reversible="false">
						<effect type="fade" start="100" end="0" time="200" tween="quadratic" easing="out" />
						<effect type="slide" start="0" end="0,-40" time="450" tween="quadratic" easing="out" />
					</animation>
					<control type="fixedlist" id="9001">
						<centerleft>50%</centerleft>
						<top>100</top>
						<width>1670</width>
						<height>80</height>
						<onleft>9010</onleft>
						<onright>9010</onright>
						<onup>9000</onup>
						<ondown condition="!Skin.String(WidgetPosition,belowmenu)">9003</ondown>
						<ondown condition="Skin.String(WidgetPosition,belowmenu)">90010</ondown>
						<orientation>horizontal</orientation>
						<focusposition>2</focusposition>
						<movement>2</movement>
						<scrolltime tween="cubic" easing="inout">200</scrolltime>
						<itemlayout width="334" height="41">
							<control type="label">
								<align>center</align>
								<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
								<font>Font30_Caps</font>
								<textoffsetx>20</textoffsetx>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</itemlayout>
						<focusedlayout width="334" height="41">
							<control type="group">
								<visible>Control.HasFocus(9001)</visible>
								<control type="image">
									<texture border="1" colordiffuse="$VAR[MainMenuHighlightColorVar]">buttons/list-select-focus.png</texture>
									<visible>!String.IsEqual(Skin.String(MainMenuSubmenuBar.texture),shadow)</visible>
								</control>
								<control type="image">
									<height>70</height>
									<texture border="1" colordiffuse="$VAR[MainMenuHighlightColorVar]">panels/mainmenu/shadow-bar.png</texture>
									<visible>String.IsEqual(Skin.String(MainMenuSubmenuBar.texture),shadow)</visible>
								</control>
								<control type="label">
									<align>center</align>
									<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
									<font>Font30_Caps</font>
									<textoffsetx>20</textoffsetx>
									<label>$INFO[ListItem.Label]</label>
								</control>
							</control>
							<control type="label">
								<align>center</align>
								<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
								<font>Font30_Caps</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>!Control.HasFocus(9001)</visible>
							</control>
						</focusedlayout>
						<content>
							<include>skinshortcuts-submenu</include>
						</content>
					</control>
				</control>
				<!-- Main menu -->
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuStyleColorVar]" fallback="panels/mainmenu/default.png">$INFO[Skin.String(MainMenuStyle.texture)]</texture>
				</control>
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuTextureColorVar]">$INFO[Skin.String(MainMenuTexture.texture)]</texture>
				</control>
				<control type="image">
					<top>-20</top>
					<width>1920</width>
					<height>140</height>
					<texture colordiffuse="$VAR[MainMenuShadowColorVar]">panels/mainmenu/shadow.png</texture>
				</control>
				<control type="$PARAM[listtype]" id="9000">
					<height>100</height>
					<width>3200</width>
					<onleft>9000</onleft>
					<onright>9000</onright>
					<onup condition="!Skin.String(WidgetPosition,belowmenu) + Control.IsVisible(90010)">90010</onup>
					<onup condition="!Skin.String(WidgetPosition,belowmenu) + !Control.IsVisible(90010)">9050</onup>
					<onup condition="Skin.String(WidgetPosition,belowmenu)">9050</onup>
					<ondown>SetFocus(9001,2)</ondown>
					<orientation>horizontal</orientation>
					<focusposition>3</focusposition>
					<scrolltime tween="quadratic">300</scrolltime>
					<animation effect="slide" end="-720,0" condition="!Skin.String(MainMenuStyle)">Conditional</animation>
					<animation effect="slide" end="-1280,0" condition="Skin.String(MainMenuStyle,wide)">Conditional</animation>
					<animation effect="slide" end="-384,0" condition="Skin.String(MainMenuStyle,iconswide) | Skin.String(MainMenuStyle,bigiconswide)">Conditional</animation>
					<itemlayout width="480" height="95" condition="!Skin.String(MainMenuStyle)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="480" height="95" condition="String.IsEmpty(Skin.String(MainMenuStyle))">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="640" height="95" condition="Skin.String(MainMenuStyle,wide)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="640" height="95" condition="Skin.String(MainMenuStyle,wide)">
						<control type="label">
							<align>center</align>
							<font>Font_MainMenu</font>
							<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="274" height="100" condition="Skin.String(MainMenuStyle,icons)">
						<control type="image">
							<top>5</top>
							<height>60</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
						<control type="label">
							<top>67</top>
							<height>30</height>
							<align>center</align>
							<font>Font_MainMenu_Icons</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="274" height="100" condition="Skin.String(MainMenuStyle,icons)">
						<control type="group">
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
							<control type="image">
								<top>5</top>
								<height>60</height>
								<aspectratio align="center" aligny="center">keep</aspectratio>
								<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							</control>
							<control type="label">
								<top>67</top>
								<height>30</height>
								<align>center</align>
								<font>Font_MainMenu_Icons</font>
								<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
					</focusedlayout>
					<itemlayout width="384" height="100" condition="Skin.String(MainMenuStyle,iconswide)">
						<control type="image">
							<top>5</top>
							<height>60</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
						<control type="label">
							<top>67</top>
							<height>30</height>
							<align>center</align>
							<font>Font_MainMenu_Icons</font>
							<textcolor>$VAR[MainMenuNofocusTextColorVar]</textcolor>
							<label>$INFO[ListItem.Label]</label>
						</control>
					</itemlayout>
					<focusedlayout width="384" height="100" condition="Skin.String(MainMenuStyle,iconswide)">
						<control type="group">
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
							<control type="image">
								<top>5</top>
								<height>60</height>
								<aspectratio align="center" aligny="center">keep</aspectratio>
								<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							</control>
							<control type="label">
								<top>67</top>
								<height>30</height>
								<align>center</align>
								<font>Font_MainMenu_Icons</font>
								<textcolor>$VAR[MainMenuFocusTextColorVar]</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
					</focusedlayout>
					<itemlayout width="274" height="100" condition="Skin.String(MainMenuStyle,bigicons)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
					</itemlayout>
					<focusedlayout width="274" height="100" condition="Skin.String(MainMenuStyle,bigicons)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<itemlayout width="384" height="100" condition="Skin.String(MainMenuStyle,bigiconswide)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuNofocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
						</control>
					</itemlayout>
					<focusedlayout width="384" height="100" condition="Skin.String(MainMenuStyle,bigiconswide)">
						<control type="image">
							<top>5</top>
							<height>90</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<texture colordiffuse="$VAR[MainMenuFocusIconColorVar]">$INFO[ListItem.Property(MenuIcon)]</texture>
							<animation effect="fade" start="100" end="28" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
						</control>
					</focusedlayout>
					<content>
						<include>skinshortcuts-mainmenu</include>
					</content>
				</control>
				<control type="image">
					<left>0</left>
					<top>0</top>
					<width>1920</width>
					<height>100</height>
					<texture colordiffuse="$VAR[MainMenuGradientColorVar]">panels/mainmenu/gradient.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="HomeNowPlaying">
		<control type="image">
			<visible>String.IsEmpty(Skin.String(WidgetPosition)) | String.IsEqual(Skin.String(WidgetPosition),belowmenu)</visible>
			<include>AnimationVisibleFade</include>
			<width>1920</width>
			<height>700</height>
			<texture flipy="true" colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
		</control>
		<control type="image">
			<visible>String.IsEqual(Skin.String(WidgetPosition),top)</visible>
			<include>AnimationVisibleFade</include>
			<top>157</top>
			<width>1920</width>
			<height>700</height>
			<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
		</control>
		<control type="image">
			<visible>String.IsEqual(Skin.String(WidgetPosition),abovemenu)</visible>
			<include>AnimationVisibleFade</include>
			<top>400</top>
			<width>1920</width>
			<height>700</height>
			<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
		</control>
		<control type="group">
			<top>30</top>
			<left>30</left>
			<right>30</right>
			<animation effect="slide" end="0,403" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),top)">Conditional</animation>
			<animation effect="slide" end="0,637" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),abovemenu)">Conditional</animation>
			<animation effect="slide" end="0,41" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),abovemenu) + !system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
			<animation effect="slide" end="0,41" time="200" condition="!String.IsEqual(Skin.String(WidgetPosition),abovemenu) + Skin.HasSetting(InfoBarTop) + [!Skin.HasSetting(InfoBarLeftDisable) | !Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)]">Conditional</animation>
			<!-- Video -->
			<control type="group">
				<visible>Player.HasVideo</visible>
				<control type="group">
					<visible>VideoPlayer.Content(movies) + !Player.IsInternetStream</visible>
					<control type="group">
						<!-- <visible>String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible> -->
						<control type="group">
							<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingVideoCase))</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">10</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeVideoDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeVideoDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingVideoCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingVideoCase),case) + !String.Contains(Skin.String(MainMenuNowPlayingVideoCase),caseclear) + !String.Contains(Skin.String(MainMenuNowPlayingVideoCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">218</param>
								<param name="height">347</param>
								<param name="leftinfo">208</param>
								<param name="casewidth">218</param>
								<param name="border">10,40,20,20</param>
								<param name="discborder">0</param>
								<param name="slide">70</param>
								<param name="slidedisc">90</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
						<control type="group">
							<visible>String.Contains(Skin.String(MainMenuNowPlayingVideoCase),caseclear)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
							</include>
						</control>
					</control>
					<!-- <include content="HomeNowPlayingPortraitContent">
						<param name="info">String.IsEqual(Skin.String(NowPlayingHomeVideoInfo),disable)</param>
						<param name="logo">!Skin.HasSetting(NowPlayingHomeVideoDisableLogo)</param>
						<param name="discart">!Skin.HasSetting(NowPlayingHomeVideoDisableDiscArt)</param>
					</include> -->
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(episodes) + !Player.IsInternetStream</visible>
					<control type="group">
						<!-- <visible>String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible> -->
						<control type="group">
							<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingVideoCase))</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">10</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeVideoDisableLogo)</param>
								<param name="discart">false</param>
							</include>
						</control>
						<control type="group">
							<visible>String.IsEqual(Skin.String(MainMenuNowPlayingVideoCase),glass)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">false</param>
							</include>
						</control>
						<control type="group">
							<visible>String.IsEqual(Skin.String(MainMenuNowPlayingVideoCase),case)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">10,40,20,20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">false</param>
							</include>
						</control>
						<control type="group">
							<visible>String.IsEqual(Skin.String(MainMenuNowPlayingVideoCase),caseclear)</visible>
							<include>AnimationVisibleFade</include>
							<include content="NowPlayingPortraitContent">
								<param name="left">0</param>
								<param name="right">-45</param>
								<param name="width">238</param>
								<param name="height">347</param>
								<param name="leftinfo">258</param>
								<param name="casewidth">238</param>
								<param name="border">20</param>
								<param name="discborder">0</param>
								<param name="slide">100</param>
								<param name="slidedisc">100</param>
								<param name="case">$VAR[MainMenuNowPlayingVideoCaseVar]</param>
								<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
								<param name="discart">false</param>
							</include>
						</control>
					</control>
					<!-- <include content="HomeNowPlayingPortraitContent">
						<param name="info">String.IsEqual(Skin.String(NowPlayingHomeVideoInfo),disable)</param>
						<param name="logo">!Skin.HasSetting(NowPlayingHomeVideoDisableLogo)</param>
						<param name="discart">!Skin.HasSetting(NowPlayingHomeVideoDisableDiscArt)</param>
					</include> -->
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(musicvideos) + !Player.IsInternetStream</visible>
					<control type="group">
						<!-- <visible>String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible> -->
						<control type="group">
						<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingMusicCase))</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">-45</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(MainMenuNowPlayingMusicCase),glass)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">-45</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">15</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.Contains(Skin.String(MainMenuNowPlayingMusicCase),cd)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">25</param>
							<param name="right">-45</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">360</param>
							<param name="casewidth">370</param>
							<param name="border">15</param>
							<param name="discborder">25</param>
							<param name="slide">109</param>
							<param name="slidedisc">134</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>!String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingMusicCase))</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">680</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(MainMenuNowPlayingMusicCase),glass)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">680</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">15</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.Contains(Skin.String(MainMenuNowPlayingMusicCase),cd)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">25</param>
							<param name="right">680</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">360</param>
							<param name="casewidth">370</param>
							<param name="border">15</param>
							<param name="discborder">25</param>
							<param name="slide">109</param>
							<param name="slidedisc">134</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					</control>
					
				</control>
				
				<!-- <control type="group">
					<visible>VideoPlayer.Content(movies) | VideoPlayer.Content(episodes)</visible>
					<control type="grouplist">
						<visible>!String.IsEmpty(VideoPlayer.Plot) + String.IsEmpty(Skin.String(NowPlayingHomeMovieInfo))</visible>
						<include>HomeNowPlayingPlot</include>
					</control>
					<control type="list" id="30">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMovieInfo),cast)</visible>
						<include>HiddenList</include>
						<content>plugin://script.skin.helper.service/?action=getcast&amp;movie=$INFO[VideoPlayer.DBID]</content>
					</control>
					<control type="grouplist">
						<visible>!String.IsEmpty(Container(30).ListItem.Label) + String.IsEqual(Skin.String(NowPlayingHomeMovieInfo),cast)</visible>
						<include>AnimationSlideRightVisible</include>
						<top>-10</top>
						<right>0</right>
						<width>1000</width>
						<usecontrolcoords>true</usecontrolcoords>
						<control type="label">
							<width>1000</width>
							<height>46</height>
							<align>right</align>
							<font>Font34_Reg</font>
							<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
							<label>$LOCALIZE[206]</label>
						</control>
						<control type="image">
							<top>2</top>
							<right>0</right>
							<width>388</width>
							<height>4</height>
							<aspectratio align="right" aligny="center">scale</aspectratio>
							<texture flipx="true" colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
						</control>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">0</param>
						</include>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">1</param>
						</include>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">2</param>
						</include>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">3</param>
						</include>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">4</param>
						</include>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">5</param>
						</include>
						<include content="HomeNowPlayingVideoCast">
							<param name="number">6</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMovieInfo),preview)</visible>
						<include>AnimationSlideRightVisible</include>
						<control type="image">
							<top>-10</top>
							<right>-10</right>
							<width>575</width>
							<height>332</height>
							<texture border="10">thumbs/thumb-frame.png</texture>
						</control>
						<control type="image">
							<right>0</right>
							<width>555</width>
							<height>312</height>
							<texture>colors/black.png</texture>
						</control>
						<control type="videowindow">
							<right>0</right>
							<width>555</width>
							<height>312</height>
						</control>
					</control>
				</control>
				<control type="group">
					<visible>!VideoPlayer.Content(movies) + !VideoPlayer.Content(episodes)</visible>
					<control type="grouplist">
						<visible>!String.IsEmpty(VideoPlayer.Plot) + String.IsEmpty(Skin.String(NowPlayingHomeVideoInfo))</visible>
						<include>HomeNowPlayingPlot</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeVideoInfo),preview)</visible>
						<include>AnimationSlideRightVisible</include>
						<control type="image">
							<top>-10</top>
							<right>-10</right>
							<width>575</width>
							<height>332</height>
							<texture border="10">thumbs/thumb-frame.png</texture>
						</control>
						<control type="image">
							<right>0</right>
							<width>555</width>
							<height>312</height>
							<texture>colors/black.png</texture>
						</control>
						<control type="videowindow">
							<right>0</right>
							<width>555</width>
							<height>312</height>
						</control>
					</control>
				</control> -->
			</control>
			<!-- Audio -->
			<control type="group">
				<visible>Player.HasAudio</visible>
				<control type="group">
					<visible>String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingMusicCase))</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">-45</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(MainMenuNowPlayingMusicCase),glass)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">-45</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.Contains(Skin.String(MainMenuNowPlayingMusicCase),cd)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">25</param>
							<param name="right">-45</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">360</param>
							<param name="casewidth">370</param>
							<param name="border">15</param>
							<param name="discborder">25</param>
							<param name="slide">109</param>
							<param name="slidedisc">134</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>!String.IsEqual(Skin.String(NowPlayingHomeTrackInfo),disable)</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(MainMenuNowPlayingMusicCase))</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">680</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">10</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.IsEqual(Skin.String(MainMenuNowPlayingMusicCase),glass)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">0</param>
							<param name="right">680</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">337</param>
							<param name="casewidth">347</param>
							<param name="border">20</param>
							<param name="discborder">20</param>
							<param name="slide">114</param>
							<param name="slidedisc">144</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
					<control type="group">
						<visible>String.Contains(Skin.String(MainMenuNowPlayingMusicCase),cd)</visible>
						<include>AnimationVisibleFade</include>
						<include content="NowPlayingSquareContent">
							<param name="left">25</param>
							<param name="right">680</param>
							<param name="width">347</param>
							<param name="height">347</param>
							<param name="leftinfo">360</param>
							<param name="casewidth">370</param>
							<param name="border">15</param>
							<param name="discborder">25</param>
							<param name="slide">109</param>
							<param name="slidedisc">134</param>
							<param name="case">$VAR[MainMenuNowPlayingMusicCaseVar]</param>
							<param name="logo">!Skin.HasSetting(NowPlayingHomeAudioDisableLogo)</param>
							<param name="discart">!Skin.HasSetting(NowPlayingHomeAudioDisableDiscArt)</param>
						</include>
					</control>
				</control>
				<control type="group">
					<visible>!Pvr.IsPlayingRadio + !Player.IsInternetStream</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeMusicInfo)) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioNext</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),tracklist) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioTrackList</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeMusicInfo),plot) + [!String.IsEmpty(MusicPlayer.Property(Artist_Description)) | !String.IsEmpty(MusicPlayer.Property(Artist_Description)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Plot))]</visible>
						<include>HomeNowPlayingPlot</include>
					</control>
				</control>
				<control type="group">
					<visible>Pvr.IsPlayingRadio | Player.IsInternetStream</visible>
					<control type="group">
						<visible>String.IsEmpty(Skin.String(NowPlayingHomeAudioInfo)) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioNext</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),tracklist) + MusicPlayer.HasNext</visible>
						<include>HomeNowPlayingAudioTrackList</include>
					</control>
					<control type="grouplist">
						<visible>String.IsEqual(Skin.String(NowPlayingHomeAudioInfo),plot) + [!String.IsEmpty(MusicPlayer.Property(Artist_Description)) | !String.IsEmpty(MusicPlayer.Property(Artist_Description)) | !String.IsEmpty(VideoPlayer.Plot) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Plot))]</visible>
						<include>HomeNowPlayingPlot</include>
					</control>
				</control>
			</control>
		</control>
	</include>
	<include name="HomeNowPlayingAudioNext">
		<include>AnimationSlideRightVisible</include>
		<right>10</right>
		<width>600</width>
		<height>337</height>
		<control type="label">
			<top>16</top>
			<height>40</height>
			<align>right</align>
			<label>$LOCALIZE[209]</label>
			<font>Font34_Reg</font>
			<textcolor>$VAR[MainMenuHighLightColorVar]</textcolor>
		</control>
		<control type="image">
			<top>62</top>
			<right>0</right>
			<width>388</width>
			<height>4</height>
			<aspectratio align="right" aligny="center">scale</aspectratio>
			<texture flipx="true" colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
		</control>
		<control type="image">
			<top>65</top>
			<right>-10</right>
			<bottom>73</bottom>
			<aspectratio align="right">keep</aspectratio>
			<texture>$INFO[MusicPlayer.offset(1).Cover]</texture>
			<bordersize>10</bordersize>
			<bordertexture border="10">thumbs/test.png</bordertexture>
		</control>
		<control type="image">
			<top>65</top>
			<right>-10</right>
			<bottom>73</bottom>
			<width>198</width>
			<texture border="20">thumbs/overlay.png</texture>
		</control>
		<control type="label">
			<bottom>42</bottom>
			<height>40</height>
			<align>right</align>
			<font>Font30_Reg</font>
			<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
			<label>$INFO[MusicPlayer.offset(1).Artist]</label>
		</control>
		<control type="label">
			<height>40</height>
			<bottom>6</bottom>
			<align>right</align>
			<font>Font28_Reg</font>
			<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
			<label>$INFO[MusicPlayer.offset(1).TrackNumber,,. ]$INFO[MusicPlayer.offset(1).Title]</label>
		</control>
	</include>
	<include name="HomeNowPlayingAudioTrackList">
		<include>AnimationSlideRightVisible</include>
		<right>10</right>
		<width>600</width>
		<height>337</height>
		<usecontrolcoords>true</usecontrolcoords>
		<control type="label">
			<height>42</height>
			<align>right</align>
			<font>Font34_Reg</font>
			<label>$LOCALIZE[209]</label>
			<textcolor>$VAR[MainMenuHighLightColorVar]</textcolor>
			<font>Font34_Reg</font>
		</control>
		<control type="image">
			<top>5</top>
			<right>0</right>
			<width>388</width>
			<height>4</height>
			<aspectratio align="right" aligny="center">scale</aspectratio>
			<texture flipx="true" colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
		</control>
		<include content="HomeNowPlayingTrackList">
			<param name="offset">1</param>
		</include>
		<include content="HomeNowPlayingTrackList">
			<param name="offset">2</param>
		</include>
		<include content="HomeNowPlayingTrackList">
			<param name="offset">3</param>
		</include>
		<include content="HomeNowPlayingTrackList">
			<param name="offset">4</param>
		</include>
	</include>
	<include name="HomeNowPlayingTrackList">
		<control type="label">
			<height>36</height>
			<align>right</align>
			<font>Font30_Reg</font>
			<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
			<label>$INFO[MusicPlayer.offset($PARAM[offset]).Artist]</label>
		</control>
		<control type="label">
			<height>30</height>
			<align>right</align>
			<font>Font28_Reg</font>
			<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
			<label>$INFO[MusicPlayer.offset($PARAM[offset]).TrackNumber,,. ]$INFO[MusicPlayer.offset($PARAM[offset]).Title]</label>
		</control>
		<control type="label">
			<height>6</height>
		</control>
	</include>
	<include name="HomeNowPlayingVideoCast">
		<control type="label">
			<height>40</height>
			<align>right</align>
			<font>Font28_Reg</font>
			<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
			<label>[COLOR $VAR[MainMenuSubTextColorVar]]$INFO[Container(30).ListItem($PARAM[number]).Label][/COLOR] $INFO[Container(30).ListItem($PARAM[number]).Label2]</label>
		</control>
	</include>
	<include name="HomeNowPlayingPlot">
		<include>AnimationSlideRightVisible</include>
		<right>10</right>
		<width>600</width>
		<height>337</height>
		<usecontrolcoords>true</usecontrolcoords>
		<control type="label">
			<height>42</height>
			<align>right</align>
			<font>Font34_Reg</font>
			<textcolor>$VAR[MainMenuHighLightColorVar]</textcolor>
			<label>$VAR[NowPlayingHomePlotLabelVar]</label>
		</control>
		<control type="image">
			<top>5</top>
			<right>0</right>
			<width>388</width>
			<height>4</height>
			<aspectratio align="right" aligny="center">scale</aspectratio>
			<texture flipx="true" colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
		</control>
		<control type="textbox">
			<top>9</top>
			<right>0</right>
			<width>600</width>
			<height>277</height>
			<align>right</align>
			<font>Font30_Reg_95</font>
			<include>AutoScrollPlot</include>
			<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
			<label>$VAR[NowPlayingHomePlotVar]</label>
		</control>
	</include>
	<include name="NowPlayingPortraitContent">
		<control type="group">
			<left>$PARAM[leftinfo]</left>
			<right>$PARAM[right]</right>
			<height>$PARAM[height]</height>
			<control type="group">
				<animation effect="slide" end="$PARAM[slide],0" time="300" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
				<control type="label" id="9052">
					<top>16</top>
					<height>40</height>
					<font>Font34_Reg</font>
					<textoffsetx>50</textoffsetx>
					<label>$VAR[NowPlayingInfo1Var]</label>
					<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(Control.GetLabel(9052)) | !String.IsEmpty(Control.GetLabel(9053))</visible>
					<top>62</top>
					<width>388</width>
					<height>4</height>
					<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
				</control>
				<control type="label" id="9053">
					<top>64</top>
					<height>40</height>
					<font>Font28_Reg</font>
					<textoffsetx>50</textoffsetx>
					<label>$VAR[NowPlayingInfo2Var]</label>
					<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<visible>$PARAM[logo]</visible>
					<include>AnimationVisibleFade</include>
					<top>110</top>
					<width>500</width>
					<bottom>110</bottom>
					<bordersize>50,0,0,0</bordersize>
					<texture>$VAR[NowPlayingLogoVar]</texture>
					<aspectratio align="left">keep</aspectratio>
				</control>
			</control>
			<control type="label">
				<bottom>66</bottom>
				<height>40</height>
				<font>Font28_Reg</font>
				<textoffsetx>50</textoffsetx>
				<label>$VAR[NowPlayingStatusVar]</label>
				<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
			</control>
			<control type="image">
				<width>18</width>
				<height>36</height>
				<bottom>20</bottom>
				<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/nowplaying.png</texture>
			</control>
			<control type="label">
				<height>40</height>
				<bottom>19</bottom>
				<font>Font34_Reg</font>
				<textoffsetx>50</textoffsetx>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				<label>$INFO[MusicPlayer.TrackNumber,,. ]$INFO[Player.Title,, ]$INFO[VideoPlayer.Year,(,)]</label>
			</control>
		</control>
		<control type="group">
			<visible>$PARAM[visible]</visible>
			<left>$PARAM[left]</left>
			<control type="image">
				<visible>$PARAM[discart]</visible>
				<top>14</top>
				<animation effect="slide" end="$PARAM[slidedisc],0" time="300" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
				<animation effect="rotate" end="360" center="auto" time="800" loop="true" condition="Player.Rewinding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="800" loop="true" condition="Player.Forwarding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" condition="!Player.Paused + !Player.Forwarding + !Player.Rewinding">Conditional</animation>
				<left>10</left>
				<width>$PARAM[width]</width>
				<height>$PARAM[width]</height>
				<aspectratio>keep</aspectratio>
				<bordersize>10</bordersize>
				<texture diffuse="thumbs/disc-diffuse.png">$VAR[NowPlayingDiscArtVar]</texture>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(NowplayingSkinHelperScraper) + [Player.IsInternetStream | Pvr.IsPlayingRadio] + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))</visible>
				<animation effect="slide" end="130,0" time="300" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
				<animation effect="rotate" end="360" center="auto" time="800" loop="true" condition="Player.Rewinding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="800" loop="true" condition="Player.Forwarding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" condition="!Player.Paused + !Player.Forwarding + !Player.Rewinding">Conditional</animation>
				<left>$PARAM[discborder]</left>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio>keep</aspectratio>
				<bordersize>$PARAM[discborder]</bordersize>
				<texture diffuse="thumbs/disc-diffuse.png">$INFO[Window(Home).Property(SkinHelper.Player.Art.DiscArt)]</texture>
			</control>
			<control type="image">
				<visible>!Pvr.IsPlayingRadio + !Player.IsInternetStream</visible>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>$PARAM[border]</bordersize>
				<texture diffuse="thumbs/mask.png">$VAR[NowPlayingThumbVar]</texture>
				<aspectratio align="center" aligny="center">scale</aspectratio>
			</control>
			<control type="image">
				<visible>Pvr.IsPlayingRadio | Player.IsInternetStream</visible>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>$PARAM[border]</bordersize>
				<texture diffuse="thumbs/mask.png">$VAR[NowPlayingThumbVar]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(NowplayingSkinHelperScraper) + [Player.IsInternetStream | Pvr.IsPlayingRadio] + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Thumb))</visible>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>$PARAM[border]</bordersize>
				<texture diffuse="thumbs/mask.png">$INFO[Window(Home).Property(SkinHelper.Player.Art.Thumb)]</texture>
				<aspectratio align="center" aligny="center">$PARAM[aspect]</aspectratio>
			</control>
		</control>
		<control type="image">
			<width>$PARAM[casewidth]</width>
			<height>$PARAM[height]</height>
			<texture border="20">$PARAM[case]</texture>
		</control>
	</include>
	<include name="NowPlayingSquareContent">
		<control type="group">
			<left>$PARAM[leftinfo]</left>
			<right>$PARAM[right]</right>
			<height>$PARAM[height]</height>
			<animation effect="slide" end="$PARAM[slide],0" time="300" condition="[!Player.Paused + $PARAM[discart] + !Player.IsInternetStream + !Pvr.IsPlayingTv + !Pvr.IsPlayingRadio] | [!Player.Paused + $PARAM[discart] + Skin.HasSetting(NowplayingSkinHelperScraper) + Player.IsInternetStream + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))]">Conditional</animation>
			<control type="label" id="9052">
				<top>16</top>
				<height>40</height>
				<font>Font34_Reg</font>
				<textoffsetx>50</textoffsetx>
				<label>$VAR[NowPlayingInfo1Var]</label>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Control.GetLabel(9052)) | !String.IsEmpty(Control.GetLabel(9053))</visible>
				<top>62</top>
				<width>388</width>
				<height>4</height>
				<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
			</control>
			<control type="label" id="9053">
				<top>64</top>
				<height>40</height>
				<font>Font28_Reg</font>
				<textoffsetx>50</textoffsetx>
				<label>$VAR[NowPlayingInfo2Var]</label>
				<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
			</control>
			<control type="image">
				<visible>$PARAM[logo]</visible>
				<include>AnimationVisibleFade</include>
				<top>110</top>
				<width>500</width>
				<bottom>110</bottom>
				<bordersize>50,0,0,0</bordersize>
				<texture>$VAR[NowPlayingLogoVar]</texture>
				<aspectratio align="left">keep</aspectratio>
			</control>
			<control type="label">
				<bottom>66</bottom>
				<height>40</height>
				<font>Font28_Reg</font>
				<textoffsetx>50</textoffsetx>
				<label>$VAR[NowPlayingStatusVar]</label>
				<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
			</control>
			<control type="image">
				<width>18</width>
				<height>36</height>
				<bottom>20</bottom>
				<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/nowplaying.png</texture>
			</control>
			<control type="label">
				<height>40</height>
				<bottom>19</bottom>
				<font>Font34_Reg</font>
				<textoffsetx>50</textoffsetx>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				<label>$INFO[MusicPlayer.TrackNumber,,. ]$INFO[Player.Title,, ]$INFO[VideoPlayer.Year,(,)]</label>
			</control>
		</control>
		<control type="group">
			<left>$PARAM[left]</left>
			<control type="image">
				<visible>[$PARAM[discart] + !Player.IsInternetStream + !Pvr.IsPlayingTv + !Pvr.IsPlayingRadio] | [$PARAM[discart] + Skin.HasSetting(NowplayingSkinHelperScraper) + Player.IsInternetStream + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))]</visible>
				<animation effect="slide" end="$PARAM[slidedisc],0" time="300" condition="!Player.Paused">Conditional</animation>
				<animation effect="rotate" end="360" center="auto" time="800" loop="true" condition="Player.Rewinding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="800" loop="true" condition="Player.Forwarding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" condition="!Player.Paused + !Player.Forwarding + !Player.Rewinding">Conditional</animation>
				<left>$PARAM[discborder]</left>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio>keep</aspectratio>
				<bordersize>$PARAM[discborder]</bordersize>
				<texture diffuse="thumbs/disc-diffuse.png">$VAR[NowPlayingDiscArtVar]</texture>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(NowplayingSkinHelperScraper) + Player.IsInternetStream + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))</visible>
				<animation effect="slide" end="$PARAM[slidedisc],0" time="300" condition="!Player.Paused">Conditional</animation>
				<animation effect="rotate" end="360" center="auto" time="800" loop="true" condition="Player.Rewinding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="800" loop="true" condition="Player.Forwarding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" condition="!Player.Paused + !Player.Forwarding + !Player.Rewinding">Conditional</animation>
				<left>$PARAM[discborder]</left>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio>keep</aspectratio>
				<bordersize>$PARAM[discborder]</bordersize>
				<texture diffuse="thumbs/disc-diffuse.png">$INFO[Window(Home).Property(SkinHelper.Player.Art.DiscArt)]</texture>
			</control>
			<control type="image">
				<visible>!Player.IsInternetStream + !Pvr.IsPlayingRadio</visible>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>$PARAM[border]</bordersize>
				<texture diffuse="thumbs/mask.png">$VAR[NowPlayingThumbVar]</texture>
				<aspectratio align="center" aligny="center">scale</aspectratio>
			</control>
			<control type="image">
				<visible>Player.IsInternetStream | Pvr.IsPlayingRadio</visible>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>$PARAM[border]</bordersize>
				<texture diffuse="thumbs/mask.png">$VAR[NowPlayingThumbVar]</texture>
				<aspectratio align="center" aligny="center">keep</aspectratio>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(NowplayingSkinHelperScraper) + Player.IsInternetStream + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Thumb))</visible>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<bordersize>$PARAM[border]</bordersize>
				<texture diffuse="thumbs/mask.png">$INFO[Window(Home).Property(SkinHelper.Player.Art.Thumb)]</texture>
				<aspectratio align="center" aligny="center">$PARAM[aspect]</aspectratio>
			</control>
		</control>
		<control type="image">
			<width>$PARAM[casewidth]</width>
			<height>$PARAM[height]</height>
			<texture border="20">$PARAM[case]</texture>
		</control>
	</include>
	<include name="HomeNowPlayingPortraitContent">
		<control type="group">
			<visible>$PARAM[visible]</visible>
			
			<control type="group">
				<visible>String.IsEqual(Skin.String(NowPlayingHomeVideoInfo),disable)</visible>
				<!-- <right>-45</right> -->
				<control type="group">
					<animation effect="slide" end="89,0" delay="200" time="200" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
					<control type="label" id="9052">
						<top>16</top>
						<left>208</left>
						<height>40</height>
						<textoffsetx>45</textoffsetx>
						<label>$VAR[NowPlayingInfo1Var]</label>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<font>Font34_Reg</font>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(9052)) | !String.IsEmpty(Control.GetLabel(9053))</visible>
						<top>59</top>
						<left>208</left>
						<height>4</height>
						<width>388</width>
						<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
					</control>
					<control type="label" id="9053">
						<top>61</top>
						<left>208</left>
						<height>40</height>
						<font>Font28_Reg</font>
						<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
						<textoffsetx>45</textoffsetx>
						<label>$VAR[NowPlayingInfo2Var]</label>
					</control>
					<control type="image">
						<visible>$PARAM[logo]</visible>
						<include>AnimationVisibleFade</include>
						<top>112</top>
						<left>208</left>
						<width>305</width>
						<height>100</height>
						<texture>$VAR[NowPlayingLogoVar]</texture>
						<aspectratio align="right">keep</aspectratio>
					</control>
				</control>
				<control type="label">
					<top>220</top>
					<left>208</left>
					<height>40</height>
					<font>Font28_Reg</font>
					<textcolor>grey</textcolor>
					<textoffsetx>45</textoffsetx>
					<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
					<label>$VAR[NowPlayingStatusVar]</label>
				</control>
				<control type="image">
					<top>257</top>
					<left>208</left>
					<width>18</width>
					<height>36</height>
					<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/nowplaying.png</texture>
				</control>
				<control type="label">
					<top>254</top>
					<left>208</left>
					<height>40</height>
					<font>Font34_Reg</font>
					<textoffsetx>45</textoffsetx>
					<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
					<label>$INFO[MusicPlayer.TrackNumber,,. ]$INFO[Player.Title,, ]$INFO[VideoPlayer.Year,(,)]</label>
				</control>
			</control>
			<control type="group">
				<visible>!String.IsEqual(Skin.String(NowPlayingHomeVideoInfo),disable)</visible>
				<left>246</left>
				<right>535</right>
				<control type="group">
					<animation effect="slide" end="89,0" delay="200" time="200" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
					<control type="label" id="9052">
						<top>15</top>
						<height>40</height>
						<textoffsetx>45</textoffsetx>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<label>$VAR[NowPlayingInfo1Var]</label>
						<font>Font34_Reg</font>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(9052)) | !String.IsEmpty(Control.GetLabel(9053))</visible>
						<top>63</top>
						<height>4</height>
						<width>388</width>
						<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
					</control>
					<control type="label" id="9053">
						<top>69</top>
						<height>40</height>
						<font>Font28_Reg</font>
						<textoffsetx>45</textoffsetx>
						<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
						<label>$VAR[NowPlayingInfo2Var]</label>
					</control>
					<control type="image">
						<visible>$PARAM[logo]</visible>
						<include>AnimationVisibleFade</include>
						<top>130</top>
						
						<width>350</width>
						<height>120</height>
						<texture>$VAR[NowPlayingLogoVar]</texture>
						<aspectratio aligny="center" align="right">keep</aspectratio>
					</control>
				</control>
				<control type="label">
					<top>270</top>
					<height>40</height>
					<font>Font28_Reg</font>
					<textoffsetx>45</textoffsetx>
					<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
					<label>$VAR[NowPlayingStatusVar]</label>
				</control>
				<control type="image">
					<top>311</top>
					<width>18</width>
					<height>36</height>
					<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/nowplaying.png</texture>
				</control>
				<control type="label">
					<top>310</top>
					<height>40</height>
					<font>Font34_Reg</font>
					<textoffsetx>45</textoffsetx>
					<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
					<label>$INFO[MusicPlayer.TrackNumber,,. ]$INFO[Player.Title,, ]$INFO[VideoPlayer.Year,(,)]</label>
				</control>
			</control>
			<control type="image">
				<visible>$PARAM[discart]</visible>
				<animation effect="slide" end="98,0" delay="200" time="200" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
				<animation effect="rotate" end="360" center="auto" time="800" loop="true" reversible="false" condition="Player.Rewinding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="800" loop="true" reversible="false" condition="Player.Forwarding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused + !Player.Forwarding + !Player.Rewinding">Conditional</animation>
				<top>17</top>
				<left>25</left>
				<width>247</width>
				<height>247</height>
				<include>TextureFadeTime</include>
				<texture diffuse="diffuse/disc.png">$VAR[NowPlayingDiscArtVar]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(NowplayingSkinHelperScraper) + [Player.IsInternetStream | Pvr.IsPlayingRadio] + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))</visible>
				<animation effect="slide" end="89,0" delay="200" time="200" condition="$PARAM[discart] + !Player.Paused">Conditional</animation>
				<animation effect="rotate" end="360" center="auto" time="800" loop="true" reversible="false" condition="Player.Rewinding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="800" loop="true" reversible="false" condition="Player.Forwarding">Conditional</animation>
				<animation effect="rotate" end="-360" center="auto" time="4800" loop="true" reversible="false" condition="!Player.Paused + !Player.Forwarding + !Player.Rewinding">Conditional</animation>
				<top>10</top>
				<left>15</left>
				<width>208</width>
				<height>208</height>
				<include>TextureFadeTime</include>
				<texture diffuse="thumbs/disc-diffuse.png">$INFO[Window(Home).Property(SkinHelper.Player.Art.DiscArt)]</texture>
				<aspectratio>keep</aspectratio>
			</control>
			<control type="image">
				<top>-10</top>
				<left>-10</left>
				<width>266</width>
				<height>388</height>
				<texture border="10">thumbs/thumb-frame.png</texture>
			</control>
			<control type="image">
				<top>-10</top>
				<left>-10</left>
				<width>266</width>
				<height>388</height>
				<bordersize>10</bordersize>
				<aspectratio>scale</aspectratio>
				<texture>$VAR[NowPlayingThumbVar]</texture>
				<aspectratio align="center" aligny="center">$PARAM[aspect]</aspectratio>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(NowplayingSkinHelperScraper) + [Player.IsInternetStream | Pvr.IsPlayingTv] + !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Poster))</visible>
				<width>266</width>
				<height>388</height>
				<include>TextureFadeTime</include>
				<texture>$INFO[Window(Home).Property(SkinHelper.Player.Art.Poster)]</texture>
				<aspectratio align="center" aligny="center">scale</aspectratio>
			</control>
		</control>
	</include>
	<!-- Widgets -->
	<include name="WidgetPosition">
		<animation effect="slide" end="0,362" time="200" condition="String.IsEmpty(Skin.String(WidgetPosition))">Conditional</animation>
		<animation effect="slide" end="0,41" time="200" condition="!String.IsEqual(Skin.String(WidgetPosition),belowmenu) + Skin.HasSetting(InfoBarTop) + [!Skin.HasSetting(InfoBarLeftDisable) | !Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)]">Conditional</animation>
		<animation effect="slide" end="0,596" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),belowmenu)">Conditional</animation>
		<animation effect="slide" end="0,41" time="200" condition="String.IsEqual(Skin.String(WidgetPosition),belowmenu) + !system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
	</include>
	<include name="WidgetContainer">
		<include>WidgetPosition</include>
		<itemlayout width="$PARAM[containerWidth]" height="$PARAM[containerHeight]">
			<control type="image">
				<left>$PARAM[leftArt]</left>
				<right>$PARAM[rightArt]</right>
				<top>$PARAM[topArt]</top>
				<bottom>$PARAM[bottomArt]</bottom>
				<texture border="10" colordiffuse="$VAR[MainMenuWidgetColorVar]">thumbs/thumb-frame.png</texture>
			</control>
			<control type="image">
				<left>$PARAM[leftArt]</left>
				<right>$PARAM[rightArt]</right>
				<top>$PARAM[topArt]</top>
				<bottom>$PARAM[bottomArt]</bottom>
				<bordersize>10</bordersize>
				<aspectratio align="center" aligny="center">$PARAM[Aspect]</aspectratio>
				<texture fallback="DefaultFile.png" colordiffuse="$VAR[MainMenuWidgetColorVar]">$PARAM[Art]</texture>
			</control>
			<control type="image">
				<left>$PARAM[leftArt]</left>
				<right>$PARAM[rightArt]</right>
				<bottom>0</bottom>
				<height>100</height>
				<bordersize>10</bordersize>
				<texture colordiffuse="$VAR[MainMenuWidgetColorVar]">panels/background-gradient.png</texture>
				<visible>$PARAM[label]</visible>
			</control>
			<control type="label">
				<left>10</left>
				<right>10</right>
				<bottom>10</bottom>
				<height>50</height>
				<align>center</align>
				<font>Font29_Cond</font>
				<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
				<textoffsetx>5</textoffsetx>
				<label>$INFO[ListItem.Label]</label>
				<visible>$PARAM[label]</visible>
			</control>
			<control type="image">
				<left>0</left>
				<right>5</right>
				<texture border="$PARAM[caseBorder]" colordiffuse="$VAR[MainMenuWidgetColorVar]">$PARAM[Case]</texture>
			</control>
		</itemlayout>
		<focusedlayout width="$PARAM[containerWidth]" height="$PARAM[containerHeight]">
			<control type="group">
				<animation  type="Focus" reversible="false">
					<effect type="zoom" start="95" end="100" time="300" tween="sine" easing="inout" center="auto" />
				</animation>
				<control type="image">
					<texture colordiffuse="$VAR[MainMenuHighlightColorVar]" border="10">buttons/panel-select-focus.png</texture>
				</control>
				<control type="image">
					<left>$PARAM[leftArt]</left>
					<right>$PARAM[rightArt]</right>
					<top>$PARAM[topArt]</top>
					<bottom>$PARAM[bottomArt]</bottom>
					<texture border="10">thumbs/thumb-frame.png</texture>
				</control>
				<control type="image">
					<left>$PARAM[leftArt]</left>
					<right>$PARAM[rightArt]</right>
					<top>$PARAM[topArt]</top>
					<bottom>$PARAM[bottomArt]</bottom>
					<bordersize>10</bordersize>
					<aspectratio align="center" aligny="center">$PARAM[Aspect]</aspectratio>
					<texture fallback="DefaultFile.png">$PARAM[Art]</texture>
				</control>
				<!-- <control type="image">
					<left>$PARAM[leftArt]</left>
					<top>$PARAM[topArt]</top>
					<width>$PARAM[widthArt]</width>
					<height>$PARAM[heightArt]</height>
					<texture>homewidgets/label_back_poster.png</texture>
					<visible>$PARAM[labelFocusVisible]</visible>
				</control>
				<control type="label">
					<left>$PARAM[leftArt]</left>
					<top>$PARAM[topArt]r</top>
					<width>$PARAM[widthArt]</width>
					<height>$PARAM[labelHeight]</height>
					<align>center</align>
					<textoffsetx>7</textoffsetx>
					<font>$PARAM[labelFont]</font>
					<textcolor>$VAR[ThemeLabelColor]</textcolor>
					<label>$VAR[HomeWidgetTitleVar]</label>
					<visible>$PARAM[labelFocusVisible]</visible>
				</control> -->
				<control type="image">
					<left>0</left>
					<right>5</right>
					<texture border="$PARAM[caseBorder]">$PARAM[Case]</texture>
				</control>
			</control>
		</focusedlayout>
	</include>
	<include name="WidgetInfo">
		<control type="group" id="$PARAM[id]">
			<visible>ControlGroup(90010).HasFocus</visible>
			<include>AnimationVisibleFade</include>
			<control type="image">
				<visible>String.IsEmpty(Skin.String(WidgetPosition)) | String.IsEqual(Skin.String(WidgetPosition),belowmenu)</visible>
				<include>AnimationVisibleFade</include>
				<width>1920</width>
				<height>700</height>
				<texture flipy="true" colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
			</control>
			<control type="image">
				<visible>String.IsEqual(Skin.String(WidgetPosition),top)</visible>
				<include>AnimationVisibleFade</include>
				<top>147</top>
				<width>1920</width>
				<height>700</height>
				<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
			</control>
			<control type="image">
				<visible>String.IsEqual(Skin.String(WidgetPosition),abovemenu)</visible>
				<include>AnimationVisibleFade</include>
				<top>380</top>
				<width>1920</width>
				<height>700</height>
				<texture colordiffuse="$VAR[MainMenuBackgroundColorVar]">panels/background-gradient.png</texture>
			</control>
			<control type="group">
				<top>40</top>
				<left>40</left>
				<right>100</right>
				<height>400</height>
				<animation effect="slide" end="0,403" condition="String.IsEqual(Skin.String(WidgetPosition),top)">Conditional</animation>
				<animation effect="slide" end="0,637" condition="String.IsEqual(Skin.String(WidgetPosition),abovemenu)">Conditional</animation>
				<animation effect="slide" end="0,41" condition="String.IsEqual(Skin.String(WidgetPosition),abovemenu) + !system.getbool(lookandfeel.enablerssfeeds)">Conditional</animation>
				<animation effect="slide" end="0,41" condition="!String.IsEqual(Skin.String(WidgetPosition),abovemenu) + Skin.HasSetting(InfoBarTop) + [!Skin.HasSetting(InfoBarLeftDisable) | !Skin.HasSetting(InfoBarDisableWeather) | !Skin.HasSetting(InfoBarDisableDate) | !Skin.HasSetting(InfoBarDisableTime)]">Conditional</animation>
				<control type="image">
					<top>-10</top>
					<left>-10</left>
					<include>TextureFadeTime</include>
					<width>$PARAM[left]</width>
					<height>332</height>
					<texture border="10">thumbs/thumb-frame.png</texture>
				</control>
				<control type="image">
					<width>$PARAM[width]</width>
					<height>327</height>
					<include>TextureFadeTime</include>
					<texture>$VAR[HomeWidgetPosterVar]</texture>
					<aspectratio align="center" aligny="center">$PARAM[aspect]</aspectratio>
				</control>
				
				<control type="grouplist">
					<left>$PARAM[left]</left>
					<itemgap>10</itemgap>
					<control type="label">
						<height>28</height>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<font>Font42_Bold_Caps</font>
						<label>$VAR[HomeWidgetTitleVar]</label>
					</control>
					<control type="label">
						<height>40</height>
						<font>Font36_Reg</font>
						<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
						<label>$VAR[HomeWidgetSubTitleVar]</label>
					</control>
					<control type="image">
						<height>4</height>
						<width>388</width>
						<texture colordiffuse="$VAR[MainMenuListSeparatorColorVar]">panels/separator.png</texture>
					</control>
					<control type="label">
						<top>100</top>
						<height>27</height>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<label>$VAR[WidgetInfoVar]</label>
					</control>
					<control type="textbox">
						<height>173</height>
						<align>justify</align>
						<font>Font34_Reg_110</font>
						<include>AutoScrollPlot</include>
						<textcolor>$VAR[MainMenuSubTextColorVar]</textcolor>
						<label>$VAR[HomeWidgetPlotVar]</label>
					</control>
				</control>
			</control>
		</control>
	</include>
</includes>