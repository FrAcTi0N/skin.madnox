<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="ViewArtwork">
		<param name="aspect">scale</param>
		<param name="art">$VAR[PosterVar]</param>
		<param name="fallback">DefaultFile.png</param>
		<param name="diffuse">diffuse/rounded5-532x800.png</param>
		<definition>
			<control type="image">
				<bordersize>10</bordersize>
				<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<bordersize>10</bordersize>
				<fadetime>TextureFadeTime</fadetime>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<bordersize>10</bordersize>
				<fadetime>TextureFadeTime</fadetime>
				<aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
				<texture background="true" diffuse="$PARAM[diffuse]" fallback="$PARAM[fallback]">$PARAM[art]</texture>
			</control>
			<control type="image">
				<texture border="20">thumbs/overlay.png</texture>
			</control>
		</definition>
	</include>
	<include name="ViewArtworkReflect">
		<param name="aspect">scale</param>
		<param name="art">$VAR[PosterVar]</param>
		<param name="fallback">DefaultFile.png</param>
		<definition>
			<control type="image">
				<bordersize>10</bordersize>
				<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<bordersize>10</bordersize>
				<fadetime>TextureFadeTime</fadetime>
				<aspectratio scalediffuse="false">keep</aspectratio>
				<texture flipy="true" diffuse="thumbs/reflect.png">DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<bordersize>10</bordersize>
				<fadetime>TextureFadeTime</fadetime>
				<aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
				<texture background="true" flipy="true" diffuse="thumbs/reflect.png" fallback="$PARAM[fallback]">$PARAM[art]</texture>
			</control>
		</definition>
	</include>
	<!-- <visible>[String.IsEmpty(ListItem.Art(clearart)) + String.IsEmpty(ListItem.Art(tvshow.clearart)) + String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(artist.clearart)) + String.IsEmpty(ListItem.Art(artist.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo)) + !Window.IsVisible(MyPVRChannels.xml)] | [Window.IsVisible(MyPVRChannels.xml) + String.IsEmpty(ListItem.Art(Thumb))]</visible> -->
	<include name="ViewLogoFallback">
		<param name="font">Font44_Bold</param>
		<param name="visible"></param>
		<definition>
			<control type="group">
				<visible>$PARAM[visible]</visible>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<bordersize>10</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="textbox">
					<visible>!ListItem.IsParentFolder</visible>
					<left>20</left>
					<right>20</right>
					<align>center</align>
					<aligny>center</aligny>
					<font>$PARAM[font]</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewArtworkVideoCase">
		<param name="logoheight">53</param>
		<param name="bordersize">19,63,19,23</param>
		<definition>
			<control type="group">
				<visible>ListItem.IsParentFolder | String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio>scale</aspectratio>
					<texture>$INFO[ListItem.Icon]</texture>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>!ListItem.IsParentFolder + !String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio>stretch</aspectratio>
					<texture background="true" fallback="DefaultFile.png">$VAR[PosterVar]</texture>
				</control>
				<control type="image">
					<fadetime>TextureFadeTime</fadetime>
					<texture background="true" border="15">$VAR[VideoCaseVar]</texture>
				</control>
				<control type="image">
					<visible>String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)</visible>
					<top>9</top>
					<height>$PARAM[logoheight]</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<fadetime>TextureFadeTime</fadetime>
					<texture background="true">$VAR[StudioIconsVar]</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewArtworkVideoCaseReflect">
		<param name="bordersize">19,23,19,63</param>
		<definition>
			<control type="group">
				<visible>ListItem.IsParentFolder | String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>10</bordersize>
					<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
					<texture background="true" flipy="true" diffuse="thumbs/reflect.png" fallback="$PARAM[fallback]">$INFO[ListItem.Icon]</texture>
				</control>
			</control>
			<control type="group">
				<visible>!ListItem.IsParentFolder + !String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio>stretch</aspectratio>
					<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png" fallback="DefaultFile.png">$VAR[PosterVar]</texture>
				</control>
				<control type="image">
					<fadetime>TextureFadeTime</fadetime>
					<texture background="true" flipy="true" diffuse="thumbs/reflect.png" border="20">$VAR[VideoCaseVar]</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewArtworkAudioCase">
		<param name="bordersize">53,15,15,15</param>
		<definition>
			<control type="group">
				<visible>ListItem.IsParentFolder | String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio>scale</aspectratio>
					<texture>$INFO[ListItem.Icon]</texture>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>!ListItem.IsParentFolder + !String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true" fallback="DefaultFile.png">$VAR[PosterVar]</texture>
				</control>
				<control type="image">
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio>stretch</aspectratio>
					<texture border="15">thumbs/case/cd.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewArtworkAudioCaseReflect">
		<param name="bordersize">53,15,15,14</param>
		<definition>
			<control type="group">
				<visible>ListItem.IsParentFolder | String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>10</bordersize>
					<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio scalediffuse="false">$PARAM[aspect]</aspectratio>
					<texture flipy="true" diffuse="thumbs/reflect.png" fallback="$PARAM[fallback]">$INFO[ListItem.Icon]</texture>
				</control>
			</control>
			<control type="group">
				<visible>!ListItem.IsParentFolder + !String.Contains(ListItem.Label,*)</visible>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<texture diffuse="thumbs/reflectsquare.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>$PARAM[bordersize]</bordersize>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png" fallback="DefaultFile.png">$VAR[PosterVar]</texture>
				</control>
				<control type="image">
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture flipy="true" diffuse="thumbs/reflectsquare.png" border="15">thumbs/case/cd.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewFanartInfoVideoPreview">
		<param name="id"></param>
		<param name="width"></param>
		<param name="height"></param>
		<param name="diffuse"></param>
		<param name="textboxheight">214</param>
		<param name="textboxfont">Font28_Reg_112</param>
		<definition>
			<control type="group">
				<top>194</top>
				<right>125</right>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<control type="image">
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)] + !$EXP[AreaVisiblePVR]</visible>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="$PARAM[diffuse]">$VAR[FanartVar]</texture>
				</control>
				<control type="image">
					<visible>![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)] + $EXP[AreaVisiblePVR]</visible>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
					<texture background="true" diffuse="$PARAM[diffuse]">$VAR[FanartVar]</texture>
				</control>
				<control type="group">
					<visible>Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)</visible>
					<control type="image">
						<texture>colors/black.png</texture>
					</control>
					<control type="videowindow" />
					<control type="image">
						<bordersize>-10</bordersize>
						<texture border="20">thumbs/overlay2.png</texture>
					</control>
				</control>
				<control type="image">
					<visible>![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
					<bordersize>-10</bordersize>
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<top>237</top>
				<control type="image">
					<visible>!Skin.HasSetting(View$PARAM[id]HideLogo)</visible>
					<top>$PARAM[height]</top>
					<bottom>195</bottom>
					<right>125</right>
					<width>$PARAM[width]</width>
					<aspectratio>keep</aspectratio>
					<texture background="true">$VAR[ClearLogoVar]</texture>
					<animation effect="fade" end="10" time="0" condition="true">Conditional</animation>
				</control>
			</control>
			<control type="group">
				<top>214</top>
				<control type="grouplist">
					<top>$PARAM[height]</top>
					<right>125</right>
					<width>$PARAM[width]</width>
					<include>ViewListInfo</include>
					<control type="textbox">
						<top>2</top>
						<height>$PARAM[textboxheight]</height>
						<font>$PARAM[textboxfont]</font>
						<label>$VAR[ViewPlotVar]</label>
						<pagecontrol>60$PARAM[id]1</pagecontrol>
						<include>AutoScrollPlot</include>
					</control>
				</control>
			</control>
			<control type="group">
				<top>220</top>
				<control type="scrollbar" id="60$PARAM[id]1">
					<top>$PARAM[height]</top>
					<right>80</right>
					<bottom>195</bottom>
					<onleft>60$PARAM[id]</onleft>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewContainerList">
		<param name="listheight">72.7</param>
		<param name="biglistvisible"></param>
		<definition>
			<itemlayout height="$PARAM[listheight]" condition="!$PARAM[biglistvisible] + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos)]">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="label">
					<left>25</left>
					<right>78</right>
					<label fallback="..">$VAR[ListTitleVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<right>80</right>
					<align>right</align>
					<label>$VAR[ListLabel2VideoVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="$PARAM[listheight]" condition="!$PARAM[biglistvisible] + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos)]">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="label">
					<left>25</left>
					<right>78</right>
					<scroll>true</scroll>
					<label fallback="..">$VAR[ListTitleVar]</label>
					<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
				</control>
				<control type="label">
					<right>80</right>
					<align>right</align>
					<label>$VAR[ListLabel2VideoVar]</label>
					<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="$PARAM[listheight]" condition="!$PARAM[biglistvisible]">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="label">
					<left>25</left>
					<right>25</right>
					<label fallback="..">$VAR[ListTitleVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<right>25</right>
					<align>right</align>
					<label>$VAR[ListLabel2Var]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
			</itemlayout>
			<focusedlayout height="$PARAM[listheight]" condition="!$PARAM[biglistvisible]">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="label">
					<left>25</left>
					<right>25</right>
					<scroll>true</scroll>
					<label fallback="..">$VAR[ListTitleVar]</label>
					<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
				</control>
				<control type="label">
					<right>25</right>
					<align>right</align>
					<label>$VAR[ListLabel2Var]</label>
					<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(movies)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>20</left>
					<width>100</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="image">
					<visible>!ListItem.IsParentFolder</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>15</top>
					<left>20</left>
					<width>100</width>
					<height>70</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
				</control>
				<control type="label">
					<visible>[!String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + !String.IsEmpty(ListItem.Label2)]</visible>
					<top>11</top>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>[String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + String.IsEmpty(ListItem.Label2)]</visible>
					<left>140</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleMoviesVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(movies)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<top>10</top>
					<left>20</left>
					<width>100</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="image">
					<visible>!ListItem.IsParentFolder</visible>
					<top>15</top>
					<left>20</left>
					<width>100</width>
					<height>70</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
				</control>
				<control type="label">
					<visible>[!String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + !String.IsEmpty(ListItem.Label2)]</visible>
					<top>11</top>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>[String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + String.IsEmpty(ListItem.Label2)]</visible>
					<left>140</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleMoviesVar]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(tvshows)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>20</left>
					<width>100</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="image">
					<visible>!ListItem.IsParentFolder</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>15</top>
					<left>20</left>
					<width>100</width>
					<height>70</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>140</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])]</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Label2]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(tvshows)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<top>10</top>
					<left>20</left>
					<width>100</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="image">
					<visible>!ListItem.IsParentFolder + !Skin.HasSetting(MediaFlagsColored)</visible>
					<top>15</top>
					<left>20</left>
					<width>100</width>
					<height>70</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="flags/default/studio-fallback.png">$VAR[StudioIconsVar]</texture>
				</control>
				<control type="image">
					<visible>!ListItem.IsParentFolder + Skin.HasSetting(MediaFlagsColored)</visible>
					<top>15</top>
					<left>20</left>
					<width>100</width>
					<height>70</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="flags/colored/studio-fallback.png">$VAR[StudioIconsVar]</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>140</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])]</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>10</bottom>
					<left>140</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Label2]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(seasons)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>54</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<top>11</top>
					<left>104</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<bottom>11</bottom>
					<left>104</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(seasons)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>54</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<top>11</top>
					<left>104</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<bottom>11</bottom>
					<left>104</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(episodes)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="label">
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<align>center</align>
					<label>$VAR[EpisodeNumberLabelVar]</label>
					<font>Font42_Bold_Caps</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2) | String.Contains(ListItem.FolderPath,recent) | String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
					<top>11</top>
					<left>120</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2) + !String.Contains(ListItem.FolderPath,recent) + !String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) + !String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
					<left>120</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>120</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleEpisodesVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(episodes)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="label">
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<align>center</align>
					<label>$VAR[EpisodeNumberLabelVar]</label>
					<font>Font42_Bold_Caps</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2) | String.Contains(ListItem.FolderPath,recent) | String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
					<top>11</top>
					<left>120</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2) + !String.Contains(ListItem.FolderPath,recent) + !String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) + !String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
					<left>120</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>120</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleEpisodesVar]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(artists)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<left>130</left>
					<right>25</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(artists)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<left>130</left>
					<right>25</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(albums)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>25</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleAlbumsVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(albums)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>25</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleAlbumsVar]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(songs)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="label">
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<align>center</align>
					<label>$INFO[ListItem.TrackNumber]</label>
					<font>Font42_Bold_Caps</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>25</right>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<label fallback="..">$VAR[BigListSubTitleSongsVar]</label>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(songs)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem.IsParentFolder</visible>
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture>DefaultFolderBack.png</texture>
				</control>
				<control type="label">
					<top>10</top>
					<left>20</left>
					<width>90</width>
					<height>80</height>
					<align>center</align>
					<label>$INFO[ListItem.TrackNumber]</label>
					<font>Font42_Bold_Caps</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>25</right>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<label fallback="..">$VAR[BigListSubTitleSongsVar]</label>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(musicvideos)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<top>11</top>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleMusicVideosVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(musicvideos)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<top>11</top>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Title]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleMusicVideosVar]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(sets)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>54</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<top>11</top>
					<left>104</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>104</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleSetsVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(sets)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>54</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<top>11</top>
					<left>104</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>104</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleSetsVar]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="image">
					<right>23</right>
					<width>32</width>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(addons)">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | !String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEqual(Container.SortMethod,$LOCALIZE[551]) + String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleAddonVar]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(addons)">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>scale</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | !String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>!String.IsEqual(Container.SortMethod,$LOCALIZE[551]) + String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$VAR[BigListSubTitleAddonVar]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
			</focusedlayout>
			<itemlayout height="100" condition="$PARAM[biglistvisible]">
				<control type="image">
					<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
				</control>
				<control type="image">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Label2]</label>
					<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				</control>
			</itemlayout>
			<focusedlayout height="100" condition="$PARAM[biglistvisible]">
				<control type="image">
					<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
				</control>
				<control type="image">
					<top>10</top>
					<left>25</left>
					<width>80</width>
					<height>80</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Label2)</visible>
					<top>11</top>
					<left>130</left>
					<right>78</right>
					<height>40</height>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<visible>String.IsEmpty(ListItem.Label2)</visible>
					<left>130</left>
					<right>78</right>
					<label fallback="..">$INFO[ListItem.Label]</label>
					<font>Font32_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
				<control type="label">
					<animation effect="fade" end="70" condition="true">conditional</animation>
					<bottom>11</bottom>
					<left>130</left>
					<right>25</right>
					<height>40</height>
					<font>Font28_Reg</font>
					<label>$INFO[ListItem.Label2]</label>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
				</control>
			</focusedlayout>
		</definition>
	</include>
	<include name="ViewContainerList2">
		<itemlayout height="72.7" condition="!$PARAM[biglistvisible] + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos)]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>78</right>
				<label fallback="..">$VAR[ListTitleVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>80</right>
				<align>right</align>
				<label>$VAR[List2Label2VideoVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="72.7" condition="!$PARAM[biglistvisible] + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(musicvideos)]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>78</right>
				<scroll>true</scroll>
				<label fallback="..">$VAR[ListTitleVar]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>80</right>
				<align>right</align>
				<label>$VAR[List2Label2VideoVar]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="72.7" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<label fallback="..">$VAR[ListTitleVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$VAR[ListLabel2Var]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="72.7" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$VAR[ListTitleVar]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$VAR[ListLabel2Var]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(movies)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>20</left>
				<width>100</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
			</control>
			<control type="label">
				<visible>[!String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + !String.IsEmpty(ListItem.Label2)]</visible>
				<top>11</top>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>[String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + String.IsEmpty(ListItem.Label2)]</visible>
				<left>140</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleMoviesVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(movies)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<top>10</top>
				<left>20</left>
				<width>100</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
			</control>
			<control type="label">
				<visible>[!String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + !String.IsEmpty(ListItem.Label2)]</visible>
				<top>11</top>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>[String.IsEmpty(ListItem.Genre) + String.IsEqual(Container.SortMethod,$LOCALIZE[556])] | [!String.IsEqual(Container.SortMethod,$LOCALIZE[556]) + String.IsEmpty(ListItem.Label2)]</visible>
				<left>140</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleMoviesVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(tvshows)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>20</left>
				<width>100</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>140</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[562]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[562]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])]</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(tvshows)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<top>10</top>
				<left>20</left>
				<width>100</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="DefaultGenre.png">$VAR[StudioIconsVar]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>140</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[562]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[562]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[20360])]</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>10</bottom>
				<left>140</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(seasons)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>104</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<bottom>11</bottom>
				<left>104</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEqual(Container.SortMethod,$LOCALIZE[562])</visible>
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(seasons)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>104</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<bottom>11</bottom>
				<left>104</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Property(WatchedEpisodes),,/]$INFO[ListItem.Property(TotalEpisodes)]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEqual(Container.SortMethod,$LOCALIZE[562])</visible>
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(episodes)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<align>center</align>
				<label>$VAR[EpisodeNumberLabelVar]</label>
				<font>Font42_Bold_Caps</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2) | String.Contains(ListItem.FolderPath,recent) | String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
				<top>11</top>
				<left>120</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2) + !String.Contains(ListItem.FolderPath,recent) + !String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) + !String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
				<left>120</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>120</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleEpisodesVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Rating]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(episodes)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<align>center</align>
				<label>$VAR[EpisodeNumberLabelVar]</label>
				<font>Font42_Bold_Caps</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2) | String.Contains(ListItem.FolderPath,recent) | String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) | String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
				<top>11</top>
				<left>120</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2) + !String.Contains(ListItem.FolderPath,recent) + !String.IsEqual(Container.SortMethod,$LOCALIZE[20359]) + !String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
				<left>120</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>120</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleEpisodesVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Rating]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(artists)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2) | !String.IsEmpty(ListItem.Genre) | !String.IsEmpty(Listitem.Property(Artist_Disambiguation))</visible>
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2) + String.IsEmpty(ListItem.Genre) + String.IsEmpty(Listitem.Property(Artist_Disambiguation))</visible>
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigListSubTitleArtistsVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(artists)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2) | !String.IsEmpty(ListItem.Genre) | !String.IsEmpty(Listitem.Property(Artist_Disambiguation))</visible>
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2) + String.IsEmpty(ListItem.Genre) + String.IsEmpty(Listitem.Property(Artist_Disambiguation))</visible>
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigListSubTitleArtistsVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(albums)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleAlbumsVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(albums)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleAlbumsVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(songs)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<align>center</align>
				<label>$INFO[ListItem.TrackNumber]</label>
				<font>Font42_Bold_Caps</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$VAR[BigListSubTitleSongsVar]</label>
				<font>Font28_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Duration]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(songs)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="label">
				<top>10</top>
				<left>20</left>
				<width>90</width>
				<height>80</height>
				<align>center</align>
				<label>$INFO[ListItem.TrackNumber]</label>
				<font>Font42_Bold_Caps</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$VAR[BigListSubTitleSongsVar]</label>
				<font>Font28_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Duration]</label>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(musicvideos)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleMusicVideosVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(musicvideos)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleMusicVideosVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(sets)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>104</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>104</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleSetsVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(sets)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>104</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>104</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigList2SubTitleSetsVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Year]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(addons)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | !String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEqual(Container.SortMethod,$LOCALIZE[551]) + String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.AddonSummary]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEmpty(ListItem.Label2)]</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Property(Addon.Status))</visible>
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(Addon.Status)]</label>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Property(Addon.Status))</visible>
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.AddonVersion,v]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(addons)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | !String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEqual(Container.SortMethod,$LOCALIZE[551]) + String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[551])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.AddonSummary]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>![String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEmpty(ListItem.Label2)]</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Property(Addon.Status))</visible>
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Property(Addon.Status)]</label>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Property(Addon.Status))</visible>
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.AddonVersion,v]</label>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + [Container.Content(actors) | Container.Content(directors)]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Appearances,$LOCALIZE[38026] ]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + [Container.Content(actors) | Container.Content(directors)]">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Appearances,$LOCALIZE[38026] ]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(studios)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>20</left>
				<width>100</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder + !Skin.HasSetting(MediaFlagsColored)</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="flags/default/studio-fallback.png">$VAR[PosterStudioVar]</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder + Skin.HasSetting(MediaFlagsColored)</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="flags/colored/studio-fallback.png">$VAR[PosterStudioVar]</texture>
			</control>
			<control type="label">
				<left>140</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(studios)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<top>10</top>
				<left>20</left>
				<width>100</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder + !Skin.HasSetting(MediaFlagsColored)</visible>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="flags/default/studio-fallback.png">$VAR[PosterStudioVar]</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder + Skin.HasSetting(MediaFlagsColored)</visible>
				<top>15</top>
				<left>20</left>
				<width>100</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" colordiffuse="$VAR[PanelMediaFlagColorVar]" fallback="flags/colored/studio-fallback.png">$VAR[PosterStudioVar]</texture>
			</control>
			<control type="label">
				<left>140</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(genres) + String.Contains(ListItem(1).FolderPath,music)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" fallback="DefaultGenre.png">$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</texture>
			</control>
			<control type="label">
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(genres) + String.Contains(ListItem(1).FolderPath,music)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" fallback="DefaultGenre.png">$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</texture>
			</control>
			<control type="label">
				<left>130</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(genres) + !String.Contains(ListItem(1).FolderPath,music)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" fallback="DefaultGenre.png">$VAR[GenreIconVar]</texture>
			</control>
			<control type="label">
				<left>104</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(genres) + !String.Contains(ListItem(1).FolderPath,music)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>54</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" fallback="DefaultGenre.png">$VAR[GenreIconVar]</texture>
			</control>
			<control type="label">
				<left>104</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(countries)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>15</top>
				<left>25</left>
				<width>93</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>15</top>
				<left>25</left>
				<width>93</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultCountry.png">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.flags/,.png]</texture>
			</control>
			<control type="label">
				<left>140</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font34_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(countries)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<visible>ListItem.IsParentFolder</visible>
				<top>15</top>
				<left>25</left>
				<width>93</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture>DefaultFolderBack.png</texture>
			</control>
			<control type="image">
				<visible>!ListItem.IsParentFolder</visible>
				<top>15</top>
				<left>25</left>
				<width>93</width>
				<height>70</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultCountry.png">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.flags/,.png]</texture>
			</control>
			<control type="label">
				<left>140</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font34_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(images)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultPictures.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.PictureResolution]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Container.Content(images)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>scale</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultPictures.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.PictureResolution]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible]">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Label2)</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEmpty(ListItem.Label2)</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Label2]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
	</include>
	<include name="ViewContainerPVRList">
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>ListItem.IsFolder | !String.IsEqual(Container.SortMethod,$LOCALIZE[180])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!ListItem.IsFolder + String.IsEqual(Container.SortMethod,$LOCALIZE[180])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Duration]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>ListItem.IsFolder | !String.IsEqual(Container.SortMethod,$LOCALIZE[180])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>!ListItem.IsFolder + String.IsEqual(Container.SortMethod,$LOCALIZE[180])</visible>
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Duration]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRTimers.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRTimers.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRSearch.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRSearch.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
		</focusedlayout>
	</include>
	<include name="ViewContainerPVRList2">
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>52.5</width>
				<height>52.5</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<left>102</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Duration]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRRecordings.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>78</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Duration]</label>
			</control>
			<control type="image">
				<right>23</right>
				<width>32</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[PanelHighlightColorVar]">$VAR[ListOverlayIconVar]</texture>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Genre]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRChannels.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Genre]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.StartTime,, - ]$INFO[ListItem.EndTime]</label>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRTimers.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<top>12</top>
				<right>25</right>
				<height>40</height>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Timertype]</label>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<right>25</right>
				<height>40</height>
				<align>right</align>
				<font>Font28_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Comment]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRTimers.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19026])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Date]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<top>12</top>
				<right>25</right>
				<height>40</height>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Timertype]</label>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<right>25</right>
				<height>40</height>
				<align>right</align>
				<font>Font28_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Comment]</label>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRSearch.xml)">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Genre]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Date]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible] + Window.IsActive(MyPVRSearch.xml)">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFile.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<visible>!String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.Label,$LOCALIZE[19140])</visible>
				<left>130</left>
				<right>78</right>
				<label fallback="..">$INFO[ListItem.Label]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>78</right>
				<height>40</height>
				<label fallback="..">$INFO[ListItem.Title]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$INFO[ListItem.Genre]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Date]</label>
			</control>
		</focusedlayout>
	</include>
	<include name="ViewContainerPlaylistList">
		<itemlayout height="72.5" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<label fallback="..">$VAR[ListTitleVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$VAR[ListLabel2Var]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
		</itemlayout>
		<focusedlayout height="72.5" condition="!$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="label">
				<left>25</left>
				<right>25</right>
				<scroll>true</scroll>
				<label fallback="..">$VAR[ListTitleVar]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<label>$VAR[ListLabel2Var]</label>
				<textcolor>$VAR[PanelFocusTextColorVar]</textcolor>
			</control>
		</focusedlayout>
		<itemlayout height="100" condition="$PARAM[biglistvisible]">
			<control type="image">
				<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
			</control>
			<control type="image">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>-
				<label fallback="..">$VAR[ListTitlePlaylistVar]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigListSubTitlePlaylistVar]</label>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelSubTextColorVar]</textcolor>
				<label>$INFO[ListItem.Duration]</label>
			</control>
		</itemlayout>
		<focusedlayout height="100" condition="$PARAM[biglistvisible]">
			<control type="image">
				<texture border="10" colordiffuse="$VAR[PanelHighlightColorVar]">buttons/list-select-focus.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<left>25</left>
				<width>80</width>
				<height>80</height>
				<aspectratio>keep</aspectratio>
				<texture background="true" diffuse="diffuse/list-icon.png">$INFO[ListItem.Icon]</texture>
			</control>
			<control type="label">
				<top>11</top>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<label fallback="..">$VAR[ListTitlePlaylistVar]</label>
				<font>Font32_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<animation effect="fade" end="70" condition="true">conditional</animation>
				<bottom>11</bottom>
				<left>130</left>
				<right>25</right>
				<height>40</height>
				<font>Font28_Reg</font>
				<label>$VAR[BigListSubTitlePlaylistVar]</label>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
			</control>
			<control type="label">
				<right>25</right>
				<align>right</align>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Duration]</label>
			</control>
		</focusedlayout>
	</include>
	<include name="ViewListInfo">
		<itemgap>10</itemgap>
		<usecontrolcoords>true</usecontrolcoords>
		<control type="label">
			<height>30</height>
			<scroll>true</scroll>
			<font>Font28_Reg</font>
			<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
			<label>$VAR[ListViewTitleVar]</label>
		</control>
		<control type="grouplist">
			<visible>!String.IsEmpty(Control.GetLabel(5301)) | !String.IsEmpty(Control.GetLabel(5302)) | !String.IsEmpty(Control.GetLabel(5303))</visible>
			<top>-6</top>
			<height>37</height>
			<usecontrolcoords>true</usecontrolcoords>
			<orientation>horizontal</orientation>
			<control type="image">
				<visible>!String.IsEmpty(Control.GetLabel(5301))</visible>
				<top>9</top>
				<width>22</width>
				<height>22</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[ListViewIcon1Var]</texture>
			</control>
			<control type="label" id="5301">
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$VAR[ListViewInfo1Var]</label>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Control.GetLabel(5302))</visible>
				<top>9</top>
				<width>22</width>
				<height>22</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[ListViewIcon2Var]</texture>
			</control>
			<control type="label" id="5302">
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$VAR[ListViewInfo2Var]</label>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(Control.GetLabel(5303))</visible>
				<top>9</top>
				<width>22</width>
				<height>22</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[ListViewIcon3Var]</texture>
			</control>
			<control type="label" id="5303">
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$VAR[ListViewInfo3Var]</label>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(ListItem.Top250)</visible>
				<top>3</top>
				<width>50</width>
				<height>35</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[IconPathVar]imdb.png</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Top250)</visible>
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Top250, #,]</label>
			</control>
		</control>
	</include>
	<include name="View3PanelListInfo">
		<itemgap>10</itemgap>
		<usecontrolcoords>true</usecontrolcoords>
		<control type="label">
			<height>30</height>
			<scroll>true</scroll>
			<font>Font28_Reg</font>
			<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
			<label>$VAR[ListViewTitleVar]</label>
		</control>
		<control type="grouplist">
			<visible>!String.IsEmpty(Control.GetLabel(5301))</visible>
			<top>-5</top>
			<height>37</height>
			<usecontrolcoords>true</usecontrolcoords>
			<orientation>horizontal</orientation>
			<control type="image">
				<top>9</top>
				<width>22</width>
				<height>22</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[ListViewIcon1Var]</texture>
			</control>
			<control type="label" id="5301">
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				<label>$VAR[ListViewInfo1Var]</label>
			</control>
		</control>
		<control type="grouplist">
			<visible>!String.IsEmpty(Control.GetLabel(5302))</visible>
			<top>-8</top>
			<height>37</height>
			<usecontrolcoords>true</usecontrolcoords>
			<orientation>horizontal</orientation>
			<control type="image">
				<top>9</top>
				<width>22</width>
				<height>22</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[ListViewIcon2Var]</texture>
			</control>
			<control type="label" id="5302">
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				<label>$VAR[ListViewInfo2Var]</label>
			</control>
		</control>
		<control type="grouplist">
			<visible>!String.IsEmpty(Control.GetLabel(5303)) | !String.IsEmpty(ListItem.Top250)</visible>
			<top>-9</top>
			<height>37</height>
			<usecontrolcoords>true</usecontrolcoords>
			<orientation>horizontal</orientation>
			<control type="image">
				<top>9</top>
				<width>22</width>
				<height>22</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[ListViewIcon3Var]</texture>
			</control>
			<control type="label" id="5303">
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
				<label>$VAR[ListViewInfo3Var]</label>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(ListItem.Top250)</visible>
				<top>3</top>
				<width>50</width>
				<height>35</height>
				<aspectratio>keep</aspectratio>
				<texture>$VAR[IconPathVar]imdb.png</texture>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(ListItem.Top250)</visible>
				<width>auto</width>
				<font>Font26_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Top250, #,]</label>
			</control>
		</control>
	</include>
	<include name="ViewShowCaseListInfo">
		<param name="top">160</param>
		<param name="left">518</param>
		<param name="width">878</param>
		<param name="align">left</param>
		<definition>
			<control type="grouplist">
				<top>$PARAM[top]</top>
				<left>$PARAM[left]</left>
				<width>$PARAM[width]</width>
				<height>500</height>
				<itemgap>10</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<align>$PARAM[align]</align>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$VAR[ListViewTitleVar]</label>
				</control>
				<control type="grouplist">
					<visible>!String.IsEmpty(Control.GetLabel(5301)) | !String.IsEmpty(Control.GetLabel(5302)) | !String.IsEmpty(Control.GetLabel(5303))</visible>
					<height>37</height>
					<align>$PARAM[align]</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5301))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon1Var]</texture>
					</control>
					<control type="label" id="5301">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[ListViewInfo1Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5302))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon2Var]</texture>
					</control>
					<control type="label" id="5302">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[ListViewInfo2Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5303))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon3Var]</texture>
					</control>
					<control type="label" id="5303">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[ListViewInfo3Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<top>3</top>
						<width>50</width>
						<height>35</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]imdb.png</texture>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[ListItem.Top250, #,]</label>
					</control>
				</control>
				<control type="grouplist">
					<visible>!String.IsEmpty(ListItem.Director)</visible>
					<top>-9</top>
					<height>37</height>
					<align>$PARAM[align]</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<control type="image">
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]movies.png</texture>
					</control>
					<control type="label" id="5301">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<label>$INFO[ListItem.Director, ]</label>
					</control>
				</control>
				<control type="grouplist">
					<visible>!String.IsEmpty(ListItem.Writer)</visible>
					<top>-9</top>
					<height>37</height>
					<align>$PARAM[align]</align>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<control type="image">
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]writer.png</texture>
					</control>
					<control type="label" id="5301">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[MainMenuTextColorVar]</textcolor>
						<label>$INFO[ListItem.Writer, ]</label>
					</control>
				</control>
				<control type="textbox">
					<top>-3</top>
					<height>228</height>
					<font>Font28_Reg</font>
					<align>$PARAM[align]</align>
					<label>$VAR[ViewPlotVar]</label>
					<pagecontrol>605531</pagecontrol>
					<include>AutoScrollPlot</include>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewVideoPreview">
		<param name="id"></param>
		<param name="top">100</param>
		<param name="left">60</param>
		<param name="width">666</param>
		<param name="height">374</param>
		<definition>
			<control type="group">
				<visible>Control.IsVisible($PARAM[id]) + Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)</visible>
				
				<top>$PARAM[top]</top>
				<right>$PARAM[left]</right>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<control type="image">
					<texture diffuse="diffuse/rounded5-666x374.png">colors/black.png</texture>
				</control>
				<control type="videowindow" />
				<control type="image">
					<bordersize>-10</bordersize>
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewCoverFlowInfoPanel">
		<param name="id"></param>
		<definition>
			<control type="group">
				<visible>!Skin.String(View$PARAM[id]Info,none) + !Container.Content(genres)</visible>
				<control type="button" id="9999">
					<visible>Skin.String(View$PARAM[id]InfoDelay,manual)</visible>
					<include>HiddenObject</include>
					<onfocus>SetProperty(ShowInfoPanel,true,home)</onfocus>
					<onunfocus>ClearProperty(ShowInfoPanel,home)</onunfocus>
					<onleft>Control.Move($PARAM[id],-1)</onleft>
					<onleft>ClearProperty(ShowInfoPanel,home)</onleft>
					<onleft>SetFocus($PARAM[id])</onleft>
					<onright>Control.Move($PARAM[id],1)</onright>
					<onright>ClearProperty(ShowInfoPanel,home)</onright>
					<onright>SetFocus($PARAM[id])</onright>
					<ondown>ClearProperty(ShowInfoPanel,home)</ondown>
					<ondown>SetFocus($PARAM[id])</ondown>
					<onup>ClearProperty(ShowInfoPanel,home)</onup>
					<onup>9050</onup>
				</control>
				<control type="image">
					<visible>[!Skin.String(View$PARAM[id]InfoDelay,manual) + Skin.HasSetting(View$PARAM[id]HidePanel)] | [Skin.String(View$PARAM[id]InfoDelay,manual) + !String.IsEmpty(Window(Home).Property(ShowInfoPanel)) + Skin.HasSetting(View$PARAM[id]HidePanel)]</visible>
					<include content="AnimationFadeInfo">
						<param name="condition">View$PARAM[id]InfoDelay</param>
					</include>
					<include>FullScreenDimensions</include>
					<texture colordiffuse="CCFFFFFF">colors/black.png</texture>
				</control>
				<control type="group">
					<visible>!ListItem.IsParentFolder</visible>
					<include content="AnimationSlideBottomWindow">
						<param name="slide">1000</param>
					</include>
					<include content="AnimationSlideBottomVisible">
						<param name="slide">1000</param>
					</include>
					<control type="group">
						<visible>[!Skin.String(View$PARAM[id]InfoDelay,manual)] | [Skin.String(View$PARAM[id]InfoDelay,manual) + !String.IsEmpty(Window(Home).Property(ShowInfoPanel))]</visible>
						<include content="AnimationSlideInfo">
							<param name="condition">View$PARAM[id]InfoDelay</param>
						</include>
						<control type="group">
							<visible>!Skin.HasSetting(View$PARAM[id]HidePanel)</visible>
							<include content="AnimationSlideBottomVisible">
								<param name="slide">1000</param>
							</include>
							<include content="PanelDefault">
								<param name="left">100</param>
								<param name="right">100</param>
								<param name="height">860</param>
								<param name="lefttexture">120</param>
								<param name="righttexture">120</param>
								<param name="heighttexture">820</param>
								<param name="reflect">false</param>
							</include>
							<control type="group">
								<visible>String.IsEmpty(Skin.String(View$PARAM[id]Info)) | [Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<visible>![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
									<include content="AnimationSlideBottomVisible">
										<param name="slide">1000</param>
									</include>
									<top>165</top>
									<right>145</right>
									<width>682</width>
									<height>383</height>
									<control type="image">
										<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
									</control>
									<control type="image">
										<fadetime>TextureFadeTime</fadetime>
										<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
										<texture background="true" diffuse="diffuse/rounded5-682x383.png" fallback="DefaultFile.png">$INFO[ListItem.Art(fanart)]</texture>
									</control>
									<control type="image">
										<bordersize>-10</bordersize>
										<texture border="20">thumbs/overlay.png</texture>
									</control>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="left">145</param>
									<param name="width">896</param>
								</include>
								<control type="image">
									<top>140</top>
									<right>850</right>
									<height>433</height>
									<width>4</width>
									<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/line-vertical.png</texture>
								</control>
								<control type="image">
									<top>571</top>
									<left>120</left>
									<right>120</right>
									<height>4</height>
									<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
								</control>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,2thumbs) + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>155</top>
									<right>135</right>
									<width>343</width>
									<height>202</height>
									<include content="ViewArtwork">
										<param name="art">$VAR[Fanart1Var]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-323x182.png</param>
									</include>
								</control>
								<control type="group">
									<top>357</top>
									<right>135</right>
									<width>343</width>
									<height>202</height>
									<include content="ViewArtwork">
										<param name="art">$VAR[Fanart2Var]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-323x182.png</param>
									</include>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="left">145</param>
									<param name="width">1253</param>
								</include>
								<control type="image">
									<top>140</top>
									<right>493</right>
									<height>433</height>
									<width>4</width>
									<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/line-vertical.png</texture>
								</control>
								<control type="image">
									<top>571</top>
									<left>120</left>
									<right>120</right>
									<height>4</height>
									<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
								</control>
								<control type="scrollbar" id="605531">
									<right>475</right>
									<top>320</top>
									<bottom>532</bottom>
									<onleft>60503</onleft>
								</control>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,4thumbs) + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>155</top>
									<left>135</left>
									<width>343</width>
									<height>202</height>
									<include content="ViewArtwork">
										<param name="art">$VAR[Fanart1Var]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-323x182.png</param>
									</include>
								</control>
								<control type="group">
									<top>357</top>
									<left>135</left>
									<width>343</width>
									<height>202</height>
									<include content="ViewArtwork">
										<param name="art">$VAR[Fanart2Var]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-323x182.png</param>
									</include>
								</control>
								<control type="group">
									<top>155</top>
									<right>135</right>
									<width>343</width>
									<height>202</height>
									<include content="ViewArtwork">
										<param name="art">$VAR[Fanart3Var]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-323x182.png</param>
									</include>
								</control>
								<control type="group">
									<top>357</top>
									<right>135</right>
									<width>343</width>
									<height>202</height>
									<include content="ViewArtwork">
										<param name="art">$VAR[Fanart4Var]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-323x182.png</param>
									</include>
								</control>
								<include>ViewShowCaseListInfo</include>
								<control type="image">
									<top>140</top>
									<left>493</left>
									<height>433</height>
									<width>4</width>
									<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/line-vertical.png</texture>
								</control>
								<control type="image">
									<top>140</top>
									<right>493</right>
									<height>433</height>
									<width>4</width>
									<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/line-vertical.png</texture>
								</control>
								<control type="image">
									<top>571</top>
									<left>120</left>
									<right>120</right>
									<height>4</height>
									<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
								</control>
								<control type="scrollbar" id="605531">
									<right>475</right>
									<top>320</top>
									<bottom>532</bottom>
									<onleft>60503</onleft>
								</control>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,poster) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>155</top>
									<right>135</right>
									<width>275</width>
									<height>403</height>
									<control type="image">
										<bordersize>10</bordersize>
										<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
									</control>
									<control type="image">
										<bordersize>10</bordersize>
										<fadetime>TextureFadeTime</fadetime>
										<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
										<texture background="true" diffuse="diffuse/rounded5-255x383.png">$VAR[PosterVar]</texture>
									</control>
									<control type="image">
										<texture border="20">thumbs/overlay.png</texture>
									</control>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="left">145</param>
									<param name="width">1323</param>
								</include>
								<control type="image">
									<top>140</top>
									<right>423</right>
									<height>433</height>
									<width>4</width>
									<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/line-vertical.png</texture>
								</control>
								<control type="image">
									<top>571</top>
									<left>120</left>
									<right>120</right>
									<height>4</height>
									<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
								</control>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,poster) + ![Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)] + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>155</top>
									<right>135</right>
									<width>403</width>
									<height>403</height>
									<control type="image">
										<bordersize>10</bordersize>
										<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
									</control>
									<control type="image">
										<bordersize>10</bordersize>
										<fadetime>TextureFadeTime</fadetime>
										<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
										<texture background="true" diffuse="diffuse/rounded5-383x383.png">$VAR[PosterVar]</texture>
									</control>
									<control type="image">
										<texture border="20">thumbs/overlay.png</texture>
									</control>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="left">145</param>
									<param name="width">1195</param>
								</include>
								<control type="image">
									<top>140</top>
									<right>551</right>
									<height>433</height>
									<width>4</width>
									<texture colordiffuse="$VAR[PanelListSeparatorColorVar]">panels/line-vertical.png</texture>
								</control>
								<control type="image">
									<top>571</top>
									<left>120</left>
									<right>120</right>
									<height>4</height>
									<texture border="30" colordiffuse="$VAR[PanelListSeparatorColorVar]">buttons/list-select-nofocus.png</texture>
								</control>
							</control>
						</control>
						<control type="group">
							<visible>Skin.HasSetting(View$PARAM[id]HidePanel)</visible>
							<include content="AnimationSlideBottomVisible">
								<param name="slide">1000</param>
							</include>
							<control type="group">
								<visible>String.IsEmpty(Skin.String(View$PARAM[id]Info)) | [Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<visible>![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
									<include content="AnimationSlideBottomVisible">
										<param name="slide">1000</param>
									</include>
									<top>100</top>
									<right>100</right>
									<width>799</width>
									<height>449</height>
									<control type="image">
										<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
									</control>
									<control type="image">
										<fadetime>TextureFadeTime</fadetime>
										<aspectratio align="center" aligny="center" scalediffuse="false">scale</aspectratio>
										<texture background="true" diffuse="diffuse/rounded5-799x449.png" fallback="DefaultFile.png">$INFO[ListItem.Art(fanart)]</texture>
									</control>
									<control type="image">
										<bordersize>-10</bordersize>
										<texture border="20">thumbs/overlay.png</texture>
									</control>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="top">95</param>
									<param name="left">100</param>
									<param name="width">910</param>
								</include>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,2thumbs) + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>90</top>
									<right>90</right>
									<width>403</width>
									<height>235</height>
									<include content="ViewArtwork">
										<param name="art">$INFO[ListItem.Art(fanart1)]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-383x215.png</param>
									</include>
								</control>
								<control type="group">
									<top>324</top>
									<right>90</right>
									<width>403</width>
									<height>235</height>
									<include content="ViewArtwork">
										<param name="art">$INFO[ListItem.Art(fanart2)]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-383x215.png</param>
									</include>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="top">95</param>
									<param name="left">100</param>
									<param name="width">1312</param>
								</include>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,4thumbs) + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>90</top>
									<left>90</left>
									<width>403</width>
									<height>235</height>
									<include content="ViewArtwork">
										<param name="art">$INFO[ListItem.Art(fanart1)]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-383x215.png</param>
									</include>
								</control>
								<control type="group">
									<top>324</top>
									<left>90</left>
									<width>403</width>
									<height>235</height>
									<include content="ViewArtwork">
										<param name="art">$INFO[ListItem.Art(fanart2)]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-383x215.png</param>
									</include>
								</control>
								<control type="group">
									<top>90</top>
									<right>90</right>
									<width>403</width>
									<height>235</height>
									<include content="ViewArtwork">
										<param name="art">$INFO[ListItem.Art(fanart3)]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-383x215.png</param>
									</include>
								</control>
								<control type="group">
									<top>324</top>
									<right>90</right>
									<width>403</width>
									<height>235</height>
									<include content="ViewArtwork">
										<param name="art">$INFO[ListItem.Art(fanart4)]</param>
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-383x215.png</param>
									</include>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="top">95</param>
									<param name="left">508</param>
									<param name="width">904</param>
								</include>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,poster) + [Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)] + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>90</top>
									<right>90</right>
									<width>319</width>
									<height>469</height>
									<include content="ViewArtwork">
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-299x449.png</param>
									</include>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="top">95</param>
									<param name="left">100</param>
									<param name="width">1396</param>
								</include>
							</control>
							<control type="group">
								<visible>Skin.String(View$PARAM[id]Info,poster) + ![Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons)] + ![Player.HasVideo + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)]</visible>
								<control type="group">
									<top>90</top>
									<right>90</right>
									<width>469</width>
									<height>469</height>
									<include content="ViewArtwork">
										<param name="fallback">DefaultFile.png</param>
										<param name="diffuse">diffuse/rounded5-449x449.png</param>
									</include>
								</control>
								<include content="ViewShowCaseListInfo">
									<param name="top">95</param>
									<param name="left">100</param>
									<param name="width">1246</param>
								</include>
							</control>
						</control>
					</control>
				</control>
			</control>
			<!-- Video preview -->
			<control type="group">
				<visible>!Skin.HasSetting(View$PARAM[id]HidePanel) + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)</visible>
				<include content="AnimationSlideBottomWindow">
					<param name="slide">1000</param>
				</include>
				<include content="AnimationSlideBottomVisible">
					<param name="slide">1000</param>
				</include>
				<top>165</top>
				<right>145</right>
				<width>682</width>
				<height>383</height>
				<control type="image">
					<texture>colors/black.png</texture>
				</control>
				<control type="videowindow" />
				<control type="image">
					<bordersize>-10</bordersize>
					<texture border="20">thumbs/overlay2.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(View$PARAM[id]HidePanel) + Skin.HasSetting(View$PARAM[id]VideoPreviewWindow)</visible>
				<include content="AnimationSlideBottomWindow">
					<param name="slide">1000</param>
				</include>
				<include content="AnimationSlideBottomVisible">
					<param name="slide">1000</param>
				</include>
				<top>100</top>
				<right>100</right>
				<width>799</width>
				<height>449</height>
				<control type="image">
					<texture>colors/black.png</texture>
				</control>
				<control type="videowindow" />
				<control type="image">
					<bordersize>-10</bordersize>
					<texture border="20">thumbs/overlay2.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ViewKodiFlixInfoPanel">
		<param name="id"></param>
		<param name="textboxheight">120</param>
		<param name="textboxfont">Font28_Reg</param>
		<definition>
			<control type="image">
				<visible>Skin.HasSetting(View$PARAM[id]Logo) + ![String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(artist.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo))]</visible>
				<include>AnimationVisibleFade</include>
				<top>90</top>
				<left>50</left>
				<height>110</height>
				<fadetime>TextureFadeTime</fadetime>
				<aspectratio align="left">keep</aspectratio>
				<texture background="true">$VAR[ClearLogoVar]</texture>
			</control>
			<control type="label">
				<visible>Skin.HasSetting(View$PARAM[id]Logo) + String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(artist.clearlogo)) + String.IsEmpty(ListItem.Art(clearlogo))</visible>
				<include>AnimationVisibleFade</include>
				<top>90</top>
				<left>50</left>
				<height>110</height>
				<scroll>true</scroll>
				<font>Font38_Bold</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="grouplist">
				<animation effect="slide" end="0,40" condition="Skin.HasSetting(View$PARAM[id]Logo)">conditional</animation>
				<top>130</top>
				<left>50</left>
				<width>910</width>
				<height>500</height>
				<itemgap>10</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<visible>!Skin.HasSetting(View$PARAM[id]Logo)</visible>
					<include>AnimationVisibleFade</include>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font38_Reg</font>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$VAR[CoverFlowViewTitleVar]</label>
				</control>
				<control type="label">
					<visible>Skin.HasSetting(View$PARAM[id]Logo)</visible>
					<height>30</height>
				</control>
				<control type="label">
					<visible>!String.IsEqual(ListItem.DBTYPE,set) + !Skin.HasSetting(View$PARAM[id]Logo)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$VAR[CoverFlowViewSubTitleVar]</label>
				</control>
				<control type="label">
					<visible>!String.IsEqual(ListItem.DBTYPE,set) + Skin.HasSetting(View$PARAM[id]Logo)</visible>
					<height>30</height>
					<scroll>true</scroll>
					<font>Font28_Reg</font>
					<textcolor>$VAR[PanelHighlightColorVar]</textcolor>
					<label>$VAR[KodiFlixViewSubTitleVar]</label>
				</control>
				<control type="grouplist">
					<visible>!String.IsEmpty(Control.GetLabel(5301)) | !String.IsEmpty(Control.GetLabel(5302)) | !String.IsEmpty(Control.GetLabel(5303))</visible>
					<height>37</height>
					<usecontrolcoords>true</usecontrolcoords>
					<orientation>horizontal</orientation>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5301))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon1Var]</texture>
					</control>
					<control type="label" id="5301">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[ListViewInfo1Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5302))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon2Var]</texture>
					</control>
					<control type="label" id="5302">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[ListViewInfo2Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(Control.GetLabel(5303))</visible>
						<top>9</top>
						<width>22</width>
						<height>22</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[ListViewIcon3Var]</texture>
					</control>
					<control type="label" id="5303">
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[ListViewInfo3Var]</label>
					</control>
					<control type="image">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<top>3</top>
						<width>50</width>
						<height>35</height>
						<aspectratio>keep</aspectratio>
						<texture>$VAR[IconPathVar]imdb.png</texture>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Top250)</visible>
						<width>auto</width>
						<font>Font26_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$INFO[ListItem.Top250, #,]</label>
					</control>
				</control>
				<control type="textbox">
					<visible>!Skin.HasSetting(View$PARAM[id]Logo) + !String.IsEqual(ListItem.DBTYPE,set) + !String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>192</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>!Skin.HasSetting(View$PARAM[id]Logo) + String.IsEqual(ListItem.DBTYPE,set) + !String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>232</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>!Skin.HasSetting(View$PARAM[id]Logo) + !String.IsEqual(ListItem.DBTYPE,set) + String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>278</height>
					<font>Font28_Reg_105</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>!Skin.HasSetting(View$PARAM[id]Logo) +  String.IsEqual(ListItem.DBTYPE,set) + String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>318</height>
					<font>Font28_Reg_105</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>Skin.HasSetting(View$PARAM[id]Logo) + !String.IsEqual(ListItem.DBTYPE,set) + !String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>152</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>Skin.HasSetting(View$PARAM[id]Logo) + String.IsEqual(ListItem.DBTYPE,set) + !String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>192</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>Skin.HasSetting(View$PARAM[id]Logo) + !String.IsEqual(ListItem.DBTYPE,set) + String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>238</height>
					<font>Font28_Reg_105</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>Skin.HasSetting(View$PARAM[id]Logo) +  String.IsEqual(ListItem.DBTYPE,set) + String.IsEqual(Container.Viewmode,$LOCALIZE[31265])</visible>
					<top>2</top>
					<height>278</height>
					<font>Font28_Reg_105</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>




				<!-- <control type="textbox">
					<visible>!Skin.HasSetting(View$PARAM[id]Logo) + String.IsEqual(ListItem.DBTYPE,set)</visible>
					<top>2</top>
					<height>232</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]alksdhdlk alsllllhdjlajsd  ajjjjjjjljdl;askpk p plllllll ljjgkjhgg lkgllll h lh lk jjjjjhl h lh lh lkh l h  asejjw aea we a a rea wera wea we ae  aewa aew stddfhf fhfu</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>Skin.HasSetting(View$PARAM[id]Logo) + !String.IsEqual(ListItem.DBTYPE,set)</visible>
					<top>2</top>
					<height>152</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]</label>
					<include>AutoScrollPlot</include>
				</control>
				<control type="textbox">
					<visible>Skin.HasSetting(View$PARAM[id]Logo) + String.IsEqual(ListItem.DBTYPE,set)</visible>
					<top>2</top>
					<height>192</height>
					<font>Font28_Reg</font>
					<label>$VAR[ViewPlotVar]alksdhdlk alsllllhdjlajsd  ajjjjjjjljdl;askpk p plllllll ljjgkjhgg lkgllll h lh lk jjjjjhl h lh lh lkh l h  asejjw aea we a a rea wera wea we ae  aewa aew stddfhf fhfu</label>
					<include>AutoScrollPlot</include>
				</control> -->
			</control>
		</definition>
	</include>
	<include name="ViewCoverFlowBottomInfo">
		<param name="left">540</param>
		<param name="right">540</param>
		<param name="align">center</param>
		<param name="logowidth"></param>
		<param name="logovisible"></param>
		<definition>
			<control type="group">
				<visible>String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,set) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist)</visible>
				<bottom>0</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>116</height>
				<control type="group">
					<visible>!Skin.HasSetting($PARAM[logovisible]) | Container.Content(episodes)</visible>
					<include>AnimationVisibleFade</include>
					<control type="label">
						<animation effect="slide" end="0,19" condition="String.IsEmpty(ListItem.Tagline) + String.IsEmpty(ListItem.Genre) + String.IsEmpty(Listitem.Property(Artist_Disambiguation)) + !Container.Content(albums)">conditional</animation>
						<top>17</top>
						<height>30</height>
						<align>$PARAM[align]</align>
						<font>Font30_Reg</font>
						<textcolor>$VAR[PanelTextColorVar]</textcolor>
						<label>$VAR[CoverFlowViewTitleVar]</label>
					</control>
					<control type="label">
						<top>54</top>
						<height>30</height>
						<align>$PARAM[align]</align>
						<font>Font30_Reg</font>
						<textcolor>$VAR[MainMenuHighlightColorVar]</textcolor>
						<label>$VAR[CoverFlowViewSubTitleVar]</label>
					</control>
				</control>
				<control type="image">
					<visible>Skin.HasSetting($PARAM[logovisible]) + !Container.Content(episodes)</visible>
					<include>AnimationVisibleFade</include>
					<bottom>10</bottom>
					<height>106</height>
					<width>$PARAM[logowidth]</width>
					<fadetime>TextureFadeTime</fadetime>
					<aspectratio align="center">keep</aspectratio>
					<texture background="true">$VAR[ClearLogoVar]</texture>
				</control>
				<control type="label">
					<visible>Skin.HasSetting($PARAM[logovisible]) + String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(ListItem.Art(tvshow.clearlogo)) + String.IsEmpty(ListItem.Art(artist.clearlogo)) + !Container.Content(episodes)</visible>
					<include>AnimationVisibleFade</include>
					<bottom>10</bottom>
					<width>$PARAM[logowidth]</width>
					<height>106</height>
					<align>center</align>
					<font>Font34_Reg</font>
					<wrapmultiline>true</wrapmultiline>
					<textcolor>$VAR[PanelTextColorVar]</textcolor>
					<label>$INFO[ListItem.Label]</label>
				</control>
			</control>
			<control type="label">
				<visible>![String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,set) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,artist) | Container.Content(genres)]</visible>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<bottom>8</bottom>
				<height>116</height>
				<align>$PARAM[align]</align>
				<font>Font34_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<visible>Container.Content(genres) + ![System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour) + System.HasAddon(resource.images.musicgenreicons.text)]</visible>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<bottom>8</bottom>
				<height>116</height>
				<align>$PARAM[align]</align>
				<font>Font34_Reg</font>
				<textcolor>$VAR[PanelTextColorVar]</textcolor>
				<label>$INFO[ListItem.Label]</label>
			</control>
		</definition>
	</include>
	<include name="CascadeItemPortrait">
		<param name="item"></param>
		<param name="reflecttop"></param>
		<param name="logoheight"></param>
		<param name="caseborder"></param>
		<param name="casereflectborder"></param>
		<param name="diffuse"></param>
		<definition>
			<visible>[!Skin.HasSetting(View506FixedList) + !String.IsEmpty(Container.ListItem($PARAM[item]).FolderPath)] | [Skin.HasSetting(View506FixedList) + !String.IsEmpty(Container.ListItemNoWrap($PARAM[item]).FolderPath)]</visible>
			<control type="group">
				<visible>!Skin.HasSetting(View506VideoCase) | Container.Content(genres)</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View506HideReflect)</visible>
					<top>$PARAM[reflecttop]</top>
					<height>$PARAM[reflecttop]</height>
					<control type="image">
						<bordersize>10</bordersize>
						<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<bordersize>10</bordersize>
						<aspectratio aligny="top" scalediffuse="false">keep</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflect.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="$PARAM[diffuse]">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(View506VideoCase) + !Container.Content(genres)</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View506HideReflect)</visible>
					<top>$PARAM[reflecttop]</top>
					<height>$PARAM[reflecttop]</height>
					<control type="image">
						<bordersize>10</bordersize>
						<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<visible>ListItem($PARAM[item]).IsParentFolder</visible>
						<bordersize>10</bordersize>
						<aspectratio>scale</aspectratio>
						<texture flipy="true" diffuse="thumbs/reflect.png">$INFO[ListItem($PARAM[item]).Icon]</texture>
					</control>
					<control type="image">
						<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
						<bordersize>$PARAM[casereflectborder]</bordersize>
						<aspectratio aligny="top" scalediffuse="false">stretch</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
					<control type="image">
						<aspectratio aligny="top" scalediffuse="false">stretch</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflect.png" border="15">$VAR[ShowcaseCase$PARAM[item]Var]</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>10</bordersize>
					<aspectratio>scale</aspectratio>
					<texture>$INFO[ListItem($PARAM[item]).Icon]</texture>
				</control>
				<control type="image">
					<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>$PARAM[caseborder]</bordersize>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<texture background="true" border="15">$VAR[ShowcaseCase$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<visible>String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)</visible>
					<top>10</top>
					<height>$PARAM[logoheight]</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<texture background="true">$VAR[Showcase$PARAM[item]StudioIconsVar]</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="CascadeItemSquare">
		<param name="item"></param>
		<param name="reflecttop"></param>
		<param name="logoheight"></param>
		<param name="caseborder"></param>
		<param name="casereflectborder"></param>
		<param name="diffuse"></param>
		<definition>
			<visible>[!Skin.HasSetting(View507FixedList) + !String.IsEmpty(Container.ListItem($PARAM[item]).FolderPath)] | [Skin.HasSetting(View507FixedList) + !String.IsEmpty(Container.ListItemNoWrap($PARAM[item]).FolderPath)]</visible>
			<control type="group">
				<visible>!Container.Content(albums) | [!Skin.HasSetting(View507AlbumCase) + Container.Content(albums)]</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View507HideReflect)</visible>
					<top>$PARAM[reflecttop]</top>
					<height>$PARAM[reflecttop]</height>
					<control type="image">
						<bordersize>10</bordersize>
						<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<bordersize>10</bordersize>
						<aspectratio aligny="top" scalediffuse="false">scale</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflect.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="$PARAM[diffuse]">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(View507AlbumCase) + Container.Content(albums)</visible>
				<control type="group">
					<top>4</top>
					<control type="group">
						<visible>!Skin.HasSetting(View507HideReflect)</visible>
						<top>$PARAM[reflecttop]</top>
						<height>$PARAM[reflecttop]</height>
						<control type="image">
							<bordersize>10</bordersize>
							<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
						</control>
						<control type="image">
							<visible>ListItem($PARAM[item]).IsParentFolder</visible>
							<bordersize>10</bordersize>
							<aspectratio>scale</aspectratio>
							<texture flipy="true" diffuse="thumbs/reflect.png">$INFO[ListItem($PARAM[item]).Icon]</texture>
						</control>
						<control type="image">
							<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
							<bordersize>10</bordersize>
							<aspectratio aligny="top" scalediffuse="false">stretch</aspectratio>
							<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
						</control>
						<control type="image">
							<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
							<bordersize>-44,-4,-4,-4</bordersize>
							<texture flipy="true" diffuse="thumbs/reflect.png" border="15">thumbs/case/cd.png</texture>
						</control>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>10</bordersize>
					<aspectratio>scale</aspectratio>
					<texture>$INFO[ListItem($PARAM[item]).Icon]</texture>
				</control>
				<control type="image">
					<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>10</bordersize>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>-44,-4,-4,-4</bordersize>
					<texture border="15">thumbs/case/cd.png</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ShowCaseItemPortrait">
		<param name="left"></param>
		<param name="item"></param>
		<definition>
			<visible>[!Skin.HasSetting(View508FixedList) + !String.IsEmpty(Container.ListItem($PARAM[item]).FolderPath)] | [Skin.HasSetting(View508FixedList) + !String.IsEmpty(Container.ListItemNoWrap($PARAM[item]).FolderPath)]</visible>
			<left>$PARAM[left]</left>
			<width>270</width>
			<height>396</height>
			<control type="group">
				<visible>!Skin.HasSetting(View508VideoCase) | Container.Content(genres)</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View508HideReflect)</visible>
					<top>381</top>
					<height>396</height>
					<control type="image">
						<bordersize>10</bordersize>
						<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<bordersize>10</bordersize>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflect.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="diffuse/rounded5-250x376.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<!-- <control type="image">
					<top>10</top>
					<right>10</right>
					<width>70</width>
					<height>70</height>
					<aspectratio>keep</aspectratio>
					<texture>$VAR[ShowcaseOverlay$PARAM[item]Var]</texture>
				</control> -->
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(View508VideoCase) + !Container.Content(genres)</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View508HideReflect)</visible>
					<top>381</top>
					<height>396</height>
					<control type="image">
						<bordersize>10</bordersize>
						<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<visible>ListItem($PARAM[item]).IsParentFolder</visible>
						<bordersize>10</bordersize>
						<aspectratio>scale</aspectratio>
						<texture flipy="true" diffuse="thumbs/reflect.png">$INFO[ListItem($PARAM[item]).Icon]</texture>
					</control>
					<control type="image">
						<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
						<bordersize>17,19,17,37</bordersize>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
					<control type="image">
						<texture background="true" flipy="true" diffuse="thumbs/reflect.png" border="15">$VAR[ShowcaseCase$PARAM[item]Var]</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>10</bordersize>
					<aspectratio>scale</aspectratio>
					<texture>$INFO[ListItem($PARAM[item]).Icon]</texture>
				</control>
				<control type="image">
					<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>17,37,17,19</bordersize>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<texture background="true" border="15">$VAR[ShowcaseCase$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<visible>String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)</visible>
					<top>9</top>
					<height>29</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<texture background="true">$VAR[Showcase$PARAM[item]StudioIconsVar]</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<include name="ShowCaseItemSquare">
		<param name="left"></param>
		<param name="item"></param>
		<param name="casevisible">true</param>
		<param name="casefrontvisible">false</param>
		<definition>
			<visible>[!Skin.HasSetting(View509FixedList) + !String.IsEmpty(Container.ListItem($PARAM[item]).FolderPath)] | [Skin.HasSetting(View509FixedList) + !String.IsEmpty(Container.ListItemNoWrap($PARAM[item]).FolderPath)]</visible>
			<left>$PARAM[left]</left>
			<width>396</width>
			<height>396</height>
			<control type="group">
				<visible>!Container.Content(albums) | [!Skin.HasSetting(View509AlbumCase) + Container.Content(albums)]</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View509HideReflect)</visible>
					<top>381</top>
					<height>396</height>
					<control type="image">
						<bordersize>10</bordersize>
						<texture diffuse="thumbs/reflect.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<bordersize>10</bordersize>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<bordersize>10</bordersize>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="diffuse/rounded5-376x376.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>Skin.HasSetting(View509AlbumCase) + Container.Content(albums)</visible>
				<control type="group">
					<visible>!Skin.HasSetting(View509HideReflect)</visible>
					<top>381</top>
					<height>396</height>
					<control type="image">
						<bordersize>-19,10,10,10</bordersize>
						<texture diffuse="thumbs/reflectsquare.png" flipy="true" colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
					</control>
					<control type="image">
						<visible>ListItem($PARAM[item]).IsParentFolder</visible>
						<bordersize>10</bordersize>
						<aspectratio>scale</aspectratio>
						<texture flipy="true" diffuse="thumbs/reflectsquare.png">$INFO[ListItem($PARAM[item]).Icon]</texture>
					</control>
					<control type="image">
						<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
						<bordersize>14</bordersize>
						<aspectratio scalediffuse="false">stretch</aspectratio>
						<texture background="true" flipy="true" diffuse="thumbs/reflectsquare.png">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
					</control>
					<control type="image">
						<visible>$PARAM[casefrontvisible] + !ListItem($PARAM[item]).IsParentFolder + !String.Contains(ListItem($PARAM[item]).Label,*)</visible>
						<bordersize>-29,0,0,0</bordersize>
						<texture flipy="true" diffuse="thumbs/reflectsquare.png" border="15">thumbs/case/cdfront.png</texture>
					</control>
					<control type="image">
						<visible>$PARAM[casevisible] + !ListItem($PARAM[item]).IsParentFolder + !String.Contains(ListItem($PARAM[item]).Label,*)</visible>
						<bordersize>-29,0,0,0</bordersize>
						<texture flipy="true" diffuse="thumbs/reflectsquare.png" border="15">thumbs/case/cd.png</texture>
					</control>
					<control type="image">
						<visible>ListItem($PARAM[item]).IsParentFolder | String.Contains(ListItem($PARAM[item]).Label,*)</visible>
						<bordersize>-29,0,0,0</bordersize>
						<texture flipy="true" diffuse="thumbs/reflectsquare.png" border="20">thumbs/overlay.png</texture>
					</control>
				</control>
				<control type="image">
					<bordersize>-19,10,10,10</bordersize>
					<texture colordiffuse="ff000000" border="10">buttons/thumb-select-focus.png</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>10</bordersize>
					<aspectratio>scale</aspectratio>
					<texture>$INFO[ListItem($PARAM[item]).Icon]</texture>
				</control>
				<control type="image">
					<visible>!ListItem($PARAM[item]).IsParentFolder</visible>
					<bordersize>14</bordersize>
					<aspectratio scalediffuse="false">stretch</aspectratio>
					<texture background="true">$VAR[ShowcaseItem$PARAM[item]Var]</texture>
				</control>
				<control type="image">
					<visible>$PARAM[casefrontvisible] + !ListItem($PARAM[item]).IsParentFolder + !String.Contains(ListItem($PARAM[item]).Label,*)</visible>
					<bordersize>-29,0,0,0</bordersize>
					<texture background="true" border="15">thumbs/case/cdfront.png</texture>
				</control>
				<control type="image">
					<visible>$PARAM[casevisible] + !ListItem($PARAM[item]).IsParentFolder + !String.Contains(ListItem($PARAM[item]).Label,*)</visible>
					<bordersize>-29,0,0,0</bordersize>
					<texture background="true" border="15">thumbs/case/cd.png</texture>
				</control>
				<control type="image">
					<visible>ListItem($PARAM[item]).IsParentFolder | String.Contains(ListItem($PARAM[item]).Label,*)</visible>
					<bordersize>-29,0,0,0</bordersize>
					<texture border="20">thumbs/overlay.png</texture>
				</control>
			</control>
		</definition>
	</include>
	<variable name="ShowcaseItem-1Var">
		<value condition="!ListItem(-1).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-1).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-1).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-1).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-1).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-1).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Thumb)">$INFO[ListItem(-1).Thumb]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!ListItem(-2).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-2).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-2).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-2).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-2).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-2).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Thumb)">$INFO[ListItem(-2).Thumb]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!ListItem(-3).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-3).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-3).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-3).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-3).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-3).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Thumb)">$INFO[ListItem(-3).Thumb]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!ListItem(-4).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-4).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-4).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-4).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-4).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-4).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Thumb)">$INFO[ListItem(-4).Thumb]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!ListItem(-5).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-5).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-5).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-5).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-5).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-5).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Thumb)">$INFO[ListItem(-5).Thumb]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!ListItem(-6).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-6).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-6).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-6).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-6).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-6).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-6).Thumb)">$INFO[ListItem(-6).Thumb]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-7Var">
		<value condition="!ListItem(-7).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(-7).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(-7).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(-7).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(-7).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(-7).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(-7).Thumb)">$INFO[ListItem(-7).Thumb]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="!ListItem(0).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(0).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(0).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(0).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(0).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(0).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(0).Art(poster))">$INFO[ListItem(0).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(0).Thumb)">$INFO[ListItem(0).Thumb]</value>
		<value>$INFO[ListItem(0).Icon]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!ListItem(1).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(1).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(1).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(1).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(1).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(1).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(1).Thumb)">$INFO[ListItem(1).Thumb]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!ListItem(2).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(2).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(2).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(2).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(2).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(2).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(2).Thumb)">$INFO[ListItem(2).Thumb]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!ListItem(3).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(3).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(3).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(3).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(3).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(3).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(3).Thumb)">$INFO[ListItem(3).Thumb]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!ListItem(4).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(4).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(4).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(4).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(4).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(4).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(4).Thumb)">$INFO[ListItem(4).Thumb]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!ListItem(5).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(5).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(5).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(5).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(5).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(5).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(5).Thumb)">$INFO[ListItem(5).Thumb]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!ListItem(6).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(6).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(6).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(6).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(6).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(6).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(6).Thumb)">$INFO[ListItem(6).Thumb]</value>
		<value>$INFO[ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!ListItem(7).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(7).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(7).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(7).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(7).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(7).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(7).Thumb)">$INFO[ListItem(7).Thumb]</value>
		<value>$INFO[ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!ListItem(8).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(8).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(8).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(8).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(8).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(8).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(8).Thumb)">$INFO[ListItem(8).Thumb]</value>
		<value>$INFO[ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!ListItem(9).IsParentFolder + Container.Content(genres) + ![String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + System.HasAddon(resource.images.musicgenreicons.text)">$INFO[ListItem(9).Label,resource://resource.images.musicgenreicons.text/,.jpg]</value>
		<value condition="!ListItem(9).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + !Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.colour)">$INFO[ListItem(9).Label,resource://resource.images.moviegenreicons.filmstrip-hd.colour/,.jpg]</value>
		<value condition="!ListItem(9).IsParentFolder + Container.Content(genres) + [String.Contains(ListItem.FolderPath,movies) | String.Contains(ListItem.FolderPath,tvshows)] + Skin.HasSetting(BWGenreIcons) + System.HasAddon(resource.images.moviegenreicons.filmstrip-hd.bw)">$INFO[ListItem(9).Label,resource://resource.images.moviegenreicons.filmstrip-hd.bw/,.jpg]</value>
		<value condition="!String.IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem(9).Thumb)">$INFO[ListItem(9).Thumb]</value>
		<value>$INFO[ListItem(9).Icon]</value>
	</variable>
	<variable name="ShowcaseCase-9Var">
		<value condition="String.IsEqual(ListItem(-9).DBTYPE,tvshow) | String.IsEqual(ListItem(-9).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-9).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-9).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-9).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-9).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-8Var">
		<value condition="String.IsEqual(ListItem(-8).DBTYPE,tvshow) | String.IsEqual(ListItem(-8).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-8).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-8).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-8).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-8).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-7Var">
		<value condition="String.IsEqual(ListItem(-7).DBTYPE,tvshow) | String.IsEqual(ListItem(-7).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-7).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-7).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-7).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-7).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-6Var">
		<value condition="String.IsEqual(ListItem(-6).DBTYPE,tvshow) | String.IsEqual(ListItem(-6).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-6).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-6).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-6).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-6).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-5Var">
		<value condition="String.IsEqual(ListItem(-5).DBTYPE,tvshow) | String.IsEqual(ListItem(-5).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-5).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-5).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-5).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-5).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-4Var">
		<value condition="String.IsEqual(ListItem(-4).DBTYPE,tvshow) | String.IsEqual(ListItem(-4).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-4).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-4).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-4).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-4).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-3Var">
		<value condition="String.IsEqual(ListItem(-3).DBTYPE,tvshow) | String.IsEqual(ListItem(-3).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-3).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-3).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-3).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-3).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-2Var">
		<value condition="String.IsEqual(ListItem(-2).DBTYPE,tvshow) | String.IsEqual(ListItem(-2).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-2).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-2).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-2).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-2).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase-1Var">
		<value condition="String.IsEqual(ListItem(-1).DBTYPE,tvshow) | String.IsEqual(ListItem(-1).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(-1).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(-1).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(-1).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(-1).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase0Var">
		<value condition="String.IsEqual(ListItem(0).DBTYPE,tvshow) | String.IsEqual(ListItem(0).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(0).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(0).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(0).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(0).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase1Var">
		<value condition="String.IsEqual(ListItem(1).DBTYPE,tvshow) | String.IsEqual(ListItem(1).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(1).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(1).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(1).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(1).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase2Var">
		<value condition="String.IsEqual(ListItem(2).DBTYPE,tvshow) | String.IsEqual(ListItem(2).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(2).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(2).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(2).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(2).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase3Var">
		<value condition="String.IsEqual(ListItem(3).DBTYPE,tvshow) | String.IsEqual(ListItem(3).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(3).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(3).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(3).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(3).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase4Var">
		<value condition="String.IsEqual(ListItem(4).DBTYPE,tvshow) | String.IsEqual(ListItem(4).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(4).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(4).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(4).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(4).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase5Var">
		<value condition="String.IsEqual(ListItem(5).DBTYPE,tvshow) | String.IsEqual(ListItem(5).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(5).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(5).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(5).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(5).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase6Var">
		<value condition="String.IsEqual(ListItem(6).DBTYPE,tvshow) | String.IsEqual(ListItem(6).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(6).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(6).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(6).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(6).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase7Var">
		<value condition="String.IsEqual(ListItem(7).DBTYPE,tvshow) | String.IsEqual(ListItem(7).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(7).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(7).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(7).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(7).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase8Var">
		<value condition="String.IsEqual(ListItem(8).DBTYPE,tvshow) | String.IsEqual(ListItem(8).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(8).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(8).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(8).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(8).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCase9Var">
		<value condition="String.IsEqual(ListItem(9).DBTYPE,tvshow) | String.IsEqual(ListItem(9).DBTYPE,season)">thumbs/case/portrait/tvshow.png</value>
		<value condition="ListItem(9).IsCollection">thumbs/case/portrait/set.png</value>
		<value condition="ListItem(9).IsStereoscopic">thumbs/case/portrait/3d.png</value>
		<value condition="!String.IsEmpty(ListItem(9).VideoResolution)">thumbs/case/portrait/$INFO[ListItem(9).VideoResolution]p.png</value>
	</variable>

	<variable name="ShowcaseCaseBack-1Var">
		<value condition="ListItem(-1).IsStereoscopic">thumbs/case/portrait/back/1080p.png</value>
		<value condition="!String.IsEmpty(ListItem(-1).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-1).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack-2Var">
		<value condition="ListItem(-2).IsStereoscopic">thumbs/case/portrait/back/1081p.png</value>
		<value condition="!String.IsEmpty(ListItem(-2).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-2).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack-3Var">
		<value condition="ListItem(-3).IsStereoscopic">thumbs/case/portrait/back/1082p.png</value>
		<value condition="!String.IsEmpty(ListItem(-3).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-3).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack-4Var">
		<value condition="ListItem(-4).IsStereoscopic">thumbs/case/portrait/back/1083p.png</value>
		<value condition="!String.IsEmpty(ListItem(-4).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-4).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack-5Var">
		<value condition="ListItem(-5).IsStereoscopic">thumbs/case/portrait/back/1084p.png</value>
		<value condition="!String.IsEmpty(ListItem(-5).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-5).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack-6Var">
		<value condition="ListItem(-6).IsStereoscopic">thumbs/case/portrait/back/1085p.png</value>
		<value condition="!String.IsEmpty(ListItem(-6).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-6).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack-7Var">
		<value condition="ListItem(-7).IsStereoscopic">thumbs/case/portrait/back/1086p.png</value>
		<value condition="!String.IsEmpty(ListItem(-7).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(-7).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack0Var">
		<value condition="ListItem(0).IsStereoscopic">thumbs/case/portrait/back/1080p.png</value>
		<value condition="!String.IsEmpty(ListItem(0).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(0).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack1Var">
		<value condition="ListItem(1).IsStereoscopic">thumbs/case/portrait/back/1081p.png</value>
		<value condition="!String.IsEmpty(ListItem(1).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(1).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack2Var">
		<value condition="ListItem(2).IsStereoscopic">thumbs/case/portrait/back/1082p.png</value>
		<value condition="!String.IsEmpty(ListItem(2).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(2).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack3Var">
		<value condition="ListItem(3).IsStereoscopic">thumbs/case/portrait/back/1083p.png</value>
		<value condition="!String.IsEmpty(ListItem(3).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(3).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack4Var">
		<value condition="ListItem(4).IsStereoscopic">thumbs/case/portrait/back/1084p.png</value>
		<value condition="!String.IsEmpty(ListItem(4).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(4).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack5Var">
		<value condition="ListItem(5).IsStereoscopic">thumbs/case/portrait/back/1085p.png</value>
		<value condition="!String.IsEmpty(ListItem(5).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(5).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack6Var">
		<value condition="ListItem(6).IsStereoscopic">thumbs/case/portrait/back/1086p.png</value>
		<value condition="!String.IsEmpty(ListItem(6).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(6).VideoResolution]p.png</value>
	</variable>
	<variable name="ShowcaseCaseBack7Var">
		<value condition="ListItem(7).IsStereoscopic">thumbs/case/portrait/back/1087p.png</value>
		<value condition="!String.IsEmpty(ListItem(7).VideoResolution)">thumbs/case/portrait/back/$INFO[ListItem(7).VideoResolution]p.png</value>
	</variable>
	<variable name="Showcase-7StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-7).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-7).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-7).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-7).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase-6StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-6).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-6).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-6).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-6).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase-5StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-5).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-5).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-5).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-5).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase-4StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-4).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-4).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-4).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-4).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase-3StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-3).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-3).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-3).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-3).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase-2StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-2).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-2).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-2).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-2).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase-1StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(-1).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-1).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(-1).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(-1).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase0StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(0).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(0).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(0).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(0).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase1StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(1).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(1).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(1).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(1).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase2StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(2).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(2).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(2).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(2).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase3StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(3).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(3).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(3).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(3).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase4StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(4).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(4).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(4).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(4).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase5StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(5).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(5).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(5).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(5).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase6StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(6).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(6).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(6).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(6).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="Showcase7StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem(7).Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(7).Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem(7).Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem(7).Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>

	





	<variable name="ShowcaseOverlay-7Var">
		<value condition="ListItem(-7).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-7).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-7).Property(WatchedEpisodes),ListItem(-7).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-7).Property(WatchedEpisodes),ListItem(-7).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-7).Overlay)">overlays/poster/$INFO[ListItem(-7).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay-6Var">
		<value condition="ListItem(-6).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-6).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-6).Property(WatchedEpisodes),ListItem(-6).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-6).Property(WatchedEpisodes),ListItem(-6).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-6).Overlay)">overlays/poster/$INFO[ListItem(-6).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay-5Var">
		<value condition="ListItem(-5).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-5).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-5).Property(WatchedEpisodes),ListItem(-5).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-5).Property(WatchedEpisodes),ListItem(-5).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-5).Overlay)">overlays/poster/$INFO[ListItem(-5).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay-4Var">
		<value condition="ListItem(-4).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-4).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-4).Property(WatchedEpisodes),ListItem(-4).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-4).Property(WatchedEpisodes),ListItem(-4).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-4).Overlay)">overlays/poster/$INFO[ListItem(-4).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay-3Var">
		<value condition="ListItem(-3).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-3).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-3).Property(WatchedEpisodes),ListItem(-3).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-3).Property(WatchedEpisodes),ListItem(-3).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-3).Overlay)">overlays/poster/$INFO[ListItem(-3).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay-2Var">
		<value condition="ListItem(-2).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-2).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-2).Property(WatchedEpisodes),ListItem(-2).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-2).Property(WatchedEpisodes),ListItem(-2).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-2).Overlay)">overlays/poster/$INFO[ListItem(-2).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay-1Var">
		<value condition="ListItem(-1).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(-1).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(-1).Property(WatchedEpisodes),ListItem(-1).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(-1).Property(WatchedEpisodes),ListItem(-1).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(-1).Overlay)">overlays/poster/$INFO[ListItem(-1).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay0Var">
		<value condition="ListItem(0).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(0).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(0).Property(WatchedEpisodes),ListItem(0).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(0).Property(WatchedEpisodes),ListItem(0).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(0).Overlay)">overlays/poster/$INFO[ListItem(0).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay1Var">
		<value condition="ListItem(1).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(1).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(1).Property(WatchedEpisodes),ListItem(1).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(1).Property(WatchedEpisodes),ListItem(1).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(1).Overlay)">overlays/poster/$INFO[ListItem(1).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay2Var">
		<value condition="ListItem(2).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(2).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(2).Property(WatchedEpisodes),ListItem(2).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(2).Property(WatchedEpisodes),ListItem(2).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(2).Overlay)">overlays/poster/$INFO[ListItem(2).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay3Var">
		<value condition="ListItem(3).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(3).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(3).Property(WatchedEpisodes),ListItem(3).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(3).Property(WatchedEpisodes),ListItem(3).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(3).Overlay)">overlays/poster/$INFO[ListItem(3).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay4Var">
		<value condition="ListItem(4).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(4).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(4).Property(WatchedEpisodes),ListItem(4).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(4).Property(WatchedEpisodes),ListItem(4).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(4).Overlay)">overlays/poster/$INFO[ListItem(4).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay5Var">
		<value condition="ListItem(5).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(5).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(5).Property(WatchedEpisodes),ListItem(5).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(5).Property(WatchedEpisodes),ListItem(5).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(5).Overlay)">overlays/poster/$INFO[ListItem(5).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay6Var">
		<value condition="ListItem(6).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(6).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(6).Property(WatchedEpisodes),ListItem(6).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(6).Property(WatchedEpisodes),ListItem(6).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(6).Overlay)">overlays/poster/$INFO[ListItem(6).Overlay]</value>
	</variable>
	<variable name="ShowcaseOverlay7Var">
		<value condition="ListItem(7).IsPlaying">overlays/poster/OverlayPlay.png</value>
		<value condition="ListItem(7).IsResumable">overlays/poster/OverlayResume.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + !String.IsEqual(ListItem(7).Property(WatchedEpisodes),ListItem(7).Property(TotalEpisodes))">overlays/poster/OverlayUnWatched.png</value>
		<value condition="Container.Content(seasons) + !ListItem.IsParentFolder + String.IsEqual(ListItem(7).Property(WatchedEpisodes),ListItem(7).Property(TotalEpisodes))">overlays/poster/OverlayWatched.png</value>
		<value condition="!String.IsEmpty(ListItem(7).Overlay)">overlays/poster/$INFO[ListItem(7).Overlay]</value>
	</variable>
</includes>