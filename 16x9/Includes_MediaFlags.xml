<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="MediaFlagsTVShows">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.NextDay)) | !String.IsEmpty(Window(Home).Property(NextAired.LatestDay))</visible>
					<include>MediaFlagLabelFull</include>
					<label>$VAR[TVShowAirDateLabelVar]</label>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
					<width>135.5</width>
					<include>MediaFlagLabel</include>
					<label>$VAR[NextAiredStausLabelVar]</label>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
					<left>-145.5</left>
					<width>135.5</width>
					<include>MediaFlagImage</include>
					<texture>$VAR[MediaFlagsPathVar]nextaired/$INFO[Window(Home).Property(NextAired.StatusID)].png</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.FolderName)</visible>
					<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEqual(Control.GetLabel(811112),none) + ![Control.IsVisible(50) | Control.IsVisible(55)]</visible>
					<bordersize>0,10,0,10</bordersize>
					<texture>$VAR[StudioIconsVar]</texture>
					<include>MediaFlagImage</include>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsTVShowsLeft">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.FolderName)</visible>
					<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEqual(Control.GetLabel(811112),none)</visible>
					<bordersize>0,10,0,10</bordersize>
					<texture>$VAR[StudioIconsVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.NextDay)) | !String.IsEmpty(Window(Home).Property(NextAired.LatestDay))</visible>
					<width>135.5</width>
					<include>MediaFlagLabel</include>
					<label>$VAR[NextAiredStausLabelVar]</label>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
					<left>-145.5</left>
					<width>135.5</width>
					<include>MediaFlagImage</include>
					<texture>$VAR[MediaFlagsPathVar]nextaired/$INFO[Window(Home).Property(NextAired.StatusID)].png</texture>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
					<align>left</align>
					<include>MediaFlagLabelFull</include>
					<label>$VAR[TVShowAirDateLabelVar]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsVideos4">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,set) | Container.Content(artists) | Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>LanguageFlags</include>
				<control type="image">
					<visible>ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]set.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<label>$VAR[FolderPathItemCountVar]</label>
					<include>MediaFlagLabel</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsVideos5">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,set) | Container.Content(artists) | Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoAspect,videoaspect/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>LanguageFlags</include>
				<control type="image">
					<visible>ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]set.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<label>$VAR[FolderPathItemCountVar]</label>
					<include>MediaFlagLabel</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsVideos6">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,set) | Container.Content(artists) | Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoAspect,videoaspect/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>LanguageFlags</include>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.SubtitleLanguage)</visible>
					<texture>$VAR[MediaFlagsPathVar]cc.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>SubtitleFlags</include>
				<control type="image">
					<visible>ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]set.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<label>$VAR[FolderPathItemCountVar]</label>
					<include>MediaFlagLabel</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsVideos7">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,set) | Container.Content(artists) | Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!ListItem.IsCollection + !String.IsEqual(ListItem.DBTYPE,musicvideo)</visible>
					<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoAspect,videoaspect/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>LanguageFlags</include>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.SubtitleLanguage)</visible>
					<texture>$VAR[MediaFlagsPathVar]cc.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>SubtitleFlags</include>
				<control type="image">
					<visible>ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]set.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<label>$VAR[FolderPathItemCountVar]</label>
					<include>MediaFlagLabel</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsVideos8">
		<param name="bottom">25</param>
		<param name="left">125</param>
		<param name="right">125</param>
		<param name="align">right</param>
		<definition>
			<control type="grouplist">
				<visible>String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,musicvideo) | String.IsEqual(ListItem.DBTYPE,set) | Container.Content(artists) | Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>$PARAM[align]</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!String.IsEqual(Control.GetLabel(811112),none)</visible>
					<bordersize>0,10,0,10</bordersize>
					<texture>$VAR[StudioIconsVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!ListItem.IsCollection + !String.IsEqual(ListItem.DBTYPE,musicvideo)</visible>
					<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]set.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoAspect)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoAspect,videoaspect/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>LanguageFlags</include>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.SubtitleLanguage)</visible>
					<texture>$VAR[MediaFlagsPathVar]cc.png</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>SubtitleFlags</include>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<label>$VAR[FolderPathItemCountVar]</label>
					<include>MediaFlagLabel</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection | Container.Content(artists) | Container.Content(albums)</visible>
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsAudio">
		<param name="bottom">25</param>
		<param name="right">125</param>
		<param name="left">125</param>
		<param name="align">right</param>
		<definition>
			<control type="group">
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<control type="grouplist">
					<visible>!ListItem.IsParentFolder + Container.Content(artists)</visible>
					<align>$PARAM[align]</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
						<width>291</width>
						<include>MediaFlagLabel</include>
						<label>$LOCALIZE[21898]</label>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
						<left>-301</left>
						<width>291</width>
						<include>MediaFlagBigLabel</include>
						<label>$INFO[ListItem.Property(Artist_YearsActive)]</label>
					</control>
					<control type="label">
						<include>MediaFlagLabel</include>
						<label>$LOCALIZE[132]</label>
					</control>
					<control type="label">
						<left>-135.5</left>
						<include>MediaFlagBigLabel</include>
						<label>$INFO[Container(811111).NumItems]</label>
					</control>
				</control>
				<control type="grouplist">
					<visible>!ListItem.IsParentFolder + Container.Content(albums)</visible>
					<align>$PARAM[align]</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="image">
						<bordersize>5</bordersize>
						<texture>$INFO[ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</texture>
						<include>MediaFlagImage</include>
					</control>
					<control type="label">
						<include>MediaFlagLabel</include>
						<label>$LOCALIZE[182]</label>
					</control>
					<control type="label">
						<left>-135.5</left>
						<include>MediaFlagBigLabel</include>
						<label>$INFO[Container(811111).NumItems]</label>
					</control>
				</control>
				<control type="grouplist">
					<visible>!ListItem.IsParentFolder + [Container.Content(songs) | String.IsEqual(ListItem.DBTYPE,song)]</visible>
					<align>$PARAM[align]</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="image">
						<bordersize>5</bordersize>
						<texture>$INFO[ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</texture>
						<include>MediaFlagImage</include>
					</control>
					<control type="image">
						<include>MediaFlagImage</include>
						<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.FileExtension].png</texture>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsAudioLeft">
		<param name="bottom">25</param>
		<param name="right">125</param>
		<param name="left">125</param>
		<definition>
			<control type="group">
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<height>80</height>
				<control type="grouplist">
					<visible>!ListItem.IsParentFolder + Container.Content(artists)</visible>
					<align>left</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<include>MediaFlagLabel</include>
						<label>$LOCALIZE[132]</label>
					</control>
					<control type="label">
						<left>-135.5</left>
						<include>MediaFlagBigLabel</include>
						<label>$INFO[Container(811111).NumItems]</label>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
						<width>291</width>
						<include>MediaFlagLabel</include>
						<label>$LOCALIZE[21898]</label>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
						<left>-301</left>
						<width>291</width>
						<include>MediaFlagBigLabel</include>
						<label>$INFO[ListItem.Property(Artist_YearsActive)]</label>
					</control>
				</control>
				<control type="grouplist">
					<visible>!ListItem.IsParentFolder + Container.Content(albums)</visible>
					<align>left</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<include>MediaFlagLabel</include>
						<label>$LOCALIZE[182]</label>
					</control>
					<control type="label">
						<left>-135.5</left>
						<include>MediaFlagBigLabel</include>
						<label>$INFO[Container(811111).NumItems]</label>
					</control>
					<control type="image">
						<bordersize>5</bordersize>
						<texture>$INFO[ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</texture>
						<include>MediaFlagImage</include>
					</control>
				</control>
				<control type="grouplist">
					<visible>!ListItem.IsParentFolder + [Container.Content(songs) | String.IsEqual(ListItem.DBTYPE,song)]</visible>
					<align>left</align>
					<itemgap>10</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="image">
						<include>MediaFlagImage</include>
						<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.FileExtension].png</texture>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsPanelVideos">
		<param name="left">100</param>
		<param name="right">100</param>
		<param name="bottom">28</param>
		<definition>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<height>80</height>
				<align>left</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<bordersize>0,10,0,10</bordersize>
					<texture>$VAR[StudioIconsVar]</texture>
					<include>MediaFlagImage</include>
				</control>
			</control>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + [Container.Content(tvshows) | Container.Content(seasons)]</visible>
				<bottom>$PARAM[bottom]</bottom>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>right</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.NextDay)) | !String.IsEmpty(Window(Home).Property(NextAired.LatestDay))</visible>
					<top>-2</top>
					<width>251</width>
					<align>right</align>
					<include>MediaFlagLabelFull</include>
					<label>$VAR[TVShowAirDateLabelVar]</label>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
					<width>135.5</width>
					<include>MediaFlagLabel</include>
					<label>$VAR[NextAiredStausLabelVar]</label>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
					<left>-145.5</left>
					<width>135.5</width>
					<include>MediaFlagImage</include>
					<texture>$VAR[MediaFlagsPathVar]nextaired/$INFO[Window(Home).Property(NextAired.StatusID)].png</texture>
				</control>
			</control>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + [Container.Content(episodes) | Container.Content(movies) | Container.Content(musicvideos)]</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<height>80</height>
				<align>left</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.VideoResolution)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!ListItem.IsCollection</visible>
					<bordersize>0,10,0,10</bordersize>
					<texture>$VAR[StudioIconsVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]set.png</texture>
					<include>MediaFlagImage</include>
				</control>
			</control>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + [Container.Content(episodes) | Container.Content(movies) | Container.Content(musicvideos)]</visible>
				<bottom>$PARAM[bottom]</bottom>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>right</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<visible>!ListItem.IsCollection</visible>
					<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioCodec)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.AudioChannels)</visible>
					<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
				<include>LanguageFlags</include>
				<control type="label">
					<visible>ListItem.IsCollection</visible>
					<label>$VAR[FolderPathItemCountVar]</label>
					<include>MediaFlagLabel</include>
				</control>
				<control type="label">
					<visible>ListItem.IsCollection</visible>
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsPanelAudio">
		<param name="left">100</param>
		<param name="right">100</param>
		<param name="bottom">28</param>
		<definition>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + Container.Content(artists)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>right</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<include>MediaFlagLabel</include>
					<label>$LOCALIZE[132]</label>
				</control>
				<control type="label">
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + Container.Content(artists)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<height>80</height>
				<align>left</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
					<width>291</width>
					<include>MediaFlagLabel</include>
					<label>$LOCALIZE[21898]</label>
				</control>
				<control type="label">
					<visible>!String.IsEmpty(ListItem.Property(Artist_YearsActive))</visible>
					<left>-301</left>
					<width>291</width>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[ListItem.Property(Artist_YearsActive)]</label>
				</control>
			</control>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<right>$PARAM[right]</right>
				<height>80</height>
				<align>right</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="label">
					<include>MediaFlagLabel</include>
					<label>$LOCALIZE[182]</label>
				</control>
				<control type="label">
					<left>-135.5</left>
					<include>MediaFlagBigLabel</include>
					<label>$INFO[Container(811111).NumItems]</label>
				</control>
			</control>
			<control type="grouplist">
				<visible>!ListItem.IsParentFolder + Container.Content(albums)</visible>
				<bottom>$PARAM[bottom]</bottom>
				<left>$PARAM[left]</left>
				<height>80</height>
				<align>left</align>
				<itemgap>10</itemgap>
				<orientation>horizontal</orientation>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="image">
					<bordersize>5</bordersize>
					<texture>$INFO[ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</texture>
					<include>MediaFlagImage</include>
				</control>
			</control>
		</definition>
	</include>
	<include name="LanguageFlags">
		<param name="visible">true</param>
		<param name="container"></param>
		<definition>
			<control type="grouplist">
				<visible>$PARAM[visible] + Skin.HasSetting(ShowLanguageFlags)</visible>
				<top>12</top>
				<left>-36</left>
				<width>26</width>
				<height>80</height>
				<itemgap>6</itemgap>
				<orientation>vertical</orientation>
				<control type="image">
					<include>LanguageSubtitleFlagImage</include>
					<texture>resource://resource.images.languageflags.rounded/$INFO[$PARAM[container]ListItem.Property(AudioLanguage.1)].png</texture>
					<visible>!String.IsEmpty($PARAM[container]ListItem.Property(AudioLanguage.1))</visible>
				</control>
				<control type="image">
					<include>LanguageSubtitleFlagImage</include>
					<texture>resource://resource.images.languageflags.rounded/$INFO[$PARAM[container]ListItem.Property(AudioLanguage.2)].png</texture>
					<visible>!String.IsEmpty($PARAM[container]ListItem.Property(AudioLanguage.2))</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="SubtitleFlags">
		<param name="visible">true</param>
		<param name="container"></param>
		<definition>
			<control type="grouplist">
				<visible>$PARAM[visible] + Skin.HasSetting(ShowLanguageFlags)</visible>
				<top>12</top>
				<left>-36</left>
				<width>26</width>
				<height>80</height>
				<itemgap>6</itemgap>
				<orientation>vertical</orientation>
				<control type="image">
					<height>25</height>
					<include>LanguageSubtitleFlagImage</include>
					<texture>resource://resource.images.languageflags.rounded/$INFO[$PARAM[container]ListItem.Property(SubtitleLanguage.1)].png</texture>
					<visible>!String.IsEmpty($PARAM[container]ListItem.Property(SubtitleLanguage.1))</visible>
				</control>
				<control type="image">
					<height>25</height>
					<include>LanguageSubtitleFlagImage</include>
					<texture>resource://resource.images.languageflags.rounded/$INFO[$PARAM[container]ListItem.Property(SubtitleLanguage.2)].png</texture>
					<visible>!String.IsEmpty($PARAM[container]ListItem.Property(SubtitleLanguage.2))</visible>
				</control>
			</control>
		</definition>
	</include>
	<include name="MediaFlagsPVR">
		<control type="grouplist">
			<include content="AnimationSlideBottomWindow">
				<param name="slide">220</param>
				<param name="animationopen">$EXP[PVRAnimationOpenCondition]</param>
				<param name="animationclose">$EXP[PVRAnimationCloseCondition]</param>
			</include>
			<bottom>25</bottom>
			<left>125</left>
			<right>125</right>
			<height>80</height>
			<align>right</align>
			<itemgap>10</itemgap>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="label">
				<visible>!String.IsEmpty(PVR.TVNextRecordingTitle) + String.IsEmpty(PVR.TVNowRecordingTitle)</visible>
				<width>532</width>
				<include>MediaFlagLabelFull</include>
				<label>$LOCALIZE[19157]$INFO[PVR.TVNextRecordingDateTime, - ,][B][CR]$INFO[PVR.TVNextRecordingTitle][/B]</label>
			</control>
			<control type="label">
				<visible>!String.IsEmpty(PVR.TVNowRecordingTitle)</visible>
				<width>532</width>
				<include>MediaFlagLabelFull</include>
				<label>$LOCALIZE[19162]$INFO[PVR.TVNowRecordingDateTime, - ,][B][CR]$INFO[PVR.TVNowRecordingTitle, ][/B]</label>
			</control>
		</control>
	</include>
	<include name="MediaFlagsVideoFullscreen">
		<control type="grouplist">
			<top>10</top>
			<left>0</left>
			<right>0</right>
			<height>80</height>
			<align>center</align>
			<itemgap>30</itemgap>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="image">
				<visible>!String.IsEqual(Control.GetLabel(811115),none)</visible>
				<bordersize>0,10,0,10</bordersize>
				<texture>$VAR[VideoPlayerStudioIconsVar]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!VideoPlayer.HasEpg</visible>
				<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[VideoPlayerRatingFlagVar]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(VideoPlayer.VideoAspect)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[VideoPlayer.VideoAspect,videoaspect/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(VideoPlayer.VideoCodec)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[VideoPlayer.VideoCodec,videocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(VideoPlayer.VideoResolution)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[VideoPlayer.VideoResolution,videoresolution/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(VideoPlayer.AudioCodec)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[VideoPlayer.AudioCodec,audiocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(VideoPlayer.AudioChannels)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[VideoPlayer.AudioChannels,audiochannels/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(ShowLanguageFlags) + !String.IsEmpty(VideoPlayer.AudioChannels)</visible>
				<top>12</top>
				<left>-56</left>
				<height>25</height>
				<include>LanguageSubtitleFlagImage</include>
				<texture>resource://resource.images.languageflags.rounded/$INFO[VideoPlayer.AudioLanguage].png</texture>
			</control>
			<control type="image">
				<visible>!String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				<texture>$VAR[MediaFlagsPathVar]cc.png</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Skin.HasSetting(ShowLanguageFlags) + !String.IsEmpty(VideoPlayer.SubtitlesLanguage)</visible>
				<top>12</top>
				<left>-56</left>
				<height>25</height>
				<include>LanguageSubtitleFlagImage</include>
				<texture>resource://resource.images.languageflags.rounded/$INFO[VideoPlayer.SubtitlesLanguage].png</texture>
			</control>
		</control>
	</include>
	<include name="MediaFlagsVideoInfo">
		<control type="grouplist">
			<bottom>25</bottom>
			<height>80</height>
			<align>left</align>
			<itemgap>10</itemgap>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="image">
				<visible>!String.IsEqual(Control.GetLabel(811115),none)</visible>
				<bordersize>0,5,0,5</bordersize>
				<texture>$VAR[ContainerStudioIconsVar]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!ControlGroup(9001).HasFocus | Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[RatingFlagVar]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]mpaa/$VAR[ContainerRatingFlagVar]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="label">
				<visible>[String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)] + [!Control.HasFocus(1020) + !Control.HasFocus(1090) + !Control.HasFocus(1040)] + [!String.IsEmpty(Window(Home).Property(NextAired.NextDay)) | !String.IsEmpty(Window(Home).Property(NextAired.LatestDay))]</visible>
				<width>135.5</width>
				<include>MediaFlagLabel</include>
				<label>$VAR[NextAiredStausLabelVar]</label>
			</control>
			<control type="image">
				<visible>[String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)] + [!Control.HasFocus(1020) + !Control.HasFocus(1090) + !Control.HasFocus(1040)] + !String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
				<left>-145.5</left>
				<width>135.5</width>
				<include>MediaFlagImage</include>
				<texture>$VAR[MediaFlagsPathVar]nextaired/$INFO[Window(Home).Property(NextAired.StatusID)].png</texture>
			</control>
			<control type="label">
				<visible>[String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)] + [!Control.HasFocus(1020) + !Control.HasFocus(1090) + !Control.HasFocus(1040)] + !String.IsEmpty(Window(Home).Property(NextAired.StatusID))</visible>
				<align>left</align>
				<include>MediaFlagLabelFull</include>
				<label>$VAR[TVShowAirDateLabelVar]</label>
			</control>
			<control type="image">
				<visible>!ControlGroup(9001).HasFocus | Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoAspect,videoaspect/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.VideoAspect,videoaspect/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!ControlGroup(9001).HasFocus | Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.VideoCodec,videocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!ControlGroup(9001).HasFocus | Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.VideoResolution,videoresolution/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!ControlGroup(9001).HasFocus | Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.AudioCodec,audiocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>!ControlGroup(9001).HasFocus | Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.AudioChannels,audiochannels/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<include content="LanguageFlags">
				<param name="visible">[!ControlGroup(9001).HasFocus | Control.HasFocus(1010)]</param>
				<param name="container"></param>
			</include>
			<include content="LanguageFlags">
				<param name="visible">ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</param>
				<param name="container">Container.</param>
			</include>
			<control type="image">
				<visible>[[!ControlGroup(9001).HasFocus | Control.HasFocus(1010)] + !String.IsEmpty(ListItem.SubtitleLanguage)] | !String.IsEmpty(Container.ListItem.SubtitleLanguage)</visible>
				<texture>$VAR[MediaFlagsPathVar]cc.png</texture>
				<include>MediaFlagImage</include>
			</control>
			<include content="SubtitleFlags">
				<param name="visible">[!ControlGroup(9001).HasFocus | Control.HasFocus(1010)]</param>
				<param name="container"></param>
			</include>
			<include content="SubtitleFlags">
				<param name="visible">ControlGroup(9001).HasFocus + !Control.HasFocus(1010)</param>
				<param name="container">Container.</param>
			</include>
		</control>
	</include>
	<include name="MediaFlagsMusicInfo">
		<control type="grouplist">
			<bottom>25</bottom>
			<left>0</left>
			<right>0</right>
			<height>80</height>
			<itemgap>10</itemgap>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<control type="image">
				<visible>!String.IsEqual(Control.GetLabel(811115),none) + !Control.HasFocus(1090) + [Control.HasFocus(1010) | Control.HasFocus(1020) | Control.HasFocus(1060) | String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.DBTYPE,song)]</visible>
				<bordersize>5</bordersize>
				<texture>$INFO[Control.GetLabel(811115)]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(ListItem.Property(Artist_YearsActive)) + [Control.HasFocus(9002) | !ControlGroup(9001).HasFocus]</visible>
				<width>291</width>
				<include>MediaFlagLabel</include>
				<label>$LOCALIZE[21898]</label>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(ListItem.Property(Artist_YearsActive)) + [Control.HasFocus(9002) | !ControlGroup(9001).HasFocus]</visible>
				<left>-301</left>
				<width>291</width>
				<include>MediaFlagBigLabel</include>
				<label>$INFO[ListItem.Property(Artist_YearsActive)]</label>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.DBTYPE,artist) + [Control.HasFocus(9002) | !ControlGroup(9001).HasFocus]</visible>
				<include>MediaFlagLabel</include>
				<label>$LOCALIZE[132]</label>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.DBTYPE,artist) + [Control.HasFocus(9002) | !ControlGroup(9001).HasFocus]</visible>
				<left>-135.5</left>
				<include>MediaFlagBigLabel</include>
				<label>$INFO[Container(1010).NumItems]</label>
			</control>
			<control type="label">
				<visible>[String.IsEqual(ListItem.DBTYPE,album) | Control.HasFocus(1010) | Control.HasFocus(1020) | Control.HasFocus(1060)] + !Control.HasFocus(1090)</visible>
				<include>MediaFlagLabel</include>
				<label>$LOCALIZE[182]</label>
			</control>
			<control type="label">
				<visible>Control.HasFocus(1010) | Control.HasFocus(1020) | Control.HasFocus(1060)</visible>
				<left>-135.5</left>
				<include>MediaFlagBigLabel</include>
				<label>$INFO[Container(1020).NumItems]</label>
			</control>
			<control type="label">
				<visible>String.IsEqual(ListItem.DBTYPE,album) + !Control.HasFocus(1090)</visible>
				<left>-135.5</left>
				<include>MediaFlagBigLabel</include>
				<label>$INFO[Container(50).NumItems]</label>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.DBTYPE,musicvideo) + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoAspect,videoaspect/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Control.HasFocus(1090)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.VideoAspect,videoaspect/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.DBTYPE,musicvideo) + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoCodec,videocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Control.HasFocus(1090)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.VideoCodec,videocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.DBTYPE,musicvideo) + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.VideoResolution,videoresolution/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Control.HasFocus(1090)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.VideoResolution,videoresolution/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.DBTYPE,musicvideo) + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioCodec,audiocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Control.HasFocus(1090)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.AudioCodec,audiocodec/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.DBTYPE,musicvideo) + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[ListItem.AudioChannels,audiochannels/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>Control.HasFocus(1090)</visible>
				<texture>$VAR[MediaFlagsPathVar]$INFO[Container.ListItem.AudioChannels,audiochannels/,.png]</texture>
				<include>MediaFlagImage</include>
			</control>
			<include content="LanguageFlags">
				<param name="visible">String.IsEqual(ListItem.DBTYPE,musicvideo) + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</param>
				<param name="container"></param>
			</include>
			<include content="LanguageFlags">
				<param name="visible">Control.HasFocus(1090)</param>
				<param name="container">Container.</param>
			</include>
			<control type="image">
				<visible>Control.HasFocus(1020) | [String.IsEqual(ListItem.DBTYPE,album) + Control.HasFocus(50)]</visible>
				<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[Container.ListItem.FileExtension].png</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="image">
				<visible>String.IsEqual(ListItem.DBTYPE,song)</visible>
				<texture>$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.FileExtension].png</texture>
				<include>MediaFlagImage</include>
			</control>
			<control type="label">
				<visible>[!String.IsEqual(ListItem.DBTYPE,musicvideo) + Integer.IsGreater(Container(1090).NumItems,0)] + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<width>150</width>
				<include>MediaFlagLabel</include>
				<label>$LOCALIZE[20389]</label>
			</control>
			<control type="label">
				<visible>[!String.IsEqual(ListItem.DBTYPE,musicvideo) + Integer.IsGreater(Container(1090).NumItems,0)] + [!ControlGroup(9001).HasFocus | Control.HasFocus(9002)]</visible>
				<left>-150</left>
				<include>MediaFlagBigLabel</include>
				<label>$INFO[Container(1090).NumItems]</label>
			</control>
		</control>
	</include>
	<include name="MediaFlagImage">
		<width>125.5</width>
		<height>80</height>
		<fadetime>TextureFadeTime</fadetime>
		<include condition="!Skin.HasSetting(MediaFlagsColored)">MediaFlagWhite</include>
		<include condition="Skin.HasSetting(MediaFlagsColored)">MediaFlagColored</include>
		<aspectratio align="center" aligny="center">keep</aspectratio>
	</include>
	<include name="MediaFlagSmallImage">
		<top>6</top>
		<width>125</width>
		<height>30</height>
		<fadetime>TextureFadeTime</fadetime>
		<include condition="!Skin.HasSetting(MediaFlagsColored)">MediaFlagWhite</include>
		<include condition="Skin.HasSetting(MediaFlagsColored)">MediaFlagColored</include>
		<aspectratio align="center" aligny="center">keep</aspectratio>
	</include>
	<include name="LanguageSubtitleFlagImage">
		<width>30</width>
		<height>25</height>
		<fadetime>TextureFadeTime</fadetime>
		<aspectratio align="center" aligny="center">keep</aspectratio>
	</include>
	<include name="MediaFlagLabel">
		<width>125.5</width>
		<height>38</height>
		<align>center</align>
		<textcolor>55ffffff</textcolor>
		<font>Font22_Reg</font>
	</include>
	<include name="MediaFlagLabelFull">
		<top>-1</top>
		<width>251</width>
		<height>80</height>
		<align>right</align>
		<textcolor>55ffffff</textcolor>
		<font>Font22_Reg_133</font>
	</include>
	<include name="MediaFlagBigLabel">
		<top>31</top>
		<width>125.5</width>
		<height>45</height>
		<align>center</align>
		<textcolor>55ffffff</textcolor>
		<font>Font36_Bold_Caps</font>
	</include>
	<include name="MediaFlagBigLabelCenter">
		<width>125.5</width>
		<height>90</height>
		<align>center</align>
		<textcolor>55ffffff</textcolor>
		<font>Font49_Bold_Caps</font>
	</include>
	<include name="MediaFlagWhite">
		<colordiffuse>55ffffff</colordiffuse>
	</include>
	<include name="MediaFlagColored">
		<colordiffuse>bbffffff</colordiffuse>
	</include>
	<!-- Variables -->
	<variable name="TVShowAirDateLabelVar">
		<value condition="!String.IsEmpty(Window(Home).Property(NextAired.NextDay))">$INFO[Window(Home).Property(NextAired.NextNumber),, ]$LOCALIZE[31063][B][CR]$INFO[Window(Home).Property(NextAired.NextDay),, ]$INFO[Window(Home).Property(NextAired.ShortTime)][/B]</value>
		<value condition="String.IsEmpty(Window(Home).Property(NextAired.NextDay)) + !String.IsEmpty(Window(Home).Property(NextAired.LatestDay))">$INFO[Window(Home).Property(NextAired.LatestNumber),, ]$LOCALIZE[31064][B][CR]$INFO[Window(Home).Property(NextAired.LatestDay)][/B]</value>
	</variable>
	<variable name="NextAiredStausLabelVar">
		<value condition="String.IsEqual(Window(Home).Property(NextAired.Today),True)">$LOCALIZE[33006]</value>
		<value condition="String.Contains(Window(Home).Property(NextAired.StatusID),0)">$LOCALIZE[31011]</value>
		<value condition="String.Contains(Window(Home).Property(NextAired.StatusID),1)">$LOCALIZE[31012]</value>
		<value condition="String.Contains(Window(Home).Property(NextAired.StatusID),2)">$LOCALIZE[31013]</value>
		<value condition="String.Contains(Window(Home).Property(NextAired.StatusID),4)">$LOCALIZE[31014]</value>
		<value condition="String.Contains(Window(Home).Property(NextAired.StatusID),6)">$LOCALIZE[31015]</value>
		<value condition="String.Contains(Window(Home).Property(NextAired.StatusID),-1)">$LOCALIZE[1446]</value>
	</variable>
	<variable name="StudioIconsVar">
		<value condition="!String.IsEmpty(ListItem.Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem.Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem.Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="ContainerStudioIconsVar">
		<value condition="!String.IsEmpty(Container.ListItem.Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[Container.ListItem.Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(Container.ListItem.Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[Container.ListItem.Studio,resource://resource.images.studios.coloured/,.png]</value>
		<value condition="ControlGroup(9001).HasFocus + !Control.HasFocus(1010)"></value>
		<value condition="!String.IsEmpty(ListItem.Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(ListItem.Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[ListItem.Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="RatingFlagVar">
		<value condition="String.Contains(ListItem.MPAA,NR)">NR.png</value>
		<value condition="String.Contains(ListItem.MPAA,US:G) | String.Contains(ListItem.MPAA,USA:G) | String.Contains(ListItem.MPAA,Rated G) | String.Contains(ListItem.MPAA,Rated Approved) | String.Contains(ListItem.MPAA,Rated Passed)">G.png</value>
		<value condition="String.Contains(ListItem.MPAA,PG-13)">PG-13.png</value>
		<value condition="String.Contains(ListItem.MPAA,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">PG.png</value>
		<value condition="String.Contains(ListItem.MPAA,US:R) | String.Contains(ListItem.MPAA,USA:R) | String.Contains(ListItem.MPAA,Rated R) | String.IsEqual(ListItem.MPAA,R)">R.png</value>
		<value condition="String.Contains(ListItem.MPAA,US:NC-17) | String.Contains(ListItem.MPAA,USA:NC-17) | String.Contains(ListItem.MPAA,Rated NC-17)">NC-17.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:U)">BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:PG)">BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:12A)">BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:12)">BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:15)">BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:18)">BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:16) | String.Contains(ListItem.MPAA,ab 16) | String.IsEqual(ListItem.MPAA,16) | String.Contains(ListItem.MPAA,FSK 16) | String.Contains(ListItem.MPAA,Rated 16)">FSK-16.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:0) | String.Contains(ListItem.MPAA,ab 0) | String.IsEqual(ListItem.MPAA,0) | String.Contains(ListItem.MPAA,FSK 0) | String.Contains(ListItem.MPAA,Rated 0)">FSK-0.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:6) | String.Contains(ListItem.MPAA,ab 6) | String.IsEqual(ListItem.MPAA,6) | String.Contains(ListItem.MPAA,FSK 6) | String.Contains(ListItem.MPAA,Rated 6)">FSK-6.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:12) | String.Contains(ListItem.MPAA,ab 12) | String.IsEqual(ListItem.MPAA,12) | String.Contains(ListItem.MPAA,FSK 12) | String.Contains(ListItem.MPAA,Rated 12)">FSK-12.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:18) | String.Contains(ListItem.MPAA,ab 18) | String.IsEqual(ListItem.MPAA,18) | String.Contains(ListItem.MPAA,FSK 18) | String.Contains(ListItem.MPAA,Rated 18)">FSK-18.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany) |String.Contains(ListItem.MPAA,FSK) | String.Contains(ListItem.MPAA,o.A) | String.Contains(ListItem.MPAA,Rated 0)">FSK-0.png</value>
		<value condition="String.Contains(ListItem.MPAA,besorolás alatt)">HU_BA.png</value>
		<value condition="String.Contains(ListItem.MPAA,korhatárra való tekintett nélkül megtekintetheto)">HU_KN.png</value>
		<value condition="String.Contains(ListItem.MPAA,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">HU_12.png</value>
		<value condition="String.Contains(ListItem.MPAA,16 éven aluliak számára nem ajánlott)">HU_16.png</value>
		<value condition="String.Contains(ListItem.MPAA,18 éven aluliak számára nem ajánlott)">HU_18.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:U) | String.Contains(ListItem.MPAA,Tout public) | String.Contains(ListItem.MPAA,partir de 3 ans) | String.Contains(ListItem.MPAA,partir de 6 ans)">csaU.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-10) | String.Contains(ListItem.MPAA,Interdit aux moins de 10 ans) | String.Contains(ListItem.MPAA,des propos ou des images peuvent heurter)">csa10.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-12) | String.Contains(ListItem.MPAA,Interdit aux moins de 12 ans)">csa12.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-16) | String.Contains(ListItem.MPAA,Interdit aux moins de 16 ans)">csa16.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-18) | String.Contains(ListItem.MPAA,Interdit aux moins de 18 ans)">csa18.png</value>
		<value condition="String.Contains(ListItem.MPAA,전체)">KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.MPAA,12세)">KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.MPAA,15세)">KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.MPAA,불가)">KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.MPAA,제한)">KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:Livre) | String.Contains(ListItem.MPAA,Livre)">MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:10) | String.Contains(ListItem.MPAA,10 anos)">MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:12) | String.Contains(ListItem.MPAA,12 anos)">MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:14) | String.Contains(ListItem.MPAA,14 anos)">MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:16) | String.Contains(ListItem.MPAA,16 anos)">MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:18) | String.Contains(ListItem.MPAA,18 anos)">MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.MPAA,Australia:)">$INFO[ListItem.MPAA,australia_,.png]</value>
		<value condition="String.Contains(ListItem.MPAA,NL-AL)">NL-AL.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-6)">NL-6.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-9)">NL-9.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-12)">NL-12.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-16)">NL-16.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-18)">NL-18.png</value>
		<value condition="!String.IsEmpty(ListItem.MPAA)">$INFO[ListItem.MPAA,,.png]</value>
		<value>NR.png</value>
	</variable>
	<variable name="ContainerRatingFlagVar">
		<value condition="String.Contains(Container.ListItem.MPAA,NR)">NR.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,US:G) | String.Contains(Container.ListItem.MPAA,USA:G) | String.Contains(Container.ListItem.MPAA,Rated G) | String.Contains(Container.ListItem.MPAA,Rated Approved) | String.Contains(Container.ListItem.MPAA,Rated Passed)">G.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,PG-13)">PG-13.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Rated PG) | String.IsEqual(Container.ListItem.Mpaa,PG)">PG.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,US:R) | String.Contains(Container.ListItem.MPAA,USA:R) | String.Contains(Container.ListItem.MPAA,Rated R) | String.IsEqual(Container.ListItem.MPAA,R)">R.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,US:NC-17) | String.Contains(Container.ListItem.MPAA,USA:NC-17) | String.Contains(Container.ListItem.MPAA,Rated NC-17)">NC-17.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,UK:U)">BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,UK:PG)">BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,UK:12A)">BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,UK:12)">BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,UK:15)">BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,UK:18)">BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Germany:16) | String.Contains(Container.ListItem.MPAA,ab 16) | String.IsEqual(Container.ListItem.MPAA,16) | String.Contains(Container.ListItem.MPAA,FSK 16) | String.Contains(Container.ListItem.MPAA,Rated 16)">FSK-16.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Germany:0) | String.Contains(Container.ListItem.MPAA,ab 0) | String.IsEqual(Container.ListItem.MPAA,0) | String.Contains(Container.ListItem.MPAA,FSK 0) | String.Contains(Container.ListItem.MPAA,Rated 0)">FSK-0.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Germany:6) | String.Contains(Container.ListItem.MPAA,ab 6) | String.IsEqual(Container.ListItem.MPAA,6) | String.Contains(Container.ListItem.MPAA,FSK 6) | String.Contains(Container.ListItem.MPAA,Rated 6)">FSK-6.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Germany:12) | String.Contains(Container.ListItem.MPAA,ab 12) | String.IsEqual(Container.ListItem.MPAA,12) | String.Contains(Container.ListItem.MPAA,FSK 12) | String.Contains(Container.ListItem.MPAA,Rated 12)">FSK-12.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Germany:18) | String.Contains(Container.ListItem.MPAA,ab 18) | String.IsEqual(Container.ListItem.MPAA,18) | String.Contains(Container.ListItem.MPAA,FSK 18) | String.Contains(Container.ListItem.MPAA,Rated 18)">FSK-18.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Germany) |String.Contains(Container.ListItem.MPAA,FSK) | String.Contains(Container.ListItem.MPAA,o.A) | String.Contains(Container.ListItem.MPAA,Rated 0)">FSK-0.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,besorolás alatt)">HU_BA.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,korhatárra való tekintett nélkül megtekintetheto)">HU_KN.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">HU_12.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,16 éven aluliak számára nem ajánlott)">HU_16.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,18 éven aluliak számára nem ajánlott)">HU_18.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,France:U) | String.Contains(Container.ListItem.MPAA,Tout public) | String.Contains(Container.ListItem.MPAA,partir de 3 ans) | String.Contains(Container.ListItem.MPAA,partir de 6 ans)">csaU.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,France:-10) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 10 ans) | String.Contains(Container.ListItem.MPAA,des propos ou des images peuvent heurter)">csa10.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,France:-12) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 12 ans)">csa12.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,France:-16) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 16 ans)">csa16.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,France:-18) | String.Contains(Container.ListItem.MPAA,Interdit aux moins de 18 ans)">csa18.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,전체)">KR_Certificate_All.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,12세)">KR_Certificate_12.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,15세)">KR_Certificate_15.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,불가)">KR_Certificate_18.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,제한)">KR_Certificate_R.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Brazil:Livre) | String.Contains(Container.ListItem.MPAA,Livre)">MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Brazil:10) | String.Contains(Container.ListItem.MPAA,10 anos)">MPAA_Brazil_10.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Brazil:12) | String.Contains(Container.ListItem.MPAA,12 anos)">MPAA_Brazil_12.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Brazil:14) | String.Contains(Container.ListItem.MPAA,14 anos)">MPAA_Brazil_14.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Brazil:16) | String.Contains(Container.ListItem.MPAA,16 anos)">MPAA_Brazil_16.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Brazil:18) | String.Contains(Container.ListItem.MPAA,18 anos)">MPAA_Brazil_18.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,Australia:)">$INFO[Container.ListItem.MPAA,australia_,.png]</value>
		<value condition="String.Contains(Container.ListItem.MPAA,NL-AL)">NL-AL.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,NL-6)">NL-6.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,NL-9)">NL-9.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,NL-12)">NL-12.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,NL-16)">NL-16.png</value>
		<value condition="String.Contains(Container.ListItem.MPAA,NL-18)">NL-18.png</value>
		<value condition="!String.IsEmpty(Container.ListItem.MPAA)">$INFO[Container.ListItem.MPAA,,.png]</value>
		<value>NR.png</value>
	</variable>
	<variable name="FolderPathItemCountVar">
		<value condition="ListItem.IsCollection">$LOCALIZE[342]</value>
		<value condition="Container.Content(artists)">$LOCALIZE[132]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[134]</value>
	</variable>
	<variable name="MediaFlagsPathVar">
		<value condition="Skin.HasSetting(MediaFlagsColored)">flags/colored/</value>
		<value>flags/default/</value>
	</variable>
	<variable name="VideoPlayerStudioIconsVar">
		<value condition="!String.IsEmpty(VideoPlayer.Studio) + !Skin.HasSetting(MediaFlagsColored)">$INFO[VideoPlayer.Studio,resource://resource.images.studios.white/,.png]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Studio) + Skin.HasSetting(MediaFlagsColored)">$INFO[VideoPlayer.Studio,resource://resource.images.studios.coloured/,.png]</value>
	</variable>
	<variable name="VideoPlayerRatingFlagVar">
		<value condition="String.Contains(ListItem.MPAA,NR)">NR.png</value>
		<value condition="String.Contains(ListItem.MPAA,US:G) | String.Contains(ListItem.MPAA,USA:G) | String.Contains(ListItem.MPAA,Rated G) | String.Contains(ListItem.MPAA,Rated Approved) | String.Contains(ListItem.MPAA,Rated Passed)">G.png</value>
		<value condition="String.Contains(ListItem.MPAA,PG-13)">PG-13.png</value>
		<value condition="String.Contains(ListItem.MPAA,Rated PG) | String.IsEqual(ListItem.Mpaa,PG)">PG.png</value>
		<value condition="String.Contains(ListItem.MPAA,US:R) | String.Contains(ListItem.MPAA,USA:R) | String.Contains(ListItem.MPAA,Rated R) | String.IsEqual(ListItem.MPAA,R)">R.png</value>
		<value condition="String.Contains(ListItem.MPAA,US:NC-17) | String.Contains(ListItem.MPAA,USA:NC-17) | String.Contains(ListItem.MPAA,Rated NC-17)">NC-17.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:U)">BBFC_U_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:PG)">BBFC_PG_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:12A)">BBFC_12A_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:12)">BBFC_12_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:15)">BBFC_15_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,UK:18)">BBFC_18_Certificate_UK.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:16) | String.Contains(ListItem.MPAA,ab 16) | String.IsEqual(ListItem.MPAA,16) | String.Contains(ListItem.MPAA,FSK 16) | String.Contains(ListItem.MPAA,Rated 16)">FSK-16.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:0) | String.Contains(ListItem.MPAA,ab 0) | String.IsEqual(ListItem.MPAA,0) | String.Contains(ListItem.MPAA,FSK 0) | String.Contains(ListItem.MPAA,Rated 0)">FSK-0.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:6) | String.Contains(ListItem.MPAA,ab 6) | String.IsEqual(ListItem.MPAA,6) | String.Contains(ListItem.MPAA,FSK 6) | String.Contains(ListItem.MPAA,Rated 6)">FSK-6.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:12) | String.Contains(ListItem.MPAA,ab 12) | String.IsEqual(ListItem.MPAA,12) | String.Contains(ListItem.MPAA,FSK 12) | String.Contains(ListItem.MPAA,Rated 12)">FSK-12.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany:18) | String.Contains(ListItem.MPAA,ab 18) | String.IsEqual(ListItem.MPAA,18) | String.Contains(ListItem.MPAA,FSK 18) | String.Contains(ListItem.MPAA,Rated 18)">FSK-18.png</value>
		<value condition="String.Contains(ListItem.MPAA,Germany) |String.Contains(ListItem.MPAA,FSK) | String.Contains(ListItem.MPAA,o.A) | String.Contains(ListItem.MPAA,Rated 0)">FSK-0.png</value>
		<value condition="String.Contains(ListItem.MPAA,besorolás alatt)">HU_BA.png</value>
		<value condition="String.Contains(ListItem.MPAA,korhatárra való tekintett nélkül megtekintetheto)">HU_KN.png</value>
		<value condition="String.Contains(ListItem.MPAA,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">HU_12.png</value>
		<value condition="String.Contains(ListItem.MPAA,16 éven aluliak számára nem ajánlott)">HU_16.png</value>
		<value condition="String.Contains(ListItem.MPAA,18 éven aluliak számára nem ajánlott)">HU_18.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:U) | String.Contains(ListItem.MPAA,Tout public) | String.Contains(ListItem.MPAA,partir de 3 ans) | String.Contains(ListItem.MPAA,partir de 6 ans)">csaU.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-10) | String.Contains(ListItem.MPAA,Interdit aux moins de 10 ans) | String.Contains(ListItem.MPAA,des propos ou des images peuvent heurter)">csa10.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-12) | String.Contains(ListItem.MPAA,Interdit aux moins de 12 ans)">csa12.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-16) | String.Contains(ListItem.MPAA,Interdit aux moins de 16 ans)">csa16.png</value>
		<value condition="String.Contains(ListItem.MPAA,France:-18) | String.Contains(ListItem.MPAA,Interdit aux moins de 18 ans)">csa18.png</value>
		<value condition="String.Contains(ListItem.MPAA,전체)">KR_Certificate_All.png</value>
		<value condition="String.Contains(ListItem.MPAA,12세)">KR_Certificate_12.png</value>
		<value condition="String.Contains(ListItem.MPAA,15세)">KR_Certificate_15.png</value>
		<value condition="String.Contains(ListItem.MPAA,불가)">KR_Certificate_18.png</value>
		<value condition="String.Contains(ListItem.MPAA,제한)">KR_Certificate_R.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:Livre) | String.Contains(ListItem.MPAA,Livre)">MPAA_Brazil_Livre.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:10) | String.Contains(ListItem.MPAA,10 anos)">MPAA_Brazil_10.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:12) | String.Contains(ListItem.MPAA,12 anos)">MPAA_Brazil_12.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:14) | String.Contains(ListItem.MPAA,14 anos)">MPAA_Brazil_14.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:16) | String.Contains(ListItem.MPAA,16 anos)">MPAA_Brazil_16.png</value>
		<value condition="String.Contains(ListItem.MPAA,Brazil:18) | String.Contains(ListItem.MPAA,18 anos)">MPAA_Brazil_18.png</value>
		<value condition="String.Contains(ListItem.MPAA,Australia:)">$INFO[ListItem.MPAA,australia_,.png]</value>
		<value condition="String.Contains(ListItem.MPAA,NL-AL)">NL-AL.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-6)">NL-6.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-9)">NL-9.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-12)">NL-12.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-16)">NL-16.png</value>
		<value condition="String.Contains(ListItem.MPAA,NL-18)">NL-18.png</value>
		<value condition="!String.IsEmpty(VideoPlayer.MPAA)">$INFO[VideoPlayer.MPAA,,.png]</value>
		<value>NR.png</value>
	</variable>
	<variable name="ContainerAlbumLabelVar">
		<value condition="String.IsEqual(ListItem.DBTYPE,artist) + !String.IsEmpty(Container(1010).ListItem.Property(Album_Label))">$INFO[Container(1010).ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</value>
		<value condition="String.IsEqual(ListItem.DBTYPE,musicvideo) + !String.IsEmpty(Container(1060).ListItem.Property(Album_Label))">$INFO[Container(1060).ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</value>
		<value condition="!Control.HasFocus(50) + !Control.HasFocus(9002) + ControlGroup(9001).HasFocus"></value>
		<value condition="!String.IsEmpty(ListItem.Property(Album_Label))">$INFO[ListItem.Property(Album_Label),resource://resource.images.recordlabels.white/,.png]</value>
	</variable>
	<variable name="ContainerSongCodecVar">
		<value condition="!String.IsEmpty(Container.ListItem.FileExtension)">$VAR[MediaFlagsPathVar]/audiocodec/$INFO[Container.ListItem.FileExtension].png</value>
		<value condition="!Control.HasFocus(50) + !Control.HasFocus(9002) + ControlGroup(9001).HasFocus"></value>
		<value condition="!String.IsEmpty(ListItem.FileExtension)">$VAR[MediaFlagsPathVar]/audiocodec/$INFO[ListItem.FileExtension].png</value>
	</variable>
</includes>